{"id":"2f68569f76ad398a48a54f16960996b2","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"contracts/INFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\ninterface INFTCollection {\n    function mint(uint256 _amount) external payable;\n\n    function withdrawProceeds() external;\n\n    function revealedCount() external view returns(uint256);\n\n    function lastRevealed() external view returns(uint256);\n\n    function batchSize() external view returns(uint256);\n\n    function revealInterval() external view returns(uint256);\n\n    function mintCost() external view returns (uint256);\n\n    function maxSupply() external view returns (uint256);\n\n    function shouldReveal() external view returns (bool);\n\n    function revealPendingMetadata() external returns (uint256 requestId);\n\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\n\n    function setRevealInterval(uint256 _revealInterval) external;\n}\n"},"contracts/NFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\";\nimport \"./INFTCollection.sol\";\n\ncontract NFTCollection is\n    INFTCollection,\n    Ownable,\n    ERC721Enumerable,\n    VRFConsumerBaseV2,\n    KeeperCompatibleInterface\n{\n    // STRUCTS\n\n    struct Metadata {\n        uint256 startIndex;\n        uint256 endIndex;\n        uint256 entropy;\n    }\n\n    // IMMUTABLE STORAGE\n\n    uint256 private immutable MAX_SUPPLY;\n    uint256 private immutable MINT_COST;\n\n    // MUTABLE STORAGE\n\n    uint256 private s_revealedCount;\n    uint256 private s_revealBatchSize;\n    uint256 private s_revealInterval;\n    uint256 private s_lastRevealed = block.timestamp;\n    bool private s_revealInProgress;\n    Metadata[] private s_metadatas;\n\n    // VRF CONSTANTS & IMMUTABLE\n\n    uint16 private constant VRF_REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant VRF_NUM_WORDS = 1;\n\n    VRFCoordinatorV2Interface private immutable VRF_COORDINATOR_V2;\n    uint64 private immutable VRF_SUBSCRIPTION_ID;\n    bytes32 private immutable VRF_GAS_LANE;\n    uint32 private immutable VRF_CALLBACK_GAS_LIMIT;\n\n    // EVENTS\n\n    event BatchRevealRequested(uint256 requestId);\n    event BatchRevealFinished(uint256 startIndex, uint256 endIndex);\n\n    // ERRORS\n\n    error InvalidAmount();\n    error MaxSupplyReached();\n    error InsufficientFunds();\n    error RevealCriteriaNotMet();\n    error RevealInProgress();\n    error InsufficientLINK();\n    error WithdrawProceedsFailed();\n    error NonExistentToken();\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _maxSupply,\n        uint256 _mintCost,\n        uint256 _revealBatchSize,\n        uint256 _revealInterval,\n        address _vrfCoordinatorV2,\n        uint64 _vrfSubscriptionId,\n        bytes32 _vrfGasLane,\n        uint32 _vrfCallbackGasLimit\n    ) ERC721(_name, _symbol) VRFConsumerBaseV2(_vrfCoordinatorV2) {\n        MAX_SUPPLY = _maxSupply;\n        MINT_COST = _mintCost;\n        VRF_COORDINATOR_V2 = VRFCoordinatorV2Interface(_vrfCoordinatorV2);\n        VRF_SUBSCRIPTION_ID = _vrfSubscriptionId;\n        VRF_GAS_LANE = _vrfGasLane;\n        VRF_CALLBACK_GAS_LIMIT = _vrfCallbackGasLimit;\n        s_revealBatchSize = _revealBatchSize;\n        s_revealInterval = _revealInterval;\n    }\n\n    // ACTIONS\n\n    function mint(uint256 _amount) external payable override {\n        uint256 totalSupply = totalSupply();\n        if (_amount == 0) {\n            revert InvalidAmount();\n        }\n        if (totalSupply + _amount > MAX_SUPPLY) {\n            revert MaxSupplyReached();\n        }\n        if (msg.value < MINT_COST * _amount) {\n            revert InsufficientFunds();\n        }\n        for (uint256 i = 1; i <= _amount; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n    }\n\n    function withdrawProceeds() external override onlyOwner {\n        (bool sent, ) = payable(owner()).call{value: address(this).balance}(\"\");\n        if (!sent) {\n            revert WithdrawProceedsFailed();\n        }\n    }\n\n    // GETTERS\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        if (!_exists(tokenId)) {\n            revert NonExistentToken();\n        }\n        (uint256 randomness, bool metadataCleared) = _getTokenRandomness(tokenId);\n        string memory svg = _generateSVG(randomness, metadataCleared);\n        string memory svgEncoded = _svgToImageURI(svg);\n        return _formatTokenURI(svgEncoded);\n    }\n\n    function revealedCount() external view override returns (uint256) {\n        return s_revealedCount;\n    }\n\n    function lastRevealed() external view override returns (uint256) {\n        return s_lastRevealed;\n    }\n\n    function batchSize() external view override returns (uint256) {\n        return s_revealBatchSize;\n    }\n\n    function revealInterval() external view override returns (uint256) {\n        return s_revealInterval;\n    }\n\n    function mintCost() public view override returns (uint256) {\n        return MINT_COST;\n    }\n\n    function maxSupply() public view override returns (uint256) {\n        return MAX_SUPPLY;\n    }\n\n    // HELPERS\n\n    function _getTokenRandomness(uint256 tokenId)\n        internal\n        view\n        returns (uint256 randomness, bool metadataCleared)\n    {\n        for (uint256 i = 0; i < s_metadatas.length; i++) {\n            if (\n                tokenId >= s_metadatas[i].startIndex &&\n                tokenId < s_metadatas[i].endIndex\n            ) {\n                randomness = uint256(\n                    keccak256(abi.encode(s_metadatas[i].entropy, tokenId))\n                );\n                metadataCleared = true;\n            }\n        }\n    }\n\n    function _formatTokenURI(string memory imageURI)\n        internal\n        pure\n        returns (string memory)\n    {\n        return\n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(\n                        bytes(\n                            abi.encodePacked(\n                                '{',\n                                    '\"name\":\"NFT\", ',\n                                    '\"description\":\"Batch-revealed NFT!\", ',\n                                    '\"attributes\":\"\", ',\n                                    '\"image\":\"', imageURI, '\"',\n                                '}'\n                            )\n                        )\n                    )\n                )\n            );\n    }\n\n    function _generateSVG(uint256 _randomness, bool _metadataCleared)\n        internal\n        pure\n        returns (string memory)\n    {\n        string[4] memory parts;\n        parts[0] = '<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">';\n        if (_metadataCleared) {\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 54px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">';\n            string[7] memory slicedRandomness;\n            string memory randomnessString = Strings.toString(_randomness);\n\n            for (uint8 i = 0; i < 7; i++) {\n                string memory partialNumber = substring(randomnessString,i*11,(i+1)*11);\n                slicedRandomness[i] = string(\n                    abi.encodePacked(\n                        '<tspan x=\"12\" dy=\"48\">',\n                        partialNumber,\n                        \"</tspan>\"\n                    )\n                );\n            }\n            parts[2] = string(\n                abi.encodePacked(\n                    slicedRandomness[0],\n                    slicedRandomness[1],\n                    slicedRandomness[2],\n                    slicedRandomness[3],\n                    slicedRandomness[4],\n                    slicedRandomness[5],\n                    slicedRandomness[6]\n                )\n            );\n        } else {\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">';\n            parts[2] = \"?\";\n        }\n\n        parts[3] = \"</text></svg>\";\n\n        return string(abi.encodePacked(parts[0], parts[1], parts[2], parts[3]));\n    }\n\n    function _svgToImageURI(string memory svg)\n        internal\n        pure\n        returns (string memory)\n    {\n        string memory baseURL = \"data:image/svg+xml;base64,\";\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\n    }\n\n    function substring(\n        string memory str,\n        uint256 startIndex,\n        uint256 endIndex\n    ) public pure returns (string memory) {\n        bytes memory strBytes = bytes(str);\n        bytes memory result = new bytes(endIndex - startIndex);\n        for (uint256 i = startIndex; i < endIndex; i++) {\n            result[i - startIndex] = strBytes[i];\n        }\n        return string(result);\n    }\n\n    // REVEAL\n\n    function shouldReveal() public view override returns (bool) {\n        uint256 unrevealedCount = totalSupply() - s_revealedCount;\n        if (unrevealedCount == 0) {\n            return false;\n        }\n        bool batchSizeCriteria = false;\n        if (s_revealBatchSize > 0 && unrevealedCount >= s_revealBatchSize) {\n            batchSizeCriteria = true;\n        }\n        bool intervalCriteria = false;\n        if (\n            s_revealInterval > 0 &&\n            block.timestamp - s_lastRevealed > s_revealInterval\n        ) {\n            intervalCriteria = true;\n        }\n        return (batchSizeCriteria || intervalCriteria);\n    }\n\n    function revealPendingMetadata()\n        public\n        override\n        returns (uint256 requestId){\n        if (s_revealInProgress) {\n            revert RevealInProgress();\n        }\n        if (!shouldReveal()) {\n            revert RevealCriteriaNotMet();\n        }\n        requestId = VRF_COORDINATOR_V2.requestRandomWords(\n            VRF_GAS_LANE,\n            VRF_SUBSCRIPTION_ID,\n            VRF_REQUEST_CONFIRMATIONS,\n            VRF_CALLBACK_GAS_LIMIT,\n            VRF_NUM_WORDS\n        );\n        s_revealInProgress = true;\n        emit BatchRevealRequested(requestId);\n    }\n\n    function _fulfillRandomnessForMetadata(uint256 randomness) internal {\n        uint256 totalSupply = totalSupply();\n        uint256 startIndex = s_revealedCount + 1;\n        uint256 endIndex = totalSupply + 1;\n        s_metadatas.push(\n            Metadata({\n                startIndex: startIndex,\n                endIndex: endIndex,\n                entropy: randomness\n            })\n        );\n        s_revealedCount = totalSupply;\n        s_lastRevealed = block.timestamp;\n        s_revealInProgress = false;\n        emit BatchRevealFinished(startIndex, endIndex);\n    }\n\n    // VRF\n\n    function fulfillRandomWords(uint256, uint256[] memory randomWords)\n        internal\n        override\n    {\n        _fulfillRandomnessForMetadata(randomWords[0]);\n    }\n\n    // KEEPERS\n\n    function checkUpkeep(bytes calldata)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory)\n    {\n        upkeepNeeded = !s_revealInProgress && shouldReveal();\n    }\n\n    function performUpkeep(bytes calldata) external override {\n        revealPendingMetadata();\n    }\n\n    // SETTERS\n\n    function setRevealBatchSize(uint256 _revealBatchSize)\n        external\n        override\n        onlyOwner\n    {\n        s_revealBatchSize = _revealBatchSize;\n    }\n\n    function setRevealInterval(uint256 _revealInterval)\n        external\n        override\n        onlyOwner\n    {\n        s_revealInterval = _revealInterval;\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n *\n * _Available since v4.5._\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./KeeperBase.sol\";\nimport \"./interfaces/KeeperCompatibleInterface.sol\";\n\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract KeeperBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/NFTCollection.sol:341:37:\n    |\n341 |         returns (bool upkeepNeeded, bytes memory)\n    |                                     ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":10603,"file":"contracts/NFTCollection.sol","start":10591},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","exportedSymbols":{"KeeperBase":[29]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":29,"linearizedBaseContracts":[29],"name":"KeeperBase","nameLocation":"66:10:0","nodeType":"ContractDefinition","nodes":[{"id":3,"name":"OnlySimulatedBackend","nameLocation":"87:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"107:2:0"},"src":"81:29:0"},{"body":{"id":19,"nodeType":"Block","src":"286:83:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"296:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"296:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"309:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"309:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"296:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18,"nodeType":"IfStatement","src":"292:73:0","trueBody":{"id":17,"nodeType":"Block","src":"321:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":14,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"336:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"336:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16,"nodeType":"RevertStatement","src":"329:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"114:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"preventExecution","nameLocation":"253:16:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"269:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"286:0:0"},"scope":29,"src":"244:125:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":27,"nodeType":"Block","src":"530:36:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"536:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"536:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"536:18:0"},{"id":26,"nodeType":"PlaceholderStatement","src":"560:1:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"373:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":28,"name":"cannotExecute","nameLocation":"514:13:0","nodeType":"ModifierDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"527:2:0"},"src":"505:61:0","virtual":false,"visibility":"internal"}],"scope":30,"src":"57:511:0","usedErrors":[3]}],"src":"32:537:0"},"id":0},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","exportedSymbols":{"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115]},"id":39,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","file":"./KeeperBase.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":30,"src":"57:26:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","file":"./interfaces/KeeperCompatibleInterface.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":116,"src":"84:52:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":34,"name":"KeeperBase","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"176:10:1"},"id":35,"nodeType":"InheritanceSpecifier","src":"176:10:1"},{"baseName":{"id":36,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"188:25:1"},"id":37,"nodeType":"InheritanceSpecifier","src":"188:25:1"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":38,"linearizedBaseContracts":[38,115,29],"name":"KeeperCompatible","nameLocation":"156:16:1","nodeType":"ContractDefinition","nodes":[],"scope":39,"src":"138:78:1","usedErrors":[3]}],"src":"32:185:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[96]},"id":97,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":40,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":96,"linearizedBaseContracts":[96],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"id":47,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":49,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":96,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":59,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":55,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":58,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":60,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":60,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":96,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":69,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":69,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":69,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":96,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":94,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":77,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":79,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":88,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":87,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":82,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":84,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":81,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":90,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":91,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":89,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":95,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":95,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":95,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":96,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":97,"src":"5333:1543:2","usedErrors":[47]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":98,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":115,"linearizedBaseContracts":[115],"name":"KeeperCompatibleInterface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"97:985:3","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1094:11:3","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"checkData","nameLocation":"1121:9:3","nodeType":"VariableDeclaration","scope":108,"src":"1106:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":100,"name":"bytes","nodeType":"ElementaryTypeName","src":"1106:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1105:26:3"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1155:12:3","nodeType":"VariableDeclaration","scope":108,"src":"1150:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103,"name":"bool","nodeType":"ElementaryTypeName","src":"1150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"performData","nameLocation":"1182:11:3","nodeType":"VariableDeclaration","scope":108,"src":"1169:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":105,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1149:45:3"},"scope":115,"src":"1085:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1199:1003:3","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2214:13:3","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"performData","nameLocation":"2243:11:3","nodeType":"VariableDeclaration","scope":114,"src":"2228:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2228:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2227:28:3"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2264:0:3"},"scope":115,"src":"2205:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":116,"src":"57:2210:3","usedErrors":[]}],"src":"32:2236:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[204]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":204,"linearizedBaseContracts":[204],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"97:267:4","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:4","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"392:2:4"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"437:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":120,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"451:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":122,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"465:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":125,"nodeType":"ArrayTypeName","src":"465:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:4"},"scope":204,"src":"367:121:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"492:1511:4","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:4","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:4","nodeType":"VariableDeclaration","scope":144,"src":"2039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"subId","nameLocation":"2067:5:4","nodeType":"VariableDeclaration","scope":144,"src":"2060:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":132,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:4","nodeType":"VariableDeclaration","scope":144,"src":"2078:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:4","nodeType":"VariableDeclaration","scope":144,"src":"2118:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":136,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:4","nodeType":"VariableDeclaration","scope":144,"src":"2147:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":138,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:4"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:4","nodeType":"VariableDeclaration","scope":144,"src":"2185:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:4"},"scope":204,"src":"2006:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2208:384:4","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:4","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"2622:2:4"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"subId","nameLocation":"2650:5:4","nodeType":"VariableDeclaration","scope":150,"src":"2643:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":147,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:4"},"scope":204,"src":"2595:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"2661:381:4","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"subId","nameLocation":"3077:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3070:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":152,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:4"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"balance","nameLocation":"3133:7:4","nodeType":"VariableDeclaration","scope":165,"src":"3126:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":155,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:4","nodeType":"VariableDeclaration","scope":165,"src":"3148:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":157,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"3179:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:4","nodeType":"VariableDeclaration","scope":165,"src":"3192:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":162,"nodeType":"ArrayTypeName","src":"3192:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:4"},"scope":204,"src":"3045:180:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"3229:164:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:4","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"subId","nameLocation":"3445:5:4","nodeType":"VariableDeclaration","scope":173,"src":"3438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":167,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:4","nodeType":"VariableDeclaration","scope":173,"src":"3452:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:4"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"3478:0:4"},"scope":204,"src":"3396:83:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"3483:212:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":179,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:4","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"subId","nameLocation":"3746:5:4","nodeType":"VariableDeclaration","scope":179,"src":"3739:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":175,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:4"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"3761:0:4"},"scope":204,"src":"3698:64:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"3766:170:4","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:4","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"subId","nameLocation":"3967:5:4","nodeType":"VariableDeclaration","scope":187,"src":"3960:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":181,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:4","nodeType":"VariableDeclaration","scope":187,"src":"3974:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:4"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"4000:0:4"},"scope":204,"src":"3939:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"4005:172:4","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:4","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"subId","nameLocation":"4211:5:4","nodeType":"VariableDeclaration","scope":195,"src":"4204:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":189,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:4","nodeType":"VariableDeclaration","scope":195,"src":"4218:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:4"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"4244:0:4"},"scope":204,"src":"4180:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4249:140:4","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:4","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"subId","nameLocation":"4427:5:4","nodeType":"VariableDeclaration","scope":203,"src":"4420:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"to","nameLocation":"4442:2:4","nodeType":"VariableDeclaration","scope":203,"src":"4434:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:4"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"4454:0:4"},"scope":204,"src":"4392:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":205,"src":"57:4400:4","usedErrors":[]}],"src":"32:4426:4"},"id":4},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2078],"Ownable":[317]},"id":318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":2079,"src":"127:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":209,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"683:7:5"},"id":210,"nodeType":"InheritanceSpecifier","src":"683:7:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"159:494:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":317,"linearizedBaseContracts":[317,2078],"name":"Ownable","nameLocation":"672:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":212,"mutability":"mutable","name":"_owner","nameLocation":"713:6:5","nodeType":"VariableDeclaration","scope":317,"src":"697:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":218,"name":"OwnershipTransferred","nameLocation":"732:20:5","nodeType":"EventDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:5","nodeType":"VariableDeclaration","scope":218,"src":"753:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:5","nodeType":"VariableDeclaration","scope":218,"src":"784:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:5"},"src":"726:84:5"},{"body":{"id":227,"nodeType":"Block","src":"926:49:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"955:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":222,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"936:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"936:32:5"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"816:91:5","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":228,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"923:2:5"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"926:0:5"},"scope":317,"src":"912:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"1084:41:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1094:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"ExpressionStatement","src":"1094:13:5"},{"id":234,"nodeType":"PlaceholderStatement","src":"1117:1:5"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"981:77:5","text":" @dev Throws if called by any account other than the owner."},"id":236,"name":"onlyOwner","nameLocation":"1072:9:5","nodeType":"ModifierDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"1081:2:5"},"src":"1063:62:5","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"1256:30:5","statements":[{"expression":{"id":242,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1273:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":241,"id":243,"nodeType":"Return","src":"1266:13:5"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"1131:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":245,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:5","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"1215:2:5"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"1247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:5"},"scope":317,"src":"1201:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":258,"nodeType":"Block","src":"1404:85:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1422:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":252,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1433:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"1414:68:5"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"1292:62:5","text":" @dev Throws if the sender is not the owner."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:5","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"1379:2:5"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1404:0:5"},"scope":317,"src":"1359:130:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":272,"nodeType":"Block","src":"1885:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:5","typeDescriptions":{}}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":265,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1895:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"1895:30:5"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1495:331:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":273,"implemented":true,"kind":"function","modifiers":[{"id":263,"kind":"modifierInvocation","modifierName":{"id":262,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"1875:9:5"},"nodeType":"ModifierInvocation","src":"1875:9:5"}],"name":"renounceOwnership","nameLocation":"1840:17:5","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"1857:2:5"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"1885:0:5"},"scope":317,"src":"1831:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":295,"nodeType":"Block","src":"2151:128:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":282,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2169:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:5","typeDescriptions":{}}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"2161:73:5"},{"expression":{"arguments":[{"id":292,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2263:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2244:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"2244:28:5"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1938:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":296,"implemented":true,"kind":"function","modifiers":[{"id":279,"kind":"modifierInvocation","modifierName":{"id":278,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"2141:9:5"},"nodeType":"ModifierInvocation","src":"2141:9:5"}],"name":"transferOwnership","nameLocation":"2090:17:5","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:5","nodeType":"VariableDeclaration","scope":296,"src":"2108:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:5"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2151:0:5"},"scope":317,"src":"2081:198:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":315,"nodeType":"Block","src":"2496:124:5","statements":[{"assignments":[303],"declarations":[{"constant":false,"id":303,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:5","nodeType":"VariableDeclaration","scope":315,"src":"2506:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":305,"initialValue":{"id":304,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:5"},{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":306,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"2541:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":307,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2550:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":309,"nodeType":"ExpressionStatement","src":"2541:17:5"},{"eventCall":{"arguments":[{"id":311,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2594:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":312,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2604:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":310,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2573:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"2568:45:5"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"2285:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":316,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:5","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:5","nodeType":"VariableDeclaration","scope":316,"src":"2461:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:5"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"2496:0:5"},"scope":317,"src":"2433:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":318,"src":"654:1968:5","usedErrors":[]}],"src":"102:2521:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2009],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"IERC165":[2340],"IERC721":[1300],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"Strings":[2304]},"id":1185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":319,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1301,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1319,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1715,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2010,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2079,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2305,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2329,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":328,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"647:7:6"},"id":329,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":330,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"656:6:6"},"id":331,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":332,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"664:7:6"},"id":333,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":334,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"673:15:6"},"id":335,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1184,"linearizedBaseContracts":[1184,1714,1300,2328,2340,2078],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"id":338,"libraryName":{"id":336,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":341,"libraryName":{"id":339,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2304,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":343,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":1184,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":342,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":345,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":349,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":348,"keyType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":353,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":1184,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":352,"keyType":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":357,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":1184,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":356,"keyType":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":363,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":1184,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":362,"keyType":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":361,"keyType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":360,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":379,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":371,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":372,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":374,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":375,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":376,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":378,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":380,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":380,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":365,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":380,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":1184,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2327,2339],"body":{"id":410,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":393,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1300_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1300_$","typeString":"type(contract IERC721)"}],"id":392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1300","typeString":"type(contract IERC721)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":399,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1714_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1714_$","typeString":"type(contract IERC721Metadata)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1714","typeString":"type(contract IERC721Metadata)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":406,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":404,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1184_$","typeString":"type(contract super ERC721)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":390,"id":409,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":411,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":387,"nodeType":"OverrideSpecifier","overrides":[{"id":385,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"1646:6:6"},{"id":386,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":411,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":382,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":1184,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1225],"body":{"id":434,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":430,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":432,"indexExpression":{"id":431,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":419,"id":433,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":416,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":435,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":1184,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1233],"body":{"id":462,"nodeType":"Block","src":"2271:137:6","statements":[{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":462,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":449,"initialValue":{"baseExpression":{"id":446,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2297:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":448,"indexExpression":{"id":447,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2305:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2331:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:6","typeDescriptions":{}}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"2323:56:6"},{"expression":{"id":460,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2396:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":461,"nodeType":"Return","src":"2389:12:6"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":440,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":463,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":1184,"src":"2190:218:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1699],"body":{"id":472,"nodeType":"Block","src":"2539:29:6","statements":[{"expression":{"id":470,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2556:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":469,"id":471,"nodeType":"Return","src":"2549:12:6"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2414:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":473,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:6","nodeType":"FunctionDefinition","overrides":{"id":466,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:6"},"parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2483:2:6"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"2524:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":467,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:6"},"scope":1184,"src":"2470:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1705],"body":{"id":482,"nodeType":"Block","src":"2703:31:6","statements":[{"expression":{"id":480,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2720:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":479,"id":481,"nodeType":"Return","src":"2713:14:6"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"2574:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:6","nodeType":"FunctionDefinition","overrides":{"id":476,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:6"},"parameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"2647:2:6"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2688:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:6"},"scope":1184,"src":"2632:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1713],"body":{"id":521,"nodeType":"Block","src":"2888:188:6","statements":[{"expression":{"arguments":[{"id":493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2898:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"2898:23:6"},{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:6","nodeType":"VariableDeclaration","scope":521,"src":"2932:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":500,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":498,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":503,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2989:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":501,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:6","typeDescriptions":{}}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:6","trueExpression":{"arguments":[{"arguments":[{"id":512,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3035:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3044:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2166,"src":"3044:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":510,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:6","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":491,"id":520,"nodeType":"Return","src":"2976:93:6"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2740:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:6","nodeType":"FunctionDefinition","overrides":{"id":488,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:6"},"parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:6","nodeType":"VariableDeclaration","scope":522,"src":"2818:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:6"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"2873:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":489,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:6"},"scope":1184,"src":"2800:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":530,"nodeType":"Block","src":"3384:26:6","statements":[{"expression":{"hexValue":"","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":527,"id":529,"nodeType":"Return","src":"3394:9:6"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3082:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:6","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"3335:2:6"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":531,"src":"3369:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:6"},"scope":1184,"src":"3318:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1273],"body":{"id":573,"nodeType":"Block","src":"3537:337:6","statements":[{"assignments":[541],"declarations":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3555:5:6","nodeType":"VariableDeclaration","scope":573,"src":"3547:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":546,"initialValue":{"arguments":[{"id":544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":542,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3563:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"3563:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3604:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3610:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"3596:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":555,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3685:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3701:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3727:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3734:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":559,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"3710:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"3664:171:6"},{"expression":{"arguments":[{"id":569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":568,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"3416:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:6","nodeType":"FunctionDefinition","overrides":{"id":538,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:6"},"parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"3492:2:6","nodeType":"VariableDeclaration","scope":574,"src":"3484:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:6","nodeType":"VariableDeclaration","scope":574,"src":"3496:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:6"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"3537:0:6"},"scope":1184,"src":"3467:407:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1289],"body":{"id":591,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":587,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":589,"indexExpression":{"id":588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":582,"id":590,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":592,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":592,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":1184,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1281],"body":{"id":608,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":602,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":604,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":601,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":599,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":609,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":609,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":596,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":1184,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1299],"body":{"id":626,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":620,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":622,"indexExpression":{"id":621,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":624,"indexExpression":{"id":623,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":619,"id":625,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":627,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":616,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":627,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":627,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":1184,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1265],"body":{"id":653,"nodeType":"Block","src":"4731:208:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4820:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":639,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4801:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"4793:100:6"},{"expression":{"arguments":[{"id":648,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4914:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4920:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4904:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"4904:28:6"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":636,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:6"},"parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"from","nameLocation":"4651:4:6","nodeType":"VariableDeclaration","scope":654,"src":"4643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"to","nameLocation":"4673:2:6","nodeType":"VariableDeclaration","scope":654,"src":"4665:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:6","nodeType":"VariableDeclaration","scope":654,"src":"4685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:6"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"4731:0:6"},"scope":1184,"src":"4612:327:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1255],"body":{"id":672,"nodeType":"Block","src":"5128:56:6","statements":[{"expression":{"arguments":[{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5155:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5161:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"5165:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":665,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[673,703],"referencedDeclaration":703,"src":"5138:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"5138:39:6"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"4945:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":673,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:6","nodeType":"FunctionDefinition","overrides":{"id":663,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:6"},"parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"from","nameLocation":"5048:4:6","nodeType":"VariableDeclaration","scope":673,"src":"5040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"5070:2:6","nodeType":"VariableDeclaration","scope":673,"src":"5062:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:6","nodeType":"VariableDeclaration","scope":673,"src":"5082:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:6"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"5128:0:6"},"scope":1184,"src":"5005:179:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1245],"body":{"id":702,"nodeType":"Block","src":"5400:165:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":688,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5437:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5451:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5418:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"5410:100:6"},{"expression":{"arguments":[{"id":696,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5553:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":695,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5520:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"5520:38:6"}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"5190:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:6","nodeType":"FunctionDefinition","overrides":{"id":684,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:6"},"parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"from","nameLocation":"5293:4:6","nodeType":"VariableDeclaration","scope":703,"src":"5285:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"to","nameLocation":"5315:2:6","nodeType":"VariableDeclaration","scope":703,"src":"5307:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:6","nodeType":"VariableDeclaration","scope":703,"src":"5327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"data","nameLocation":"5365:4:6","nodeType":"VariableDeclaration","scope":703,"src":"5352:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:6"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"5400:0:6"},"scope":1184,"src":"5250:315:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"6566:165:6","statements":[{"expression":{"arguments":[{"id":716,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6586:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"6592:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":715,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6576:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"6576:28:6"},{"expression":{"arguments":[{"arguments":[{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6645:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"6651:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":726,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6664:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":722,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6622:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"6614:110:6"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"5571:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:6","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"from","nameLocation":"6466:4:6","nodeType":"VariableDeclaration","scope":732,"src":"6458:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"to","nameLocation":"6488:2:6","nodeType":"VariableDeclaration","scope":732,"src":"6480:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:6","nodeType":"VariableDeclaration","scope":732,"src":"6500:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6538:4:6","nodeType":"VariableDeclaration","scope":732,"src":"6525:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:6"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"6566:0:6"},"scope":1184,"src":"6426:305:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"7105:54:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":740,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"7122:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":742,"indexExpression":{"id":741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"7130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:6","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":739,"id":748,"nodeType":"Return","src":"7115:37:6"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"6737:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:6","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:6","nodeType":"VariableDeclaration","scope":750,"src":"7051:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:6"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"7099:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:6"},"scope":1184,"src":"7034:125:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"7416:162:6","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"owner","nameLocation":"7434:5:6","nodeType":"VariableDeclaration","scope":783,"src":"7426:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":764,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":762,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"7442:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7483:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7494:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":771,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7520:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"7503:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":776,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":775,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7539:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7563:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":759,"id":782,"nodeType":"Return","src":"7475:96:6"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"7165:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:6","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"spender","nameLocation":"7353:7:6","nodeType":"VariableDeclaration","scope":784,"src":"7345:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:6","nodeType":"VariableDeclaration","scope":784,"src":"7362:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:6"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"7410:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:6"},"scope":1184,"src":"7317:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"7973:43:6","statements":[{"expression":{"arguments":[{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7993:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":792,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[799,828],"referencedDeclaration":828,"src":"7983:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"7983:26:6"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"7584:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:6","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"7935:2:6","nodeType":"VariableDeclaration","scope":799,"src":"7927:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:6","nodeType":"VariableDeclaration","scope":799,"src":"7939:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:6"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"7973:0:6"},"scope":1184,"src":"7908:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"8351:195:6","statements":[{"expression":{"arguments":[{"id":810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8367:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8361:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"8361:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:6","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8445:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8449:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8458:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":815,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"8410:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"8389:150:6"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"8022:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:6","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"to","nameLocation":"8273:2:6","nodeType":"VariableDeclaration","scope":828,"src":"8265:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:6","nodeType":"VariableDeclaration","scope":828,"src":"8285:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"data","nameLocation":"8323:4:6","nodeType":"VariableDeclaration","scope":828,"src":"8310:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:6"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"8351:0:6"},"scope":1184,"src":"8237:309:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"8929:366:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8947:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:6","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"8939:61:6"},{"expression":{"arguments":[{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:6","subExpression":{"arguments":[{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9019:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"9010:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:6","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9112:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":854,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"9079:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"9079:45:6"},{"expression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":863,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"9135:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":865,"indexExpression":{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9145:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ExpressionStatement","src":"9135:18:6"},{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":869,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9163:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":871,"indexExpression":{"id":870,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9182:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":874,"nodeType":"ExpressionStatement","src":"9163:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:6","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9221:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9225:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":875,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"9200:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"EmitStatement","src":"9195:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:6","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9276:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":884,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"9244:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"9244:44:6"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"8552:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"8891:2:6","nodeType":"VariableDeclaration","scope":894,"src":"8883:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:6","nodeType":"VariableDeclaration","scope":894,"src":"8895:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:6"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"8929:0:6"},"scope":1184,"src":"8868:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"9561:357:6","statements":[{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"owner","nameLocation":"9579:5:6","nodeType":"VariableDeclaration","scope":953,"src":"9571:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"id":904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":902,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"9587:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"9587:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:6"},{"expression":{"arguments":[{"id":908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9642:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:6","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9661:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"9621:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"9621:48:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:6","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"9707:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"9707:29:6"},{"expression":{"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":924,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"9747:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":926,"indexExpression":{"id":925,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9757:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ExpressionStatement","src":"9747:21:6"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:6","subExpression":{"baseExpression":{"id":930,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9785:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":932,"indexExpression":{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9793:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"9778:23:6"},{"eventCall":{"arguments":[{"id":936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9826:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:6","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9845:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":935,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"9817:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"EmitStatement","src":"9812:41:6"},{"expression":{"arguments":[{"id":945,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9884:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:6","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"9864:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"9864:47:6"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"9301:206:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:6","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:6","nodeType":"VariableDeclaration","scope":954,"src":"9527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"9561:0:6"},"scope":1184,"src":"9512:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"10351:496:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10384:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":965,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"10369:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"10369:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10396:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"10361:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10460:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:6","typeDescriptions":{}}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"10452:65:6"},{"expression":{"arguments":[{"id":985,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10549:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10555:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10559:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":984,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"10528:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"10528:39:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:6","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10650:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":990,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"10629:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"10629:29:6"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":998,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"10669:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1000,"indexExpression":{"id":999,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10679:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1003,"nodeType":"ExpressionStatement","src":"10669:20:6"},{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1004,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"10699:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1006,"indexExpression":{"id":1005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10709:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ExpressionStatement","src":"10699:18:6"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1010,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1012,"indexExpression":{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10735:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10746:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1015,"nodeType":"ExpressionStatement","src":"10727:21:6"},{"eventCall":{"arguments":[{"id":1017,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10773:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10779:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"10764:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"EmitStatement","src":"10759:32:6"},{"expression":{"arguments":[{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10822:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10828:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10832:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1022,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"10802:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"ExpressionStatement","src":"10802:38:6"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"9924:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"10278:4:6","nodeType":"VariableDeclaration","scope":1029,"src":"10270:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"10300:2:6","nodeType":"VariableDeclaration","scope":1029,"src":"10292:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:6","nodeType":"VariableDeclaration","scope":1029,"src":"10312:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:6"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"10351:0:6"},"scope":1184,"src":"10242:605:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1052,"nodeType":"Block","src":"11023:107:6","statements":[{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1037,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"11033:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1039,"indexExpression":{"id":1038,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11049:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1040,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11060:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1042,"nodeType":"ExpressionStatement","src":"11033:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1044,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11086:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"11086:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11111:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11077:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"EmitStatement","src":"11072:51:6"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"10853:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:6","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"to","nameLocation":"10985:2:6","nodeType":"VariableDeclaration","scope":1053,"src":"10977:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:6","nodeType":"VariableDeclaration","scope":1053,"src":"10989:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:6"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"11023:0:6"},"scope":1184,"src":"10959:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"11389:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11407:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1065,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11416:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"11399:55:6"},{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1070,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"11464:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1073,"indexExpression":{"id":1071,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11483:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1074,"indexExpression":{"id":1072,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11490:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1075,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11502:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1077,"nodeType":"ExpressionStatement","src":"11464:46:6"},{"eventCall":{"arguments":[{"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11540:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11547:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11557:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1078,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"11525:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"EmitStatement","src":"11520:46:6"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"11136:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:6","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"owner","nameLocation":"11311:5:6","nodeType":"VariableDeclaration","scope":1085,"src":"11303:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"operator","nameLocation":"11334:8:6","nodeType":"VariableDeclaration","scope":1085,"src":"11326:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"approved","nameLocation":"11357:8:6","nodeType":"VariableDeclaration","scope":1085,"src":"11352:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:6"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"11389:0:6"},"scope":1184,"src":"11266:307:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"11720:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"11746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11738:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"11730:53:6"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"11579:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:6","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:6","nodeType":"VariableDeclaration","scope":1099,"src":"11681:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:6"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"11720:0:6"},"scope":1184,"src":"11657:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1160,"nodeType":"Block","src":"12497:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12511:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"12511:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1158,"nodeType":"Block","src":"13131:36:6","statements":[{"expression":{"hexValue":"74727565","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1112,"id":1157,"nodeType":"Return","src":"13145:11:6"}]},"id":1159,"nodeType":"IfStatement","src":"12507:660:6","trueBody":{"id":1155,"nodeType":"Block","src":"12528:597:6","statements":[{"clauses":[{"block":{"id":1135,"nodeType":"Block","src":"12642:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"12667:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1130,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12677:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1318_$","typeString":"type(contract IERC721Receiver)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"12677:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1112,"id":1134,"nodeType":"Return","src":"12660:58:6"}]},"errorName":"","id":1136,"nodeType":"TryCatchClause","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"retval","nameLocation":"12634:6:6","nodeType":"VariableDeclaration","scope":1136,"src":"12627:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1126,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:6"},"src":"12618:115:6"},{"block":{"id":1152,"nodeType":"Block","src":"12762:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1140,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"12784:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1150,"nodeType":"Block","src":"12911:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:6"},"nodeType":"YulFunctionCall","src":"13030:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:6"},"nodeType":"YulFunctionCall","src":"13047:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:6"},"nodeType":"YulFunctionCall","src":"13023:38:6"},"nodeType":"YulExpressionStatement","src":"13023:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1138,"isOffset":false,"isSlot":false,"src":"13038:6:6","valueSize":1},{"declaration":1138,"isOffset":false,"isSlot":false,"src":"13053:6:6","valueSize":1}],"id":1149,"nodeType":"InlineAssembly","src":"12988:95:6"}]},"id":1151,"nodeType":"IfStatement","src":"12780:321:6","trueBody":{"id":1148,"nodeType":"Block","src":"12804:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1144,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"12826:60:6"}]}}]},"errorName":"","id":1153,"nodeType":"TryCatchClause","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"reason","nameLocation":"12754:6:6","nodeType":"VariableDeclaration","scope":1153,"src":"12741:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:6"},"src":"12734:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1120,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"12583:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12597:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"12603:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1124,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12612:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12562:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12546:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1318_$","typeString":"type(contract IERC721Receiver)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1318","typeString":"contract IERC721Receiver"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"12546:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1154,"nodeType":"TryStatement","src":"12542:573:6"}]}}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"11796:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1161,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:6","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"12391:4:6","nodeType":"VariableDeclaration","scope":1161,"src":"12383:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"12413:2:6","nodeType":"VariableDeclaration","scope":1161,"src":"12405:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:6","nodeType":"VariableDeclaration","scope":1161,"src":"12425:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"data","nameLocation":"12463:4:6","nodeType":"VariableDeclaration","scope":1161,"src":"12450:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:6"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"12491:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:6"},"scope":1184,"src":"12342:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1171,"nodeType":"Block","src":"13849:2:6","statements":[]},"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"13179:545:6","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:6","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"from","nameLocation":"13776:4:6","nodeType":"VariableDeclaration","scope":1172,"src":"13768:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"13798:2:6","nodeType":"VariableDeclaration","scope":1172,"src":"13790:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:6","nodeType":"VariableDeclaration","scope":1172,"src":"13810:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:6"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"13849:0:6"},"scope":1184,"src":"13729:122:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"14342:2:6","statements":[]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"13857:361:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:6","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"from","nameLocation":"14269:4:6","nodeType":"VariableDeclaration","scope":1183,"src":"14261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"to","nameLocation":"14291:2:6","nodeType":"VariableDeclaration","scope":1183,"src":"14283:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:6","nodeType":"VariableDeclaration","scope":1183,"src":"14303:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:6"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"14342:0:6"},"scope":1184,"src":"14223:121:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1185,"src":"628:13718:6","usedErrors":[]}],"src":"107:14240:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300]},"id":1301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":2341,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1189,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"271:7:7"},"id":1190,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1300,"linearizedBaseContracts":[1300,2340],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1199,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":1199,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":1199,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":1199,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1208,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":1208,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":1208,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":1208,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1217,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":1217,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":1217,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":1217,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1225,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":1225,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":1225,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":1300,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1233,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":1233,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":1233,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":1300,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1245,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":1245,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":1245,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":1245,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":1245,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":1300,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":1255,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":1255,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":1255,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":1300,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"2758:504:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"from","nameLocation":"3306:4:7","nodeType":"VariableDeclaration","scope":1265,"src":"3298:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"to","nameLocation":"3328:2:7","nodeType":"VariableDeclaration","scope":1265,"src":"3320:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:7","nodeType":"VariableDeclaration","scope":1265,"src":"3340:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:7"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"3370:0:7"},"scope":1300,"src":"3267:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"3377:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1273,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:7","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"to","nameLocation":"3859:2:7","nodeType":"VariableDeclaration","scope":1273,"src":"3851:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:7","nodeType":"VariableDeclaration","scope":1273,"src":"3863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:7"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"3888:0:7"},"scope":1300,"src":"3834:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"3895:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1281,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:7","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"operator","nameLocation":"4244:8:7","nodeType":"VariableDeclaration","scope":1281,"src":"4236:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:7","nodeType":"VariableDeclaration","scope":1281,"src":"4254:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:7"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"4278:0:7"},"scope":1300,"src":"4209:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"4285:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1289,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:7","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:7","nodeType":"VariableDeclaration","scope":1289,"src":"4450:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:7"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"operator","nameLocation":"4498:8:7","nodeType":"VariableDeclaration","scope":1289,"src":"4490:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:7"},"scope":1300,"src":"4429:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"4514:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1299,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:7","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"owner","nameLocation":"4691:5:7","nodeType":"VariableDeclaration","scope":1299,"src":"4683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"operator","nameLocation":"4706:8:7","nodeType":"VariableDeclaration","scope":1299,"src":"4698:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:7"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1299,"src":"4739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:7"},"scope":1300,"src":"4657:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1301,"src":"250:4497:7","usedErrors":[]}],"src":"108:4640:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1318]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1302,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":1317,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":1317,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":1317,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":1317,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1311,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1314,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":1318,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1319,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[2009],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"ERC721Enumerable":[1656],"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"Strings":[2304]},"id":1657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1657,"sourceUnit":1185,"src":"138:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1657,"sourceUnit":1688,"src":"162:33:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1324,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"435:6:9"},"id":1325,"nodeType":"InheritanceSpecifier","src":"435:6:9"},{"baseName":{"id":1326,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"443:17:9"},"id":1327,"nodeType":"InheritanceSpecifier","src":"443:17:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"197:199:9","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":1656,"linearizedBaseContracts":[1656,1687,1184,1714,1300,2328,2340,2078],"name":"ERC721Enumerable","nameLocation":"415:16:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1333,"mutability":"mutable","name":"_ownedTokens","nameLocation":"576:12:9","nodeType":"VariableDeclaration","scope":1656,"src":"520:68:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1332,"keyType":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"520:47:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":1331,"keyType":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"539:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1337,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"694:17:9","nodeType":"VariableDeclaration","scope":1656,"src":"658:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1336,"keyType":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"658:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1340,"mutability":"mutable","name":"_allTokens","nameLocation":"790:10:9","nodeType":"VariableDeclaration","scope":1656,"src":"772:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ArrayTypeName","src":"772:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1344,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"907:15:9","nodeType":"VariableDeclaration","scope":1656,"src":"871:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1343,"keyType":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[411,2339],"body":{"id":1367,"nodeType":"Block","src":"1098:114:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1115:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1357,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1135:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1687_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1687_$","typeString":"type(contract IERC721Enumerable)"}],"id":1356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1130:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1687","typeString":"type(contract IERC721Enumerable)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1130:35:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1115:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1363,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1193:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1361,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1169:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1656_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":411,"src":"1169:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1169:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1115:90:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1354,"id":1366,"nodeType":"Return","src":"1108:97:9"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"929:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"999:17:9","nodeType":"FunctionDefinition","overrides":{"id":1351,"nodeType":"OverrideSpecifier","overrides":[{"id":1349,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"1066:7:9"},{"id":1350,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"1075:6:9"}],"src":"1057:25:9"},"parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"interfaceId","nameLocation":"1024:11:9","nodeType":"VariableDeclaration","scope":1368,"src":"1017:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1017:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1016:20:9"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"1092:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"1092:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1091:6:9"},"scope":1656,"src":"990:222:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1395,"nodeType":"Block","src":"1397:147:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":1383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1440:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1381,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"1423:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"1423:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1423:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1415:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":1379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1388,"nodeType":"ExpressionStatement","src":"1407:87:9"},{"expression":{"baseExpression":{"baseExpression":{"id":1389,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"1511:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1391,"indexExpression":{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1524:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1393,"indexExpression":{"id":1392,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1531:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1394,"nodeType":"Return","src":"1504:33:9"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"1218:68:9","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1300:19:9","nodeType":"FunctionDefinition","overrides":{"id":1375,"nodeType":"OverrideSpecifier","overrides":[],"src":"1370:8:9"},"parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"owner","nameLocation":"1328:5:9","nodeType":"VariableDeclaration","scope":1396,"src":"1320:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"index","nameLocation":"1343:5:9","nodeType":"VariableDeclaration","scope":1396,"src":"1335:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:30:9"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1388:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:9:9"},"scope":1656,"src":"1291:253:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1668],"body":{"id":1406,"nodeType":"Block","src":"1685:41:9","statements":[{"expression":{"expression":{"id":1403,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1702:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1402,"id":1405,"nodeType":"Return","src":"1695:24:9"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1550:60:9","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1624:11:9","nodeType":"FunctionDefinition","overrides":{"id":1399,"nodeType":"OverrideSpecifier","overrides":[],"src":"1658:8:9"},"parameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"1635:2:9"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"1676:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1675:9:9"},"scope":1656,"src":"1615:111:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1429,"nodeType":"Block","src":"1882:146:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1900:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1418,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"1908:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$1656_$","typeString":"type(contract ERC721Enumerable)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1908:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1908:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1900:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1892:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"1892:95:9"},{"expression":{"baseExpression":{"id":1425,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2004:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1427,"indexExpression":{"id":1426,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2015:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2004:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1415,"id":1428,"nodeType":"Return","src":"1997:24:9"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"1732:61:9","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1807:12:9","nodeType":"FunctionDefinition","overrides":{"id":1412,"nodeType":"OverrideSpecifier","overrides":[],"src":"1855:8:9"},"parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"index","nameLocation":"1828:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"1820:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1819:15:9"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1430,"src":"1873:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1872:9:9"},"scope":1656,"src":"1798:230:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1172],"body":{"id":1493,"nodeType":"Block","src":"2753:443:9","statements":[{"expression":{"arguments":[{"id":1444,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2790:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2796:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2800:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1441,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2763:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1656_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"2763:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2763:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"2763:45:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2823:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:9","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2823:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2918:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2926:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2918:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1469,"nodeType":"IfStatement","src":"2914:88:9","trueBody":{"id":1468,"nodeType":"Block","src":"2930:72:9","statements":[{"expression":{"arguments":[{"id":1464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2977:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2944:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2944:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"2944:47:9"}]}},"id":1470,"nodeType":"IfStatement","src":"2819:183:9","trueBody":{"id":1459,"nodeType":"Block","src":"2843:65:9","statements":[{"expression":{"arguments":[{"id":1456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2889:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1455,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2857:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"2857:40:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3015:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3021:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:9","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3021:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3015:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3113:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1483,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3119:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3113:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"3109:81:9","trueBody":{"id":1490,"nodeType":"Block","src":"3125:65:9","statements":[{"expression":{"arguments":[{"id":1486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3167:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1485,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"3139:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"3139:40:9"}]}},"id":1492,"nodeType":"IfStatement","src":"3011:179:9","trueBody":{"id":1481,"nodeType":"Block","src":"3033:70:9","statements":[{"expression":{"arguments":[{"id":1478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3084:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1477,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3047:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3047:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"3047:45:9"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"2034:585:9","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2633:20:9","nodeType":"FunctionDefinition","overrides":{"id":1439,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:9"},"parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"from","nameLocation":"2671:4:9","nodeType":"VariableDeclaration","scope":1494,"src":"2663:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"to","nameLocation":"2693:2:9","nodeType":"VariableDeclaration","scope":1494,"src":"2685:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"tokenId","nameLocation":"2713:7:9","nodeType":"VariableDeclaration","scope":1494,"src":"2705:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2653:73:9"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"2753:0:9"},"scope":1656,"src":"2624:572:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"3564:143:9","statements":[{"assignments":[1503],"declarations":[{"constant":false,"id":1503,"mutability":"mutable","name":"length","nameLocation":"3582:6:9","nodeType":"VariableDeclaration","scope":1523,"src":"3574:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"arguments":[{"id":1506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3608:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1504,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3591:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"3591:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3591:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3574:37:9"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1509,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"3621:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1512,"indexExpression":{"id":1510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3634:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1513,"indexExpression":{"id":1511,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3638:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3621:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"3621:34:9"},{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1517,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3665:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1519,"indexExpression":{"id":1518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3665:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1520,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3694:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"3665:35:9"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"3202:283:9","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3499:27:9","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"to","nameLocation":"3535:2:9","nodeType":"VariableDeclaration","scope":1524,"src":"3527:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"tokenId","nameLocation":"3547:7:9","nodeType":"VariableDeclaration","scope":1524,"src":"3539:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3526:29:9"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"3564:0:9"},"scope":1656,"src":"3490:217:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1543,"nodeType":"Block","src":"3968:95:9","statements":[{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1530,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"3978:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1532,"indexExpression":{"id":1531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3994:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3978:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1533,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4005:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4005:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3978:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"3978:44:9"},{"expression":{"arguments":[{"id":1540,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4048:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1537,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4032:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4032:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4032:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"4032:24:9"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"3713:184:9","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3911:31:9","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"tokenId","nameLocation":"3951:7:9","nodeType":"VariableDeclaration","scope":1544,"src":"3943:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3943:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3942:17:9"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3968:0:9"},"scope":1656,"src":"3902:161:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1606,"nodeType":"Block","src":"4761:889:9","statements":[{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4950:14:9","nodeType":"VariableDeclaration","scope":1606,"src":"4942:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4984:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1554,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4967:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"4967:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4967:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4967:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4942:51:9"},{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"tokenIndex","nameLocation":"5011:10:9","nodeType":"VariableDeclaration","scope":1606,"src":"5003:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1566,"initialValue":{"baseExpression":{"id":1563,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5024:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1565,"indexExpression":{"id":1564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5042:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5003:47:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5154:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1568,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5168:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1593,"nodeType":"IfStatement","src":"5150:323:9","trueBody":{"id":1592,"nodeType":"Block","src":"5184:289:9","statements":[{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"lastTokenId","nameLocation":"5206:11:9","nodeType":"VariableDeclaration","scope":1592,"src":"5198:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1577,"initialValue":{"baseExpression":{"baseExpression":{"id":1572,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5220:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1574,"indexExpression":{"id":1573,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5233:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1576,"indexExpression":{"id":1575,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5239:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5198:56:9"},{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1578,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5269:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1581,"indexExpression":{"id":1579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5282:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5269:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1582,"indexExpression":{"id":1580,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5288:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5269:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1583,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5302:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5269:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ExpressionStatement","src":"5269:44:9"},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1586,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5385:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1588,"indexExpression":{"id":1587,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5403:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5385:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5418:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5385:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"5385:43:9"}]}},{"expression":{"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5559:33:9","subExpression":{"baseExpression":{"id":1594,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5566:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1596,"indexExpression":{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5566:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"5559:33:9"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5602:41:9","subExpression":{"baseExpression":{"baseExpression":{"id":1599,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5609:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1601,"indexExpression":{"id":1600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5622:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5609:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1603,"indexExpression":{"id":1602,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5628:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5609:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"ExpressionStatement","src":"5602:41:9"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"4069:606:9","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4689:32:9","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"from","nameLocation":"4730:4:9","nodeType":"VariableDeclaration","scope":1607,"src":"4722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"tokenId","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1607,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4721:31:9"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"4761:0:9"},"scope":1656,"src":"4680:970:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1654,"nodeType":"Block","src":"6009:990:9","statements":[{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6195:14:9","nodeType":"VariableDeclaration","scope":1654,"src":"6187:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1615,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6212:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6212:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6232:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6212:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6187:46:9"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"tokenIndex","nameLocation":"6251:10:9","nodeType":"VariableDeclaration","scope":1654,"src":"6243:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1625,"initialValue":{"baseExpression":{"id":1622,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6264:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1624,"indexExpression":{"id":1623,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6243:45:9"},{"assignments":[1627],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"lastTokenId","nameLocation":"6618:11:9","nodeType":"VariableDeclaration","scope":1654,"src":"6610:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"6610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"baseExpression":{"id":1628,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6632:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1630,"indexExpression":{"id":1629,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"6643:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6610:48:9"},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1632,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6669:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1634,"indexExpression":{"id":1633,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6680:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6669:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1635,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"6694:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6669:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ExpressionStatement","src":"6669:36:9"},{"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1638,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6773:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1640,"indexExpression":{"id":1639,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"6789:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6773:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1641,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6804:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6773:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ExpressionStatement","src":"6773:41:9"},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6935:31:9","subExpression":{"baseExpression":{"id":1644,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6942:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1646,"indexExpression":{"id":1645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6958:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6942:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"ExpressionStatement","src":"6935:31:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1649,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6976:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6976:14:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6976:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"6976:16:9"}]},"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"5656:277:9","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5947:36:9","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"tokenId","nameLocation":"5992:7:9","nodeType":"VariableDeclaration","scope":1655,"src":"5984:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:17:9"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"6009:0:9"},"scope":1656,"src":"5938:1061:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1657,"src":"397:6604:9","usedErrors":[]}],"src":"113:6889:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687]},"id":1688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1658,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":1301,"src":"154:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1661,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"348:7:10"},"id":1662,"nodeType":"InheritanceSpecifier","src":"348:7:10"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"180:136:10","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1687,"linearizedBaseContracts":[1687,1300,2340],"name":"IERC721Enumerable","nameLocation":"327:17:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"362:82:10","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1668,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:10","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"469:2:10"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"495:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:10"},"scope":1687,"src":"449:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"510:171:10","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:10","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"owner","nameLocation":"723:5:10","nodeType":"VariableDeclaration","scope":1678,"src":"715:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"index","nameLocation":"738:5:10","nodeType":"VariableDeclaration","scope":1678,"src":"730:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:10"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"768:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:10"},"scope":1687,"src":"686:91:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"783:164:10","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:10","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"index","nameLocation":"982:5:10","nodeType":"VariableDeclaration","scope":1686,"src":"974:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:10"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"1012:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:10"},"scope":1687,"src":"952:69:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1688,"src":"317:706:10","usedErrors":[]}],"src":"129:895:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300],"IERC721Metadata":[1714]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1689,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":1301,"src":"137:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1692,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"326:7:11"},"id":1693,"nodeType":"InheritanceSpecifier","src":"326:7:11"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"163:133:11","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1714,"linearizedBaseContracts":[1714,1300,2340],"name":"IERC721Metadata","nameLocation":"307:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"340:58:11","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1699,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:11","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[],"src":"416:2:11"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"442:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1696,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:11"},"scope":1714,"src":"403:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"463:60:11","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1705,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:11","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"543:2:11"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"569:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1702,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:11"},"scope":1714,"src":"528:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"590:90:11","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1713,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:11","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:11","nodeType":"VariableDeclaration","scope":1713,"src":"703:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:11"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"743:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:11"},"scope":1714,"src":"685:73:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1715,"src":"297:463:11","usedErrors":[]}],"src":"112:649:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2009]},"id":2010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"126:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2009,"linearizedBaseContracts":[2009],"name":"Address","nameLocation":"202:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1731,"nodeType":"Block","src":"1241:254:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1725,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1465:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1724,"id":1730,"nodeType":"Return","src":"1458:30:12"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"216:954:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:12","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"account","nameLocation":"1203:7:12","nodeType":"VariableDeclaration","scope":1732,"src":"1195:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:12"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"1235:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:12"},"scope":2009,"src":"1175:320:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"2483:241:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1743,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}],"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:12","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2526:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"ExpressionStatement","src":"2493:73:12"},{"assignments":[1752,null],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"success","nameLocation":"2583:7:12","nodeType":"VariableDeclaration","scope":1765,"src":"2578:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1759,"initialValue":{"arguments":[{"hexValue":"","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1753,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2596:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2618:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:12"},{"expression":{"arguments":[{"id":1761,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2647:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"2639:78:12"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"1501:906:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:12","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:12","nodeType":"VariableDeclaration","scope":1766,"src":"2431:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"amount","nameLocation":"2466:6:12","nodeType":"VariableDeclaration","scope":1766,"src":"2458:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:12"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"2483:0:12"},"scope":2009,"src":"2412:312:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"3555:84:12","statements":[{"expression":{"arguments":[{"id":1777,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3585:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3593:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1776,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1783,1803],"referencedDeclaration":1803,"src":"3572:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"3565:67:12"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"2730:731:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:12","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"target","nameLocation":"3496:6:12","nodeType":"VariableDeclaration","scope":1783,"src":"3488:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"data","nameLocation":"3517:4:12","nodeType":"VariableDeclaration","scope":1783,"src":"3504:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:12"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1783,"src":"3541:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:12"},"scope":2009,"src":"3466:173:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1802,"nodeType":"Block","src":"4008:76:12","statements":[{"expression":{"arguments":[{"id":1796,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4047:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4055:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1799,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4064:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1795,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1823,1873],"referencedDeclaration":1873,"src":"4025:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1794,"id":1801,"nodeType":"Return","src":"4018:59:12"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"3645:211:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:12","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"target","nameLocation":"3900:6:12","nodeType":"VariableDeclaration","scope":1803,"src":"3892:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"data","nameLocation":"3929:4:12","nodeType":"VariableDeclaration","scope":1803,"src":"3916:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:12","nodeType":"VariableDeclaration","scope":1803,"src":"3943:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1789,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:12"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"3994:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:12"},"scope":2009,"src":"3861:223:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"4589:111:12","statements":[{"expression":{"arguments":[{"id":1816,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4628:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"4636:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4642:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1815,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1823,1873],"referencedDeclaration":1873,"src":"4606:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1814,"id":1821,"nodeType":"Return","src":"4599:94:12"}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"4090:351:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:12","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"target","nameLocation":"4494:6:12","nodeType":"VariableDeclaration","scope":1823,"src":"4486:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"data","nameLocation":"4523:4:12","nodeType":"VariableDeclaration","scope":1823,"src":"4510:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"value","nameLocation":"4545:5:12","nodeType":"VariableDeclaration","scope":1823,"src":"4537:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:12"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"4575:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1812,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:12"},"scope":2009,"src":"4446:254:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"5127:320:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1840,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:12","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"ExpressionStatement","src":"5137:81:12"},{"expression":{"arguments":[{"arguments":[{"id":1850,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5247:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1849,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"5236:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"5228:60:12"},{"assignments":[1856,1858],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"success","nameLocation":"5305:7:12","nodeType":"VariableDeclaration","scope":1872,"src":"5300:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:12","nodeType":"VariableDeclaration","scope":1872,"src":"5314:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1865,"initialValue":{"arguments":[{"id":1863,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"5367:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1859,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5341:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:12"},{"expression":{"arguments":[{"id":1867,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5406:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1868,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5415:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1869,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5427:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1866,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1836,"id":1871,"nodeType":"Return","src":"5382:58:12"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"4706:237:12","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:12","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"target","nameLocation":"4996:6:12","nodeType":"VariableDeclaration","scope":1873,"src":"4988:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"data","nameLocation":"5025:4:12","nodeType":"VariableDeclaration","scope":1873,"src":"5012:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"5047:5:12","nodeType":"VariableDeclaration","scope":1873,"src":"5039:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:12","nodeType":"VariableDeclaration","scope":1873,"src":"5062:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:12"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"5113:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:12"},"scope":2009,"src":"4948:499:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"5724:97:12","statements":[{"expression":{"arguments":[{"id":1884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5760:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5768:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1883,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1890,1925],"referencedDeclaration":1925,"src":"5741:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1882,"id":1888,"nodeType":"Return","src":"5734:80:12"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"5453:166:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:12","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"target","nameLocation":"5660:6:12","nodeType":"VariableDeclaration","scope":1890,"src":"5652:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"data","nameLocation":"5681:4:12","nodeType":"VariableDeclaration","scope":1890,"src":"5668:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:12"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"5710:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:12"},"scope":2009,"src":"5624:197:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"6163:228:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6192:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1903,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6181:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"6173:67:12"},{"assignments":[1910,1912],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"success","nameLocation":"6257:7:12","nodeType":"VariableDeclaration","scope":1924,"src":"6252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1909,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:12","nodeType":"VariableDeclaration","scope":1924,"src":"6266:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[{"id":1915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6311:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1913,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6293:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:12"},{"expression":{"arguments":[{"id":1919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"6350:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1920,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6359:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1921,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6371:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1918,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6333:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1901,"id":1923,"nodeType":"Return","src":"6326:58:12"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"5827:173:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:12","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"target","nameLocation":"6050:6:12","nodeType":"VariableDeclaration","scope":1925,"src":"6042:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"data","nameLocation":"6079:4:12","nodeType":"VariableDeclaration","scope":1925,"src":"6066:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:12","nodeType":"VariableDeclaration","scope":1925,"src":"6093:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1896,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:12"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"6149:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:12"},"scope":2009,"src":"6005:386:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"6667:101:12","statements":[{"expression":{"arguments":[{"id":1936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6705:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6713:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1935,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1942,1977],"referencedDeclaration":1977,"src":"6684:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1934,"id":1940,"nodeType":"Return","src":"6677:84:12"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"6397:168:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:12","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"target","nameLocation":"6608:6:12","nodeType":"VariableDeclaration","scope":1942,"src":"6600:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"data","nameLocation":"6629:4:12","nodeType":"VariableDeclaration","scope":1942,"src":"6616:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:12"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"6653:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1932,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:12"},"scope":2009,"src":"6570:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"7109:232:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1955,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"7127:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"7119:69:12"},{"assignments":[1962,1964],"declarations":[{"constant":false,"id":1962,"mutability":"mutable","name":"success","nameLocation":"7205:7:12","nodeType":"VariableDeclaration","scope":1976,"src":"7200:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1961,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:12","nodeType":"VariableDeclaration","scope":1976,"src":"7214:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1963,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1969,"initialValue":{"arguments":[{"id":1967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7261:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1965,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7241:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:12"},{"expression":{"arguments":[{"id":1971,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7300:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1972,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7309:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1973,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7321:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1970,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"7283:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1953,"id":1975,"nodeType":"Return","src":"7276:58:12"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"6774:175:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:12","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"target","nameLocation":"7001:6:12","nodeType":"VariableDeclaration","scope":1977,"src":"6993:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"data","nameLocation":"7030:4:12","nodeType":"VariableDeclaration","scope":1977,"src":"7017:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:12","nodeType":"VariableDeclaration","scope":1977,"src":"7044:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1948,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:12"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"7095:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1951,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:12"},"scope":2009,"src":"6954:387:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"7721:582:12","statements":[{"condition":{"id":1989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"7735:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2005,"nodeType":"Block","src":"7792:505:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1993,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7876:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2003,"nodeType":"Block","src":"8234:53:12","statements":[{"expression":{"arguments":[{"id":2000,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8259:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1999,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"8252:20:12"}]},"id":2004,"nodeType":"IfStatement","src":"7872:415:12","trueBody":{"id":1998,"nodeType":"Block","src":"7899:329:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:12","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:12"},"nodeType":"YulFunctionCall","src":"8114:17:12"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:12","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:12"},"nodeType":"YulFunctionCall","src":"8159:19:12"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:12"},"nodeType":"YulFunctionCall","src":"8152:44:12"},"nodeType":"YulExpressionStatement","src":"8152:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1982,"isOffset":false,"isSlot":false,"src":"8120:10:12","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"8167:10:12","valueSize":1}],"id":1997,"nodeType":"InlineAssembly","src":"8060:154:12"}]}}]},"id":2006,"nodeType":"IfStatement","src":"7731:566:12","trueBody":{"id":1992,"nodeType":"Block","src":"7744:42:12","statements":[{"expression":{"id":1990,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7765:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1988,"id":1991,"nodeType":"Return","src":"7758:17:12"}]}}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"7347:209:12","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:12","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"success","nameLocation":"7601:7:12","nodeType":"VariableDeclaration","scope":2008,"src":"7596:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:12","nodeType":"VariableDeclaration","scope":2008,"src":"7618:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:12","nodeType":"VariableDeclaration","scope":2008,"src":"7651:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:12"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"7707:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1986,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:12"},"scope":2009,"src":"7561:742:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2010,"src":"194:8111:12","usedErrors":[]}],"src":"101:8205:12"},"id":12},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[2056]},"id":2057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2011,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"125:105:13","text":" @dev Provides a set of functions to operate with Base64 strings.\n _Available since v4.5._"},"fullyImplemented":true,"id":2056,"linearizedBaseContracts":[2056],"name":"Base64","nameLocation":"239:6:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"252:54:13","text":" @dev Base64 Encoding/Decoding Table"},"id":2016,"mutability":"constant","name":"_TABLE","nameLocation":"336:6:13","nodeType":"VariableDeclaration","scope":2056,"src":"311:100:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2014,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:66:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"578:2953:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2024,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"795:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"795:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"795:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":2030,"nodeType":"IfStatement","src":"791:31:13","trueBody":{"expression":{"hexValue":"","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2023,"id":2029,"nodeType":"Return","src":"813:9:13"}},{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"table","nameLocation":"886:5:13","nodeType":"VariableDeclaration","scope":2054,"src":"872:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2031,"name":"string","nodeType":"ElementaryTypeName","src":"872:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2034,"initialValue":{"id":2033,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"894:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"872:28:13"},{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"result","nameLocation":"1317:6:13","nodeType":"VariableDeclaration","scope":2054,"src":"1303:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"1303:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2050,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2040,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"1343:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1343:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1343:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1342:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1342:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1341:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1337:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1326:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1326:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1303:62:13"},{"AST":{"nodeType":"YulBlock","src":"1428:2073:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:29:13","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1533:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1529:3:13"},"nodeType":"YulFunctionCall","src":"1529:13:13"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1517:8:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1612:32:13","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1633:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1641:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1629:3:13"},"nodeType":"YulFunctionCall","src":"1629:15:13"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1616:9:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1857:1257:13","statements":[{"nodeType":"YulAssignment","src":"1910:26:13","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1925:7:13"},{"kind":"number","nodeType":"YulLiteral","src":"1934:1:13","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:13"},"nodeType":"YulFunctionCall","src":"1921:15:13"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1910:7:13"}]},{"nodeType":"YulVariableDeclaration","src":"1953:27:13","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1972:7:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1966:5:13"},"nodeType":"YulFunctionCall","src":"1966:14:13"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1957:5:13","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2564:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2585:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:2:13","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2607:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2599:3:13"},"nodeType":"YulFunctionCall","src":"2599:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2615:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2595:3:13"},"nodeType":"YulFunctionCall","src":"2595:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2581:3:13"},"nodeType":"YulFunctionCall","src":"2581:40:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2575:5:13"},"nodeType":"YulFunctionCall","src":"2575:47:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2556:7:13"},"nodeType":"YulFunctionCall","src":"2556:67:13"},"nodeType":"YulExpressionStatement","src":"2556:67:13"},{"nodeType":"YulAssignment","src":"2640:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2657:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2653:3:13"},"nodeType":"YulFunctionCall","src":"2653:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2640:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2707:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2728:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2746:2:13","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2750:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2742:3:13"},"nodeType":"YulFunctionCall","src":"2742:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2758:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2738:3:13"},"nodeType":"YulFunctionCall","src":"2738:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:13"},"nodeType":"YulFunctionCall","src":"2724:40:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2718:5:13"},"nodeType":"YulFunctionCall","src":"2718:47:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2699:7:13"},"nodeType":"YulFunctionCall","src":"2699:67:13"},"nodeType":"YulExpressionStatement","src":"2699:67:13"},{"nodeType":"YulAssignment","src":"2783:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2800:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2811:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2796:3:13"},"nodeType":"YulFunctionCall","src":"2796:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2783:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2850:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2871:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2889:1:13","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2892:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2885:3:13"},"nodeType":"YulFunctionCall","src":"2885:13:13"},{"kind":"number","nodeType":"YulLiteral","src":"2900:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2881:3:13"},"nodeType":"YulFunctionCall","src":"2881:24:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:13"},"nodeType":"YulFunctionCall","src":"2867:39:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2861:5:13"},"nodeType":"YulFunctionCall","src":"2861:46:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2842:7:13"},"nodeType":"YulFunctionCall","src":"2842:66:13"},"nodeType":"YulExpressionStatement","src":"2842:66:13"},{"nodeType":"YulAssignment","src":"2925:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2942:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:13"},"nodeType":"YulFunctionCall","src":"2938:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2925:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2992:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3013:8:13"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"3027:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3034:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3023:3:13"},"nodeType":"YulFunctionCall","src":"3023:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3009:3:13"},"nodeType":"YulFunctionCall","src":"3009:31:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3003:5:13"},"nodeType":"YulFunctionCall","src":"3003:38:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2984:7:13"},"nodeType":"YulFunctionCall","src":"2984:58:13"},"nodeType":"YulExpressionStatement","src":"2984:58:13"},{"nodeType":"YulAssignment","src":"3059:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3076:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3087:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3072:3:13"},"nodeType":"YulFunctionCall","src":"3072:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3059:9:13"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1823:7:13"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1832:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1820:2:13"},"nodeType":"YulFunctionCall","src":"1820:19:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1840:16:13","statements":[]},"pre":{"nodeType":"YulBlock","src":"1715:104:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1733:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"1748:4:13"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1737:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1769:36:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1787:4:13"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1799:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1793:5:13"},"nodeType":"YulFunctionCall","src":"1793:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:13"},"nodeType":"YulFunctionCall","src":"1783:22:13"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1773:6:13","type":""}]}]},"src":"1711:1403:13"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3294:113:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3324:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3335:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3320:3:13"},"nodeType":"YulFunctionCall","src":"3320:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3339:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3312:7:13"},"nodeType":"YulFunctionCall","src":"3312:32:13"},"nodeType":"YulExpressionStatement","src":"3312:32:13"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3373:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:13","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3369:3:13"},"nodeType":"YulFunctionCall","src":"3369:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3388:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3361:7:13"},"nodeType":"YulFunctionCall","src":"3361:32:13"},"nodeType":"YulExpressionStatement","src":"3361:32:13"}]},"nodeType":"YulCase","src":"3287:120:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3292:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3427:64:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3457:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3453:3:13"},"nodeType":"YulFunctionCall","src":"3453:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3445:7:13"},"nodeType":"YulFunctionCall","src":"3445:32:13"},"nodeType":"YulExpressionStatement","src":"3445:32:13"}]},"nodeType":"YulCase","src":"3420:71:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3425:1:13","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3265:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3259:5:13"},"nodeType":"YulFunctionCall","src":"3259:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"3272:1:13","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3255:3:13"},"nodeType":"YulFunctionCall","src":"3255:19:13"},"nodeType":"YulSwitch","src":"3248:243:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1748:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1787:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1799:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"3265:4:13","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"1633:6:13","valueSize":1},{"declaration":2032,"isOffset":false,"isSlot":false,"src":"1533:5:13","valueSize":1}],"id":2051,"nodeType":"InlineAssembly","src":"1419:2082:13"},{"expression":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3518:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2023,"id":2053,"nodeType":"Return","src":"3511:13:13"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"418:82:13","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"514:6:13","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"data","nameLocation":"534:4:13","nodeType":"VariableDeclaration","scope":2055,"src":"521:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"521:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:19:13"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"563:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2021,"name":"string","nodeType":"ElementaryTypeName","src":"563:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"562:15:13"},"scope":2056,"src":"505:3026:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2057,"src":"231:3302:13","usedErrors":[]}],"src":"100:3434:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2078]},"id":2079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2058,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2078,"linearizedBaseContracts":[2078],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2067,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2063,"id":2066,"nodeType":"Return","src":"712:17:14"}]},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2078,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2076,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2072,"id":2075,"nodeType":"Return","src":"819:15:14"}]},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2077,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2078,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2079,"src":"608:235:14","usedErrors":[]}],"src":"86:758:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2304]},"id":2305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"126:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2304,"linearizedBaseContracts":[2304],"name":"Strings","nameLocation":"169:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2084,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:15","nodeType":"VariableDeclaration","scope":2304,"src":"183:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2082,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2087,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:15","nodeType":"VariableDeclaration","scope":2304,"src":"247:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2085,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2165,"nodeType":"Block","src":"463:632:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"665:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"661:51:15","trueBody":{"id":2100,"nodeType":"Block","src":"677:35:15","statements":[{"expression":{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2094,"id":2099,"nodeType":"Return","src":"691:10:15"}]}},{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"temp","nameLocation":"729:4:15","nodeType":"VariableDeclaration","scope":2165,"src":"721:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2105,"initialValue":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"736:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:15"},{"assignments":[2107],"declarations":[{"constant":false,"id":2107,"mutability":"mutable","name":"digits","nameLocation":"759:6:15","nodeType":"VariableDeclaration","scope":2165,"src":"751:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2108,"nodeType":"VariableDeclarationStatement","src":"751:14:15"},{"body":{"id":2119,"nodeType":"Block","src":"793:57:15","statements":[{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:15","subExpression":{"id":2112,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"807:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"807:8:15"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"829:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"829:10:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"782:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"WhileStatement","src":"775:75:15"},{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"buffer","nameLocation":"872:6:15","nodeType":"VariableDeclaration","scope":2165,"src":"859:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2127,"initialValue":{"arguments":[{"id":2125,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"891:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:15"},{"body":{"id":2158,"nodeType":"Block","src":"927:131:15","statements":[{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"941:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"941:11:15"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2135,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"966:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2137,"indexExpression":{"id":2136,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"973:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1009:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:15","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2140,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:15","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2138,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:15","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2153,"nodeType":"ExpressionStatement","src":"966:56:15"},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1036:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"1036:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"915:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2159,"nodeType":"WhileStatement","src":"908:150:15"},{"expression":{"arguments":[{"id":2162,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"1081:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:15","typeDescriptions":{}}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2094,"id":2164,"nodeType":"Return","src":"1067:21:15"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"297:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:15","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"418:5:15","nodeType":"VariableDeclaration","scope":2166,"src":"410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:15"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"448:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:15"},"scope":2304,"src":"392:703:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"1274:255:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1288:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"nodeType":"IfStatement","src":"1284:54:15","trueBody":{"id":2179,"nodeType":"Block","src":"1300:38:15","statements":[{"expression":{"hexValue":"30783030","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2173,"id":2178,"nodeType":"Return","src":"1314:13:15"}]}},{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"temp","nameLocation":"1355:4:15","nodeType":"VariableDeclaration","scope":2206,"src":"1347:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"id":2183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:15"},{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"length","nameLocation":"1385:6:15","nodeType":"VariableDeclaration","scope":2206,"src":"1377:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2188,"initialValue":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:15"},{"body":{"id":2199,"nodeType":"Block","src":"1423:57:15","statements":[{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:15","subExpression":{"id":2192,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1437:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"1437:8:15"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"1459:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"1459:10:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"1412:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"WhileStatement","src":"1405:75:15"},{"expression":{"arguments":[{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1508:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2203,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1515:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2201,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2207,2283,2303],"referencedDeclaration":2283,"src":"1496:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2173,"id":2205,"nodeType":"Return","src":"1489:33:15"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"1101:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:15","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"1229:5:15","nodeType":"VariableDeclaration","scope":2207,"src":"1221:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:15"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"1259:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2171,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:15"},"scope":2304,"src":"1200:329:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2282,"nodeType":"Block","src":"1742:351:15","statements":[{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:15","nodeType":"VariableDeclaration","scope":2282,"src":"1752:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2217,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2222,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1788:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2219,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:15"},{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2228,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1809:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2230,"indexExpression":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2233,"nodeType":"ExpressionStatement","src":"1809:15:15"},{"expression":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2234,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1834:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2236,"indexExpression":{"hexValue":"31","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2239,"nodeType":"ExpressionStatement","src":"1834:15:15"},{"body":{"id":2268,"nodeType":"Block","src":"1904:87:15","statements":[{"expression":{"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2254,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1918:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2256,"indexExpression":{"id":2255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1925:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2257,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"1930:12:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2261,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1943:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2263,"nodeType":"ExpressionStatement","src":"1918:37:15"},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ExpressionStatement","src":"1969:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1892:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"initializationExpression":{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"i","nameLocation":"1872:1:15","nodeType":"VariableDeclaration","scope":2269,"src":"1864:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2247,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2243,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:15"},"loopExpression":{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:15","subExpression":{"id":2251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1901:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"1899:3:15"},"nodeType":"ForStatement","src":"1859:132:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"2008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"2000:55:15"},{"expression":{"arguments":[{"id":2279,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2079:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:15","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2216,"id":2281,"nodeType":"Return","src":"2065:21:15"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"1535:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:15","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"value","nameLocation":"1681:5:15","nodeType":"VariableDeclaration","scope":2283,"src":"1673:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"length","nameLocation":"1696:6:15","nodeType":"VariableDeclaration","scope":2283,"src":"1688:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:15"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"1727:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2214,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:15"},"scope":2304,"src":"1652:441:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"2318:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2296,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2363:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2294,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:15","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:15","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2299,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2371:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2291,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2207,2283,2303],"referencedDeclaration":2283,"src":"2335:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2290,"id":2301,"nodeType":"Return","src":"2328:59:15"}]},"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"2099:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:15","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"addr","nameLocation":"2274:4:15","nodeType":"VariableDeclaration","scope":2303,"src":"2266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:15"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"2303:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2288,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:15"},"scope":2304,"src":"2245:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2305,"src":"161:2235:15","usedErrors":[]}],"src":"101:2296:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2328],"IERC165":[2340]},"id":2329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2306,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2329,"sourceUnit":2341,"src":"124:23:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2309,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"754:7:16"},"id":2310,"nodeType":"InheritanceSpecifier","src":"754:7:16"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"149:576:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2328,"linearizedBaseContracts":[2328,2340],"name":"ERC165","nameLocation":"744:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2339],"body":{"id":2326,"nodeType":"Block","src":"920:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"937:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2321,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2340_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2340_$","typeString":"type(contract IERC165)"}],"id":2320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2340","typeString":"type(contract IERC165)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2318,"id":2325,"nodeType":"Return","src":"930:47:16"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"768:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:16","nodeType":"FunctionDefinition","overrides":{"id":2315,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:16"},"parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:16","nodeType":"VariableDeclaration","scope":2327,"src":"856:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2312,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:16"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"914:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2316,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:16"},"scope":2328,"src":"829:155:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2329,"src":"726:260:16","usedErrors":[]}],"src":"99:888:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2330,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"125:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2340,"linearizedBaseContracts":[2340],"name":"IERC165","nameLocation":"415:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"429:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2339,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:17","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:17","nodeType":"VariableDeclaration","scope":2339,"src":"801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:17"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"844:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2336,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:17"},"scope":2340,"src":"774:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2341,"src":"405:447:17","usedErrors":[]}],"src":"100:753:17"},"id":17},"contracts/INFTCollection.sol":{"ast":{"absolutePath":"contracts/INFTCollection.sol","exportedSymbols":{"INFTCollection":[2401]},"id":2402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"32:22:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2401,"linearizedBaseContracts":[2401],"name":"INFTCollection","nameLocation":"66:14:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a0712d68","id":2347,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"96:4:18","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"_amount","nameLocation":"109:7:18","nodeType":"VariableDeclaration","scope":2347,"src":"101:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:17:18"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[],"src":"134:0:18"},"scope":2401,"src":"87:48:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9038e693","id":2350,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"150:16:18","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"166:2:18"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"177:0:18"},"scope":2401,"src":"141:37:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbd78e93","id":2355,"implemented":false,"kind":"function","modifiers":[],"name":"revealedCount","nameLocation":"193:13:18","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"206:2:18"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2355,"src":"231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"230:9:18"},"scope":2401,"src":"184:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b4fab5a","id":2360,"implemented":false,"kind":"function","modifiers":[],"name":"lastRevealed","nameLocation":"255:12:18","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"267:2:18"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"292:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:9:18"},"scope":2401,"src":"246:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f4daaba1","id":2365,"implemented":false,"kind":"function","modifiers":[],"name":"batchSize","nameLocation":"316:9:18","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"325:2:18"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"350:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:9:18"},"scope":2401,"src":"307:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"247cd8ad","id":2370,"implemented":false,"kind":"function","modifiers":[],"name":"revealInterval","nameLocation":"374:14:18","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"388:2:18"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"412:9:18"},"scope":2401,"src":"365:57:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bdb4b848","id":2375,"implemented":false,"kind":"function","modifiers":[],"name":"mintCost","nameLocation":"437:8:18","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"445:2:18"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2375,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":2401,"src":"428:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d5abeb01","id":2380,"implemented":false,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"495:9:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"504:2:18"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"530:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:9:18"},"scope":2401,"src":"486:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf3b94cd","id":2385,"implemented":false,"kind":"function","modifiers":[],"name":"shouldReveal","nameLocation":"554:12:18","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"566:2:18"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"592:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"592:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"591:6:18"},"scope":2401,"src":"545:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"96634a40","id":2390,"implemented":false,"kind":"function","modifiers":[],"name":"revealPendingMetadata","nameLocation":"613:21:18","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"634:2:18"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"requestId","nameLocation":"663:9:18","nodeType":"VariableDeclaration","scope":2390,"src":"655:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:19:18"},"scope":2401,"src":"604:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aaae4e23","id":2395,"implemented":false,"kind":"function","modifiers":[],"name":"setRevealBatchSize","nameLocation":"689:18:18","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"716:16:18","nodeType":"VariableDeclaration","scope":2395,"src":"708:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"707:26:18"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[],"src":"742:0:18"},"scope":2401,"src":"680:63:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c65d81f","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"setRevealInterval","nameLocation":"758:17:18","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"_revealInterval","nameLocation":"784:15:18","nodeType":"VariableDeclaration","scope":2400,"src":"776:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"775:25:18"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"809:0:18"},"scope":2401,"src":"749:61:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2402,"src":"56:756:18","usedErrors":[]}],"src":"32:781:18"},"id":18},"contracts/NFTCollection.sol":{"ast":{"absolutePath":"contracts/NFTCollection.sol","exportedSymbols":{"Address":[2009],"Base64":[2056],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"ERC721Enumerable":[1656],"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"INFTCollection":[2401],"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115],"NFTCollection":[3309],"Ownable":[317],"Strings":[2304],"VRFConsumerBaseV2":[96],"VRFCoordinatorV2Interface":[204]},"id":3310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2403,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"32:22:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":318,"src":"56:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":2405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":1657,"src":"109:78:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":2305,"src":"188:51:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":2407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":2057,"src":"240:50:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":2408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":97,"src":"291:61:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":2409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":205,"src":"353:80:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","file":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","id":2410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":39,"src":"434:60:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/INFTCollection.sol","file":"./INFTCollection.sol","id":2411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":2402,"src":"495:30:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2412,"name":"INFTCollection","nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"557:14:19"},"id":2413,"nodeType":"InheritanceSpecifier","src":"557:14:19"},{"baseName":{"id":2414,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":317,"src":"577:7:19"},"id":2415,"nodeType":"InheritanceSpecifier","src":"577:7:19"},{"baseName":{"id":2416,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"590:16:19"},"id":2417,"nodeType":"InheritanceSpecifier","src":"590:16:19"},{"baseName":{"id":2418,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"612:17:19"},"id":2419,"nodeType":"InheritanceSpecifier","src":"612:17:19"},{"baseName":{"id":2420,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"635:25:19"},"id":2421,"nodeType":"InheritanceSpecifier","src":"635:25:19"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3309,"linearizedBaseContracts":[3309,115,96,1656,1687,1184,1714,1300,2328,2340,317,2078,2401],"name":"NFTCollection","nameLocation":"536:13:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NFTCollection.Metadata","id":2428,"members":[{"constant":false,"id":2423,"mutability":"mutable","name":"startIndex","nameLocation":"717:10:19","nodeType":"VariableDeclaration","scope":2428,"src":"709:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"endIndex","nameLocation":"745:8:19","nodeType":"VariableDeclaration","scope":2428,"src":"737:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"737:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"entropy","nameLocation":"771:7:19","nodeType":"VariableDeclaration","scope":2428,"src":"763:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Metadata","nameLocation":"690:8:19","nodeType":"StructDefinition","scope":3309,"src":"683:102:19","visibility":"public"},{"constant":false,"id":2430,"mutability":"immutable","name":"MAX_SUPPLY","nameLocation":"843:10:19","nodeType":"VariableDeclaration","scope":3309,"src":"817:36:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2432,"mutability":"immutable","name":"MINT_COST","nameLocation":"885:9:19","nodeType":"VariableDeclaration","scope":3309,"src":"859:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2434,"mutability":"mutable","name":"s_revealedCount","nameLocation":"941:15:19","nodeType":"VariableDeclaration","scope":3309,"src":"925:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2436,"mutability":"mutable","name":"s_revealBatchSize","nameLocation":"978:17:19","nodeType":"VariableDeclaration","scope":3309,"src":"962:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2438,"mutability":"mutable","name":"s_revealInterval","nameLocation":"1017:16:19","nodeType":"VariableDeclaration","scope":3309,"src":"1001:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2442,"mutability":"mutable","name":"s_lastRevealed","nameLocation":"1055:14:19","nodeType":"VariableDeclaration","scope":3309,"src":"1039:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":2440,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1072:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1072:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2444,"mutability":"mutable","name":"s_revealInProgress","nameLocation":"1106:18:19","nodeType":"VariableDeclaration","scope":3309,"src":"1093:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"1093:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":2448,"mutability":"mutable","name":"s_metadatas","nameLocation":"1149:11:19","nodeType":"VariableDeclaration","scope":3309,"src":"1130:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata[]"},"typeName":{"baseType":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"Metadata","nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"1130:8:19"},"referencedDeclaration":2428,"src":"1130:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage_ptr","typeString":"struct NFTCollection.Metadata"}},"id":2447,"nodeType":"ArrayTypeName","src":"1130:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr","typeString":"struct NFTCollection.Metadata[]"}},"visibility":"private"},{"constant":true,"id":2451,"mutability":"constant","name":"VRF_REQUEST_CONFIRMATIONS","nameLocation":"1225:25:19","nodeType":"VariableDeclaration","scope":3309,"src":"1201:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2449,"name":"uint16","nodeType":"ElementaryTypeName","src":"1201:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1253:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2454,"mutability":"constant","name":"VRF_NUM_WORDS","nameLocation":"1284:13:19","nodeType":"VariableDeclaration","scope":3309,"src":"1260:41:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2452,"name":"uint32","nodeType":"ElementaryTypeName","src":"1260:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":2457,"mutability":"immutable","name":"VRF_COORDINATOR_V2","nameLocation":"1352:18:19","nodeType":"VariableDeclaration","scope":3309,"src":"1308:62:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":2456,"nodeType":"UserDefinedTypeName","pathNode":{"id":2455,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"1308:25:19"},"referencedDeclaration":204,"src":"1308:25:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":2459,"mutability":"immutable","name":"VRF_SUBSCRIPTION_ID","nameLocation":"1401:19:19","nodeType":"VariableDeclaration","scope":3309,"src":"1376:44:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2458,"name":"uint64","nodeType":"ElementaryTypeName","src":"1376:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2461,"mutability":"immutable","name":"VRF_GAS_LANE","nameLocation":"1452:12:19","nodeType":"VariableDeclaration","scope":3309,"src":"1426:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1426:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2463,"mutability":"immutable","name":"VRF_CALLBACK_GAS_LIMIT","nameLocation":"1495:22:19","nodeType":"VariableDeclaration","scope":3309,"src":"1470:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2462,"name":"uint32","nodeType":"ElementaryTypeName","src":"1470:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"anonymous":false,"id":2467,"name":"BatchRevealRequested","nameLocation":"1545:20:19","nodeType":"EventDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1574:9:19","nodeType":"VariableDeclaration","scope":2467,"src":"1566:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:19:19"},"src":"1539:46:19"},{"anonymous":false,"id":2473,"name":"BatchRevealFinished","nameLocation":"1596:19:19","nodeType":"EventDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"indexed":false,"mutability":"mutable","name":"startIndex","nameLocation":"1624:10:19","nodeType":"VariableDeclaration","scope":2473,"src":"1616:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2471,"indexed":false,"mutability":"mutable","name":"endIndex","nameLocation":"1644:8:19","nodeType":"VariableDeclaration","scope":2473,"src":"1636:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1615:38:19"},"src":"1590:64:19"},{"id":2475,"name":"InvalidAmount","nameLocation":"1681:13:19","nodeType":"ErrorDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[],"src":"1694:2:19"},"src":"1675:22:19"},{"id":2477,"name":"MaxSupplyReached","nameLocation":"1708:16:19","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"1724:2:19"},"src":"1702:25:19"},{"id":2479,"name":"InsufficientFunds","nameLocation":"1738:17:19","nodeType":"ErrorDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"1755:2:19"},"src":"1732:26:19"},{"id":2481,"name":"RevealCriteriaNotMet","nameLocation":"1769:20:19","nodeType":"ErrorDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"1789:2:19"},"src":"1763:29:19"},{"id":2483,"name":"RevealInProgress","nameLocation":"1803:16:19","nodeType":"ErrorDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"1819:2:19"},"src":"1797:25:19"},{"id":2485,"name":"InsufficientLINK","nameLocation":"1833:16:19","nodeType":"ErrorDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"1849:2:19"},"src":"1827:25:19"},{"id":2487,"name":"WithdrawProceedsFailed","nameLocation":"1863:22:19","nodeType":"ErrorDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"1885:2:19"},"src":"1857:31:19"},{"id":2489,"name":"NonExistentToken","nameLocation":"1899:16:19","nodeType":"ErrorDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"1915:2:19"},"src":"1893:25:19"},{"body":{"id":2553,"nodeType":"Block","src":"2320:377:19","statements":[{"expression":{"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2519,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2330:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2520,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2343:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2330:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"nodeType":"ExpressionStatement","src":"2330:23:19"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2363:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2524,"name":"_mintCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2375:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2363:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"2363:21:19"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"VRF_COORDINATOR_V2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2394:18:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2529,"name":"_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2441:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2528,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2415:25:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$204_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2415:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2394:65:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":2532,"nodeType":"ExpressionStatement","src":"2394:65:19"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"VRF_SUBSCRIPTION_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"2469:19:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2534,"name":"_vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"2491:18:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2469:40:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2536,"nodeType":"ExpressionStatement","src":"2469:40:19"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"VRF_GAS_LANE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2519:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2538,"name":"_vrfGasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"2534:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2519:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2540,"nodeType":"ExpressionStatement","src":"2519:26:19"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"VRF_CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2555:22:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2542,"name":"_vrfCallbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"2580:20:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2555:45:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2544,"nodeType":"ExpressionStatement","src":"2555:45:19"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2610:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2546,"name":"_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2630:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2610:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"2610:36:19"},{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"2656:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2550,"name":"_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2675:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2656:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"2656:34:19"}]},"id":2554,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2512,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"2267:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2513,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"2274:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2514,"kind":"baseConstructorSpecifier","modifierName":{"id":2511,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"2260:6:19"},"nodeType":"ModifierInvocation","src":"2260:22:19"},{"arguments":[{"id":2516,"name":"_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2301:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2517,"kind":"baseConstructorSpecifier","modifierName":{"id":2515,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"2283:17:19"},"nodeType":"ModifierInvocation","src":"2283:36:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"_name","nameLocation":"1959:5:19","nodeType":"VariableDeclaration","scope":2554,"src":"1945:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"1945:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"_symbol","nameLocation":"1988:7:19","nodeType":"VariableDeclaration","scope":2554,"src":"1974:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2492,"name":"string","nodeType":"ElementaryTypeName","src":"1974:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"_maxSupply","nameLocation":"2013:10:19","nodeType":"VariableDeclaration","scope":2554,"src":"2005:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"_mintCost","nameLocation":"2041:9:19","nodeType":"VariableDeclaration","scope":2554,"src":"2033:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"2068:16:19","nodeType":"VariableDeclaration","scope":2554,"src":"2060:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"_revealInterval","nameLocation":"2102:15:19","nodeType":"VariableDeclaration","scope":2554,"src":"2094:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"_vrfCoordinatorV2","nameLocation":"2135:17:19","nodeType":"VariableDeclaration","scope":2554,"src":"2127:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"_vrfSubscriptionId","nameLocation":"2169:18:19","nodeType":"VariableDeclaration","scope":2554,"src":"2162:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2504,"name":"uint64","nodeType":"ElementaryTypeName","src":"2162:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"_vrfGasLane","nameLocation":"2205:11:19","nodeType":"VariableDeclaration","scope":2554,"src":"2197:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2197:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"_vrfCallbackGasLimit","nameLocation":"2233:20:19","nodeType":"VariableDeclaration","scope":2554,"src":"2226:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2508,"name":"uint32","nodeType":"ElementaryTypeName","src":"2226:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1935:324:19"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"2320:0:19"},"scope":3309,"src":"1924:773:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2347],"body":{"id":2614,"nodeType":"Block","src":"2776:433:19","statements":[{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"totalSupply","nameLocation":"2794:11:19","nodeType":"VariableDeclaration","scope":2614,"src":"2786:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2564,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2562,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2808:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2808:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2786:35:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2835:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"nodeType":"IfStatement","src":"2831:65:19","trueBody":{"id":2571,"nodeType":"Block","src":"2849:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2568,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2870:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2870:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"RevertStatement","src":"2863:22:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2574,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2909:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2576,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2933:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2909:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"nodeType":"IfStatement","src":"2905:90:19","trueBody":{"id":2581,"nodeType":"Block","src":"2945:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2578,"name":"MaxSupplyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2966:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2966:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"RevertStatement","src":"2959:25:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3008:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3020:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2586,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3032:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3020:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3008:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"3004:88:19","trueBody":{"id":2592,"nodeType":"Block","src":"3041:51:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2589,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3062:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3062:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"RevertStatement","src":"3055:26:19"}]}},{"body":{"id":2612,"nodeType":"Block","src":"3140:63:19","statements":[{"expression":{"arguments":[{"expression":{"id":2605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3164:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3176:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3190:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3176:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[799,828],"referencedDeclaration":799,"src":"3154:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3154:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"ExpressionStatement","src":"3154:38:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3121:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2599,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3121:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2613,"initializationExpression":{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"i","nameLocation":"3114:1:19","nodeType":"VariableDeclaration","scope":2613,"src":"3106:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2597,"initialValue":{"hexValue":"31","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3106:13:19"},"loopExpression":{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3135:3:19","subExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3135:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"3135:3:19"},"nodeType":"ForStatement","src":"3101:102:19"}]},"functionSelector":"a0712d68","id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2728:4:19","nodeType":"FunctionDefinition","overrides":{"id":2558,"nodeType":"OverrideSpecifier","overrides":[],"src":"2767:8:19"},"parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"_amount","nameLocation":"2741:7:19","nodeType":"VariableDeclaration","scope":2615,"src":"2733:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2732:17:19"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"2776:0:19"},"scope":3309,"src":"2719:490:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2350],"body":{"id":2645,"nodeType":"Block","src":"3271:164:19","statements":[{"assignments":[2622,null],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"sent","nameLocation":"3287:4:19","nodeType":"VariableDeclaration","scope":2645,"src":"3282:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2621,"name":"bool","nodeType":"ElementaryTypeName","src":"3282:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2637,"initialValue":{"arguments":[{"hexValue":"","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3349:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3305:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3305:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3297:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"3297:8:19","stateMutability":"payable","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3297:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3297:21:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":2631,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3334:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCollection_$3309","typeString":"contract NFTCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTCollection_$3309","typeString":"contract NFTCollection"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:19","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3326:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3297:51:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3297:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3281:71:19"},{"condition":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3366:5:19","subExpression":{"id":2638,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"3367:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"IfStatement","src":"3362:67:19","trueBody":{"id":2643,"nodeType":"Block","src":"3373:56:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2640,"name":"WithdrawProceedsFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3394:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3394:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"RevertStatement","src":"3387:31:19"}]}}]},"functionSelector":"9038e693","id":2646,"implemented":true,"kind":"function","modifiers":[{"id":2619,"kind":"modifierInvocation","modifierName":{"id":2618,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"3261:9:19"},"nodeType":"ModifierInvocation","src":"3261:9:19"}],"name":"withdrawProceeds","nameLocation":"3224:16:19","nodeType":"FunctionDefinition","overrides":{"id":2617,"nodeType":"OverrideSpecifier","overrides":[],"src":"3252:8:19"},"parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"3240:2:19"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"3271:0:19"},"scope":3309,"src":"3215:220:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[522],"body":{"id":2688,"nodeType":"Block","src":"3573:343:19","statements":[{"condition":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3587:17:19","subExpression":{"arguments":[{"id":2655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3596:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2654,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3588:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"3583:73:19","trueBody":{"id":2661,"nodeType":"Block","src":"3606:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2658,"name":"NonExistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3627:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3627:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"RevertStatement","src":"3620:25:19"}]}},{"assignments":[2664,2666],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"randomness","nameLocation":"3674:10:19","nodeType":"VariableDeclaration","scope":2688,"src":"3666:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"metadataCleared","nameLocation":"3691:15:19","nodeType":"VariableDeclaration","scope":2688,"src":"3686:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"3686:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2670,"initialValue":{"arguments":[{"id":2668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"_getTokenRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"3710:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (uint256) view returns (uint256,bool)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3665:73:19"},{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"svg","nameLocation":"3762:3:19","nodeType":"VariableDeclaration","scope":2688,"src":"3748:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2671,"name":"string","nodeType":"ElementaryTypeName","src":"3748:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"id":2674,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3781:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2675,"name":"metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3793:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2673,"name":"_generateSVG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3768:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,bool) pure returns (string memory)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3768:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3748:61:19"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"svgEncoded","nameLocation":"3833:10:19","nodeType":"VariableDeclaration","scope":2688,"src":"3819:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2678,"name":"string","nodeType":"ElementaryTypeName","src":"3819:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2683,"initialValue":{"arguments":[{"id":2681,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"3861:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2680,"name":"_svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"3846:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3819:46:19"},{"expression":{"arguments":[{"id":2685,"name":"svgEncoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3898:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2684,"name":"_formatTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"3882:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3882:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2653,"id":2687,"nodeType":"Return","src":"3875:34:19"}]},"functionSelector":"c87b56dd","id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3466:8:19","nodeType":"FunctionDefinition","overrides":{"id":2650,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:19"},"parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:19","nodeType":"VariableDeclaration","scope":2689,"src":"3475:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3474:17:19"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"3554:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2651,"name":"string","nodeType":"ElementaryTypeName","src":"3554:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3553:15:19"},"scope":3309,"src":"3457:459:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2355],"body":{"id":2697,"nodeType":"Block","src":"3988:39:19","statements":[{"expression":{"id":2695,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4005:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2694,"id":2696,"nodeType":"Return","src":"3998:22:19"}]},"functionSelector":"bbd78e93","id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"revealedCount","nameLocation":"3931:13:19","nodeType":"FunctionDefinition","overrides":{"id":2691,"nodeType":"OverrideSpecifier","overrides":[],"src":"3961:8:19"},"parameters":{"id":2690,"nodeType":"ParameterList","parameters":[],"src":"3944:2:19"},"returnParameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"3979:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3979:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3978:9:19"},"scope":3309,"src":"3922:105:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2360],"body":{"id":2706,"nodeType":"Block","src":"4098:38:19","statements":[{"expression":{"id":2704,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4115:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2703,"id":2705,"nodeType":"Return","src":"4108:21:19"}]},"functionSelector":"7b4fab5a","id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"lastRevealed","nameLocation":"4042:12:19","nodeType":"FunctionDefinition","overrides":{"id":2700,"nodeType":"OverrideSpecifier","overrides":[],"src":"4071:8:19"},"parameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"4054:2:19"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"4089:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4088:9:19"},"scope":3309,"src":"4033:103:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2365],"body":{"id":2715,"nodeType":"Block","src":"4204:41:19","statements":[{"expression":{"id":2713,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"4221:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2712,"id":2714,"nodeType":"Return","src":"4214:24:19"}]},"functionSelector":"f4daaba1","id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"batchSize","nameLocation":"4151:9:19","nodeType":"FunctionDefinition","overrides":{"id":2709,"nodeType":"OverrideSpecifier","overrides":[],"src":"4177:8:19"},"parameters":{"id":2708,"nodeType":"ParameterList","parameters":[],"src":"4160:2:19"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"4195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4195:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:9:19"},"scope":3309,"src":"4142:103:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2370],"body":{"id":2724,"nodeType":"Block","src":"4318:40:19","statements":[{"expression":{"id":2722,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4335:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2721,"id":2723,"nodeType":"Return","src":"4328:23:19"}]},"functionSelector":"247cd8ad","id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"revealInterval","nameLocation":"4260:14:19","nodeType":"FunctionDefinition","overrides":{"id":2718,"nodeType":"OverrideSpecifier","overrides":[],"src":"4291:8:19"},"parameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"4274:2:19"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"4309:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4309:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4308:9:19"},"scope":3309,"src":"4251:107:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2375],"body":{"id":2733,"nodeType":"Block","src":"4423:33:19","statements":[{"expression":{"id":2731,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"4440:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2730,"id":2732,"nodeType":"Return","src":"4433:16:19"}]},"functionSelector":"bdb4b848","id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"mintCost","nameLocation":"4373:8:19","nodeType":"FunctionDefinition","overrides":{"id":2727,"nodeType":"OverrideSpecifier","overrides":[],"src":"4396:8:19"},"parameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"4381:2:19"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"4414:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:9:19"},"scope":3309,"src":"4364:92:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2380],"body":{"id":2742,"nodeType":"Block","src":"4522:34:19","statements":[{"expression":{"id":2740,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4539:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2739,"id":2741,"nodeType":"Return","src":"4532:17:19"}]},"functionSelector":"d5abeb01","id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"4471:9:19","nodeType":"FunctionDefinition","overrides":{"id":2736,"nodeType":"OverrideSpecifier","overrides":[],"src":"4495:8:19"},"parameters":{"id":2735,"nodeType":"ParameterList","parameters":[],"src":"4480:2:19"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"4513:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4512:9:19"},"scope":3309,"src":"4462:94:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2800,"nodeType":"Block","src":"4717:401:19","statements":[{"body":{"id":2798,"nodeType":"Block","src":"4776:336:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"4811:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":2764,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4822:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2766,"indexExpression":{"id":2765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4822:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startIndex","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"4822:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4811:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"4867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2770,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4877:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2772,"indexExpression":{"id":2771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4889:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4877:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endIndex","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"4877:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4867:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4811:89:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2797,"nodeType":"IfStatement","src":"4790:312:19","trueBody":{"id":2796,"nodeType":"Block","src":"4915:187:19","statements":[{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"4933:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2782,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4996:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2784,"indexExpression":{"id":2783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"5008:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4996:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"entropy","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"4996:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"5020:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2780,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4985:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4985:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4985:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4975:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4975:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4946:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"4946:7:19","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4946:101:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4933:114:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"4933:114:19"},{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2792,"name":"metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"5065:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5083:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5065:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"nodeType":"ExpressionStatement","src":"5065:22:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4747:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2757,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4751:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4751:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4747:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"initializationExpression":{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"i","nameLocation":"4740:1:19","nodeType":"VariableDeclaration","scope":2799,"src":"4732:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2755,"initialValue":{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4732:13:19"},"loopExpression":{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4771:3:19","subExpression":{"id":2760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"4771:3:19"},"nodeType":"ForStatement","src":"4727:385:19"}]},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenRandomness","nameLocation":"4587:19:19","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"tokenId","nameLocation":"4615:7:19","nodeType":"VariableDeclaration","scope":2801,"src":"4607:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4606:17:19"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"randomness","nameLocation":"4679:10:19","nodeType":"VariableDeclaration","scope":2801,"src":"4671:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"4671:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"metadataCleared","nameLocation":"4696:15:19","nodeType":"VariableDeclaration","scope":2801,"src":"4691:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2749,"name":"bool","nodeType":"ElementaryTypeName","src":"4691:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4670:42:19"},"scope":3309,"src":"4578:540:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"5239:677:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5330:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5507:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a224e4654222c20","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5548:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","typeString":"literal_string \"\"name\":\"NFT\", \""},"value":"\"name\":\"NFT\", "},{"hexValue":"226465736372697074696f6e223a2242617463682d72657665616c6564204e465421222c20","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5602:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","typeString":"literal_string \"\"description\":\"Batch-revealed NFT!\", \""},"value":"\"description\":\"Batch-revealed NFT!\", "},{"hexValue":"2261747472696275746573223a22222c20","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5679:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","typeString":"literal_string \"\"attributes\":\"\", \""},"value":"\"attributes\":\"\", "},{"hexValue":"22696d616765223a22","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5736:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},"value":"\"image\":\""},{"id":2824,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"5749:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5759:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5796:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","typeString":"literal_string \"\"name\":\"NFT\", \""},{"typeIdentifier":"t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","typeString":"literal_string \"\"description\":\"Batch-revealed NFT!\", \""},{"typeIdentifier":"t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","typeString":"literal_string \"\"attributes\":\"\", \""},{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":2817,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5457:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5457:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5457:372:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5422:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2815,"name":"bytes","nodeType":"ElementaryTypeName","src":"5422:5:19","typeDescriptions":{}}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5422:433:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2813,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5383:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2056_$","typeString":"type(library Base64)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"5383:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5383:494:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2810,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5292:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5292:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5292:603:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5268:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2808,"name":"string","nodeType":"ElementaryTypeName","src":"5268:6:19","typeDescriptions":{}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5268:641:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2807,"id":2832,"nodeType":"Return","src":"5249:660:19"}]},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"_formatTokenURI","nameLocation":"5133:15:19","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"imageURI","nameLocation":"5163:8:19","nodeType":"VariableDeclaration","scope":2834,"src":"5149:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"5149:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5148:24:19"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"5220:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"5220:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5219:15:19"},"scope":3309,"src":"5124:792:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"6054:1622:19","statements":[{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"parts","nameLocation":"6081:5:19","nodeType":"VariableDeclaration","scope":2990,"src":"6064:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string[4]"},"typeName":{"baseType":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"6064:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2847,"length":{"hexValue":"34","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6071:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"6064:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$4_storage_ptr","typeString":"string[4]"}},"visibility":"internal"}],"id":2849,"nodeType":"VariableDeclarationStatement","src":"6064:22:19"},{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2850,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6096:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2852,"indexExpression":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6096:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6107:100:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3fdae95b12d4144c1ef7b473afe057c16d9328243c0061ee93bb1951ad140de6","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">\""},"value":"<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">"},"src":"6096:111:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2855,"nodeType":"ExpressionStatement","src":"6096:111:19"},{"condition":{"id":2856,"name":"_metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"6221:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2963,"nodeType":"Block","src":"7328:223:19","statements":[{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2951,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7342:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2953,"indexExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7348:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7342:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a2033353070783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2239302220793d223239352220636c6173733d2262617365223e","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7353:159:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0a046e413407ed2373b4a5a7d72790e154aac60c33cfb14b440e4f92e173f99","typeString":"literal_string \"<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">\""},"value":"<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">"},"src":"7342:170:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2956,"nodeType":"ExpressionStatement","src":"7342:170:19"},{"expression":{"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2957,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7526:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2959,"indexExpression":{"hexValue":"32","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7532:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7526:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3f","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7537:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f179612d7132c8ed24ba0e286d60d398c4aa1c234eb2274ca1bba47718e9d31","typeString":"literal_string \"?\""},"value":"?"},"src":"7526:14:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2962,"nodeType":"ExpressionStatement","src":"7526:14:19"}]},"id":2964,"nodeType":"IfStatement","src":"6217:1334:19","trueBody":{"id":2950,"nodeType":"Block","src":"6239:1083:19","statements":[{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2857,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6253:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2859,"indexExpression":{"hexValue":"31","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6259:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6253:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20353470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420636c6173733d2262617365223e","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6264:143:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_300c02fb6da0fe99aef18282225bcf9b7e581b390db4fceb85fb7d5f694800c5","typeString":"literal_string \"<style>.base { fill: white; font-family: serif; font-size: 54px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">\""},"value":"<style>.base { fill: white; font-family: serif; font-size: 54px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">"},"src":"6253:154:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2862,"nodeType":"ExpressionStatement","src":"6253:154:19"},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"slicedRandomness","nameLocation":"6438:16:19","nodeType":"VariableDeclaration","scope":2950,"src":"6421:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string[7]"},"typeName":{"baseType":{"id":2866,"name":"string","nodeType":"ElementaryTypeName","src":"6421:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2867,"length":{"hexValue":"37","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6428:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"6421:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$7_storage_ptr","typeString":"string[7]"}},"visibility":"internal"}],"id":2869,"nodeType":"VariableDeclarationStatement","src":"6421:33:19"},{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"randomnessString","nameLocation":"6482:16:19","nodeType":"VariableDeclaration","scope":2950,"src":"6468:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2870,"name":"string","nodeType":"ElementaryTypeName","src":"6468:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"id":2874,"name":"_randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6518:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2872,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6501:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2304_$","typeString":"type(library Strings)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2166,"src":"6501:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6501:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6468:62:19"},{"body":{"id":2916,"nodeType":"Block","src":"6575:353:19","statements":[{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"partialNumber","nameLocation":"6607:13:19","nodeType":"VariableDeclaration","scope":2916,"src":"6593:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2887,"name":"string","nodeType":"ElementaryTypeName","src":"6593:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2901,"initialValue":{"arguments":[{"id":2890,"name":"randomnessString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6633:16:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6650:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3131","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6652:2:19","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"6650:4:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6656:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6656:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6655:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3131","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:2:19","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"6655:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2889,"name":"substring","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"6623:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,uint256,uint256) pure returns (string memory)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6593:71:19"},{"expression":{"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2902,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"6682:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2904,"indexExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6699:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6682:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"3c747370616e20783d223132222064793d223438223e","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6774:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5","typeString":"literal_string \"<tspan x=\"12\" dy=\"48\">\""},"value":"<tspan x=\"12\" dy=\"48\">"},{"id":2910,"name":"partialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"6824:13:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f747370616e3e","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6863:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","typeString":"literal_string \"</tspan>\""},"value":"</tspan>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5","typeString":"literal_string \"<tspan x=\"12\" dy=\"48\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","typeString":"literal_string \"</tspan>\""}],"expression":{"id":2907,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6732:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6732:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6732:163:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6704:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2905,"name":"string","nodeType":"ElementaryTypeName","src":"6704:6:19","typeDescriptions":{}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6704:209:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6682:231:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2915,"nodeType":"ExpressionStatement","src":"6682:231:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"37","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6567:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"6563:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2917,"initializationExpression":{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"i","nameLocation":"6556:1:19","nodeType":"VariableDeclaration","scope":2917,"src":"6550:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2877,"name":"uint8","nodeType":"ElementaryTypeName","src":"6550:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2880,"initialValue":{"hexValue":"30","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6550:11:19"},"loopExpression":{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6570:3:19","subExpression":{"id":2884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6570:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2886,"nodeType":"ExpressionStatement","src":"6570:3:19"},"nodeType":"ForStatement","src":"6545:383:19"},{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6941:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2920,"indexExpression":{"hexValue":"32","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6947:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6941:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":2925,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7014:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2927,"indexExpression":{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7031:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7014:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2928,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7055:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2930,"indexExpression":{"hexValue":"31","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7072:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7055:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2931,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7096:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2933,"indexExpression":{"hexValue":"32","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7113:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7096:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2934,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7137:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2936,"indexExpression":{"hexValue":"33","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7137:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2937,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7178:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2939,"indexExpression":{"hexValue":"34","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7195:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7178:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2940,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7219:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2942,"indexExpression":{"hexValue":"35","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7236:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7219:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2943,"name":"slicedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"7260:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$7_memory_ptr","typeString":"string memory[7] memory"}},"id":2945,"indexExpression":{"hexValue":"36","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7277:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7260:19:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2923,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6976:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6976:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6976:321:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6952:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2921,"name":"string","nodeType":"ElementaryTypeName","src":"6952:6:19","typeDescriptions":{}}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6952:359:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6941:370:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2949,"nodeType":"ExpressionStatement","src":"6941:370:19"}]}},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2965,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7561:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2967,"indexExpression":{"hexValue":"33","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7567:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7561:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c2f746578743e3c2f7376673e","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:15:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a","typeString":"literal_string \"</text></svg>\""},"value":"</text></svg>"},"src":"7561:26:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2970,"nodeType":"ExpressionStatement","src":"7561:26:19"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2975,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7629:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2977,"indexExpression":{"hexValue":"30","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7635:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7629:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2978,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7639:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2980,"indexExpression":{"hexValue":"31","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7639:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2981,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7649:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2983,"indexExpression":{"hexValue":"32","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7655:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7649:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2984,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7659:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2986,"indexExpression":{"hexValue":"33","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7665:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7659:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7612:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7612:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7612:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7605:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2971,"name":"string","nodeType":"ElementaryTypeName","src":"7605:6:19","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7605:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2842,"id":2989,"nodeType":"Return","src":"7598:71:19"}]},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"_generateSVG","nameLocation":"5931:12:19","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"_randomness","nameLocation":"5952:11:19","nodeType":"VariableDeclaration","scope":2991,"src":"5944:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"5944:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"_metadataCleared","nameLocation":"5970:16:19","nodeType":"VariableDeclaration","scope":2991,"src":"5965:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"5965:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5943:44:19"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"6035:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"6035:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6034:15:19"},"scope":3309,"src":"5922:1754:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"7791:231:19","statements":[{"assignments":[2999],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"baseURL","nameLocation":"7815:7:19","nodeType":"VariableDeclaration","scope":3027,"src":"7801:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2998,"name":"string","nodeType":"ElementaryTypeName","src":"7801:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3001,"initialValue":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7825:28:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"nodeType":"VariableDeclarationStatement","src":"7801:52:19"},{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"7877:16:19","nodeType":"VariableDeclaration","scope":3027,"src":"7863:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3002,"name":"string","nodeType":"ElementaryTypeName","src":"7863:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3017,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3012,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"7940:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3010,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7923:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7923:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7923:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7916:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3008,"name":"string","nodeType":"ElementaryTypeName","src":"7916:6:19","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7910:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3006,"name":"bytes","nodeType":"ElementaryTypeName","src":"7910:5:19","typeDescriptions":{}}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7910:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3004,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"7896:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2056_$","typeString":"type(library Base64)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"7896:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7896:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7863:84:19"},{"expression":{"arguments":[{"arguments":[{"id":3022,"name":"baseURL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"7988:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3023,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"7997:16:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3020,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7971:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7971:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7971:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7964:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3018,"name":"string","nodeType":"ElementaryTypeName","src":"7964:6:19","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2997,"id":3026,"nodeType":"Return","src":"7957:58:19"}]},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"_svgToImageURI","nameLocation":"7691:14:19","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"svg","nameLocation":"7720:3:19","nodeType":"VariableDeclaration","scope":3028,"src":"7706:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2992,"name":"string","nodeType":"ElementaryTypeName","src":"7706:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7705:19:19"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"7772:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"7772:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7771:15:19"},"scope":3309,"src":"7682:340:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3082,"nodeType":"Block","src":"8170:264:19","statements":[{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"strBytes","nameLocation":"8193:8:19","nodeType":"VariableDeclaration","scope":3082,"src":"8180:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3039,"name":"bytes","nodeType":"ElementaryTypeName","src":"8180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3045,"initialValue":{"arguments":[{"id":3043,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"8210:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8204:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"8204:5:19","typeDescriptions":{}}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8204:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8180:34:19"},{"assignments":[3047],"declarations":[{"constant":false,"id":3047,"mutability":"mutable","name":"result","nameLocation":"8237:6:19","nodeType":"VariableDeclaration","scope":3082,"src":"8224:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3046,"name":"bytes","nodeType":"ElementaryTypeName","src":"8224:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3054,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8256:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3051,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"8267:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8256:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8246:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3048,"name":"bytes","nodeType":"ElementaryTypeName","src":"8250:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8246:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8224:54:19"},{"body":{"id":3075,"nodeType":"Block","src":"8336:61:19","statements":[{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"8350:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3069,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"8357:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3067,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"8361:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8357:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8350:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3070,"name":"strBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"8375:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3072,"indexExpression":{"id":3071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"8384:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8375:11:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8350:36:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3074,"nodeType":"ExpressionStatement","src":"8350:36:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"8317:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3060,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8321:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8317:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3076,"initializationExpression":{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"i","nameLocation":"8301:1:19","nodeType":"VariableDeclaration","scope":3076,"src":"8293:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"8293:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"id":3057,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"8305:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8293:22:19"},"loopExpression":{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8331:3:19","subExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"8331:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ExpressionStatement","src":"8331:3:19"},"nodeType":"ForStatement","src":"8288:109:19"},{"expression":{"arguments":[{"id":3079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"8420:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8413:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3077,"name":"string","nodeType":"ElementaryTypeName","src":"8413:6:19","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8413:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3038,"id":3081,"nodeType":"Return","src":"8406:21:19"}]},"functionSelector":"1dcd9b55","id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"substring","nameLocation":"8037:9:19","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"str","nameLocation":"8070:3:19","nodeType":"VariableDeclaration","scope":3083,"src":"8056:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"8056:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"startIndex","nameLocation":"8091:10:19","nodeType":"VariableDeclaration","scope":3083,"src":"8083:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"8083:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"endIndex","nameLocation":"8119:8:19","nodeType":"VariableDeclaration","scope":3083,"src":"8111:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8111:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8046:87:19"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"8155:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"8155:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8154:15:19"},"scope":3309,"src":"8028:406:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[2385],"body":{"id":3145,"nodeType":"Block","src":"8515:578:19","statements":[{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"unrevealedCount","nameLocation":"8533:15:19","nodeType":"VariableDeclaration","scope":3145,"src":"8525:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"8525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3095,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3091,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8551:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8551:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3093,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"8567:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8551:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8525:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"unrevealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8596:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8596:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"8592:63:19","trueBody":{"id":3101,"nodeType":"Block","src":"8618:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8639:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3088,"id":3100,"nodeType":"Return","src":"8632:12:19"}]}},{"assignments":[3104],"declarations":[{"constant":false,"id":3104,"mutability":"mutable","name":"batchSizeCriteria","nameLocation":"8669:17:19","nodeType":"VariableDeclaration","scope":3145,"src":"8664:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3103,"name":"bool","nodeType":"ElementaryTypeName","src":"8664:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3106,"initialValue":{"hexValue":"66616c7365","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8689:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8664:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8708:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8728:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8708:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"unrevealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8733:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3111,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8752:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8733:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8708:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3119,"nodeType":"IfStatement","src":"8704:116:19","trueBody":{"id":3118,"nodeType":"Block","src":"8771:49:19","statements":[{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3114,"name":"batchSizeCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"8785:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8805:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8785:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3117,"nodeType":"ExpressionStatement","src":"8785:24:19"}]}},{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"intervalCriteria","nameLocation":"8834:16:19","nodeType":"VariableDeclaration","scope":3145,"src":"8829:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3120,"name":"bool","nodeType":"ElementaryTypeName","src":"8829:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3123,"initialValue":{"hexValue":"66616c7365","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8853:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8829:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8885:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8904:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8885:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3127,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8921:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8921:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3129,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8939:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8921:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3131,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8956:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8921:51:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8885:87:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"8868:163:19","trueBody":{"id":3138,"nodeType":"Block","src":"8983:48:19","statements":[{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"intervalCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"8997:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9016:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8997:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"ExpressionStatement","src":"8997:23:19"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"batchSizeCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"9048:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3141,"name":"intervalCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"9069:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9048:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9047:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3088,"id":3144,"nodeType":"Return","src":"9040:46:19"}]},"functionSelector":"cf3b94cd","id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"shouldReveal","nameLocation":"8464:12:19","nodeType":"FunctionDefinition","overrides":{"id":3085,"nodeType":"OverrideSpecifier","overrides":[],"src":"8491:8:19"},"parameters":{"id":3084,"nodeType":"ParameterList","parameters":[],"src":"8476:2:19"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"8509:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3086,"name":"bool","nodeType":"ElementaryTypeName","src":"8509:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8508:6:19"},"scope":3309,"src":"8455:638:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2390],"body":{"id":3185,"nodeType":"Block","src":"9199:485:19","statements":[{"condition":{"id":3152,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"9213:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3157,"nodeType":"IfStatement","src":"9209:74:19","trueBody":{"id":3156,"nodeType":"Block","src":"9233:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3153,"name":"RevealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9254:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9254:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3155,"nodeType":"RevertStatement","src":"9247:25:19"}]}},{"condition":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9296:15:19","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3158,"name":"shouldReveal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"9297:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9297:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3165,"nodeType":"IfStatement","src":"9292:75:19","trueBody":{"id":3164,"nodeType":"Block","src":"9313:54:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3161,"name":"RevealCriteriaNotMet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9334:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9334:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3163,"nodeType":"RevertStatement","src":"9327:29:19"}]}},{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3166,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"9376:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3169,"name":"VRF_GAS_LANE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9439:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3170,"name":"VRF_SUBSCRIPTION_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9465:19:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3171,"name":"VRF_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9498:25:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3172,"name":"VRF_CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"9537:22:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3173,"name":"VRF_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"9573:13:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3167,"name":"VRF_COORDINATOR_V2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9388:18:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":144,"src":"9388:37:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9388:208:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9376:220:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"9376:220:19"},{"expression":{"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3177,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"9606:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9627:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9606:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3180,"nodeType":"ExpressionStatement","src":"9606:25:19"},{"eventCall":{"arguments":[{"id":3182,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"9667:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3181,"name":"BatchRevealRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"9646:20:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9646:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"EmitStatement","src":"9641:36:19"}]},"functionSelector":"96634a40","id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"revealPendingMetadata","nameLocation":"9108:21:19","nodeType":"FunctionDefinition","overrides":{"id":3148,"nodeType":"OverrideSpecifier","overrides":[],"src":"9155:8:19"},"parameters":{"id":3147,"nodeType":"ParameterList","parameters":[],"src":"9129:2:19"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"requestId","nameLocation":"9189:9:19","nodeType":"VariableDeclaration","scope":3186,"src":"9181:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"9181:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9180:19:19"},"scope":3309,"src":"9099:585:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3236,"nodeType":"Block","src":"9758:506:19","statements":[{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"totalSupply","nameLocation":"9776:11:19","nodeType":"VariableDeclaration","scope":3236,"src":"9768:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"9768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3193,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9790:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9790:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9768:35:19"},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"startIndex","nameLocation":"9821:10:19","nodeType":"VariableDeclaration","scope":3236,"src":"9813:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9834:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9834:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9813:40:19"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"endIndex","nameLocation":"9871:8:19","nodeType":"VariableDeclaration","scope":3236,"src":"9863:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"9863:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"9882:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9896:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9882:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9863:34:19"},{"expression":{"arguments":[{"arguments":[{"id":3212,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"9976:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3213,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10014:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3214,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"10049:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3211,"name":"Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"9937:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Metadata_$2428_storage_ptr_$","typeString":"type(struct NFTCollection.Metadata storage pointer)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["startIndex","endIndex","entropy"],"nodeType":"FunctionCall","src":"9937:137:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}],"expression":{"id":3208,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"9907:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9907:16:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr_$_t_struct$_Metadata_$2428_storage_$returns$__$bound_to$_t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr_$","typeString":"function (struct NFTCollection.Metadata storage ref[] storage pointer,struct NFTCollection.Metadata storage ref)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9907:177:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"9907:177:19"},{"expression":{"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3218,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"10094:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3219,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10112:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3221,"nodeType":"ExpressionStatement","src":"10094:29:19"},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3222,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10133:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3223,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10150:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10150:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"10133:32:19"},{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"10175:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10196:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10175:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"ExpressionStatement","src":"10175:26:19"},{"eventCall":{"arguments":[{"id":3232,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"10236:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3233,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10248:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3231,"name":"BatchRevealFinished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10216:19:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10216:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"EmitStatement","src":"10211:46:19"}]},"id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"_fulfillRandomnessForMetadata","nameLocation":"9699:29:19","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"randomness","nameLocation":"9737:10:19","nodeType":"VariableDeclaration","scope":3237,"src":"9729:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"9729:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9728:20:19"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"9758:0:19"},"scope":3309,"src":"9690:574:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[69],"body":{"id":3252,"nodeType":"Block","src":"10387:62:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3247,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"10427:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3249,"indexExpression":{"hexValue":"30","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10439:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10427:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3246,"name":"_fulfillRandomnessForMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"10397:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10397:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"10397:45:19"}]},"id":3253,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"10291:18:19","nodeType":"FunctionDefinition","overrides":{"id":3244,"nodeType":"OverrideSpecifier","overrides":[],"src":"10374:8:19"},"parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3253,"src":"10310:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"10310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"randomWords","nameLocation":"10336:11:19","nodeType":"VariableDeclaration","scope":3253,"src":"10319:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"10319:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ArrayTypeName","src":"10319:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10309:39:19"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[],"src":"10387:0:19"},"scope":3309,"src":"10282:167:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[108],"body":{"id":3271,"nodeType":"Block","src":"10609:69:19","statements":[{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"10619:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10634:19:19","subExpression":{"id":3264,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"10635:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3266,"name":"shouldReveal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"10657:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10657:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10634:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10619:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"ExpressionStatement","src":"10619:52:19"}]},"functionSelector":"6e04ff0d","id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"10480:11:19","nodeType":"FunctionDefinition","overrides":{"id":3257,"nodeType":"OverrideSpecifier","overrides":[],"src":"10546:8:19"},"parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"10492:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3254,"name":"bytes","nodeType":"ElementaryTypeName","src":"10492:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10491:16:19"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"10577:12:19","nodeType":"VariableDeclaration","scope":3272,"src":"10572:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3258,"name":"bool","nodeType":"ElementaryTypeName","src":"10572:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"10591:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"10591:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10571:33:19"},"scope":3309,"src":"10471:207:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[114],"body":{"id":3281,"nodeType":"Block","src":"10741:40:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3278,"name":"revealPendingMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"10751:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10751:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"10751:23:19"}]},"functionSelector":"4585e33b","id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"10693:13:19","nodeType":"FunctionDefinition","overrides":{"id":3276,"nodeType":"OverrideSpecifier","overrides":[],"src":"10732:8:19"},"parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"10707:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3273,"name":"bytes","nodeType":"ElementaryTypeName","src":"10707:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10706:16:19"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[],"src":"10741:0:19"},"scope":3309,"src":"10684:97:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2395],"body":{"id":3294,"nodeType":"Block","src":"10913:53:19","statements":[{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3290,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"10923:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3291,"name":"_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"10943:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10923:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3293,"nodeType":"ExpressionStatement","src":"10923:36:19"}]},"functionSelector":"aaae4e23","id":3295,"implemented":true,"kind":"function","modifiers":[{"id":3288,"kind":"modifierInvocation","modifierName":{"id":3287,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"10899:9:19"},"nodeType":"ModifierInvocation","src":"10899:9:19"}],"name":"setRevealBatchSize","nameLocation":"10812:18:19","nodeType":"FunctionDefinition","overrides":{"id":3286,"nodeType":"OverrideSpecifier","overrides":[],"src":"10882:8:19"},"parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"10839:16:19","nodeType":"VariableDeclaration","scope":3295,"src":"10831:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"10831:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10830:26:19"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"10913:0:19"},"scope":3309,"src":"10803:163:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2400],"body":{"id":3307,"nodeType":"Block","src":"11080:51:19","statements":[{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"11090:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3304,"name":"_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"11109:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11090:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"11090:34:19"}]},"functionSelector":"5c65d81f","id":3308,"implemented":true,"kind":"function","modifiers":[{"id":3301,"kind":"modifierInvocation","modifierName":{"id":3300,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"11066:9:19"},"nodeType":"ModifierInvocation","src":"11066:9:19"}],"name":"setRevealInterval","nameLocation":"10981:17:19","nodeType":"FunctionDefinition","overrides":{"id":3299,"nodeType":"OverrideSpecifier","overrides":[],"src":"11049:8:19"},"parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"_revealInterval","nameLocation":"11007:15:19","nodeType":"VariableDeclaration","scope":3308,"src":"10999:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"10999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:25:19"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[],"src":"11080:0:19"},"scope":3309,"src":"10972:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3310,"src":"527:10606:19","usedErrors":[47,2475,2477,2479,2481,2483,2485,2487,2489]}],"src":"32:11102:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"KeeperBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122013546aa98c3650cf465ba43625f3656a72607a33f43decf68e86e7ad7bdfe6a764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD PUSH11 0xA98C3650CF465BA43625F3 PUSH6 0x6A72607A33F4 RETURNDATASIZE 0xEC 0xF6 DUP15 DUP7 0xE7 0xAD PUSH28 0xDFE6A764736F6C634300080400330000000000000000000000000000 ","sourceMap":"57:511:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122013546aa98c3650cf465ba43625f3656a72607a33f43decf68e86e7ad7bdfe6a764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD PUSH11 0xA98C3650CF465BA43625F3 PUSH6 0x6A72607A33F4 RETURNDATASIZE 0xEC 0xF6 DUP15 DUP7 0xE7 0xAD PUSH28 0xDFE6A764736F6C634300080400330000000000000000000000000000 ","sourceMap":"57:511:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":\"KeeperBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"KeeperCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":\"KeeperCompatible\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"KeeperCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":212,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:20","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:20","statements":[{"nodeType":"YulAssignment","src":"112:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:20"},"nodeType":"YulFunctionCall","src":"137:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:20"},"nodeType":"YulFunctionCall","src":"121:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:20"},"nodeType":"YulFunctionCall","src":"196:21:20"},"nodeType":"YulExpressionStatement","src":"196:21:20"},{"nodeType":"YulVariableDeclaration","src":"226:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:20"},"nodeType":"YulFunctionCall","src":"237:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:20"},"nodeType":"YulFunctionCall","src":"293:12:20"},"nodeType":"YulExpressionStatement","src":"293:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:20"},"nodeType":"YulFunctionCall","src":"265:25:20"},"nodeType":"YulIf","src":"262:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:20"},"nodeType":"YulFunctionCall","src":"316:39:20"},"nodeType":"YulExpressionStatement","src":"316:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:20","type":""}],"src":"7:354:20"},{"body":{"nodeType":"YulBlock","src":"454:215:20","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:20"},"nodeType":"YulFunctionCall","src":"505:12:20"},"nodeType":"YulExpressionStatement","src":"505:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:20"},"nodeType":"YulFunctionCall","src":"478:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:20"},"nodeType":"YulFunctionCall","src":"474:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:20"},"nodeType":"YulFunctionCall","src":"467:35:20"},"nodeType":"YulIf","src":"464:2:20"},{"nodeType":"YulVariableDeclaration","src":"528:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:20"},"nodeType":"YulFunctionCall","src":"542:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:20","type":""}]},{"nodeType":"YulAssignment","src":"564:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:20"},"nodeType":"YulFunctionCall","src":"632:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:20"},"nodeType":"YulFunctionCall","src":"573:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:20","type":""}],"src":"381:288:20"},{"body":{"nodeType":"YulBlock","src":"789:538:20","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:20"},"nodeType":"YulFunctionCall","src":"837:12:20"},"nodeType":"YulExpressionStatement","src":"837:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:20"},"nodeType":"YulFunctionCall","src":"806:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:20"},"nodeType":"YulFunctionCall","src":"802:32:20"},"nodeType":"YulIf","src":"799:2:20"},{"nodeType":"YulBlock","src":"861:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:20"},"nodeType":"YulFunctionCall","src":"896:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:20"},"nodeType":"YulFunctionCall","src":"890:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:20"},"nodeType":"YulFunctionCall","src":"963:12:20"},"nodeType":"YulExpressionStatement","src":"963:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:20"},"nodeType":"YulFunctionCall","src":"930:30:20"},"nodeType":"YulIf","src":"927:2:20"},{"nodeType":"YulAssignment","src":"991:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:20"},"nodeType":"YulFunctionCall","src":"1043:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:20"},"nodeType":"YulFunctionCall","src":"1001:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:20"}]}]},{"nodeType":"YulBlock","src":"1095:225:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:20"},"nodeType":"YulFunctionCall","src":"1130:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:20"},"nodeType":"YulFunctionCall","src":"1124:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:20"},"nodeType":"YulFunctionCall","src":"1198:12:20"},"nodeType":"YulExpressionStatement","src":"1198:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:20"},"nodeType":"YulFunctionCall","src":"1165:30:20"},"nodeType":"YulIf","src":"1162:2:20"},{"nodeType":"YulAssignment","src":"1226:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:20"},"nodeType":"YulFunctionCall","src":"1278:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:20"},"nodeType":"YulFunctionCall","src":"1236:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:20","type":""}],"src":"675:652:20"},{"body":{"nodeType":"YulBlock","src":"1374:88:20","statements":[{"nodeType":"YulAssignment","src":"1384:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:20"},"nodeType":"YulFunctionCall","src":"1394:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:20"},"nodeType":"YulFunctionCall","src":"1423:33:20"},"nodeType":"YulExpressionStatement","src":"1423:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:20","type":""}],"src":"1333:129:20"},{"body":{"nodeType":"YulBlock","src":"1508:35:20","statements":[{"nodeType":"YulAssignment","src":"1518:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:20"},"nodeType":"YulFunctionCall","src":"1528:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:20","type":""}],"src":"1468:75:20"},{"body":{"nodeType":"YulBlock","src":"1616:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:20"},"nodeType":"YulFunctionCall","src":"1723:18:20"},"nodeType":"YulExpressionStatement","src":"1723:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:20"},"nodeType":"YulFunctionCall","src":"1690:30:20"},"nodeType":"YulIf","src":"1687:2:20"},{"nodeType":"YulAssignment","src":"1753:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:20"},"nodeType":"YulFunctionCall","src":"1761:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:20"}]},{"nodeType":"YulAssignment","src":"1827:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:20"},"nodeType":"YulFunctionCall","src":"1835:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:20","type":""}],"src":"1549:308:20"},{"body":{"nodeType":"YulBlock","src":"1912:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:20"},"nodeType":"YulFunctionCall","src":"2012:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:20"},"nodeType":"YulFunctionCall","src":"2031:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:20"},"nodeType":"YulFunctionCall","src":"2025:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:20"},"nodeType":"YulFunctionCall","src":"2005:39:20"},"nodeType":"YulExpressionStatement","src":"2005:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:20"},"nodeType":"YulFunctionCall","src":"1949:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:20","statements":[{"nodeType":"YulAssignment","src":"1965:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:20"},"nodeType":"YulFunctionCall","src":"1970:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:20","statements":[]},"src":"1941:113:20"},{"body":{"nodeType":"YulBlock","src":"2088:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:20"},"nodeType":"YulFunctionCall","src":"2134:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:20"},"nodeType":"YulFunctionCall","src":"2127:27:20"},"nodeType":"YulExpressionStatement","src":"2127:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:20"},"nodeType":"YulFunctionCall","src":"2066:13:20"},"nodeType":"YulIf","src":"2063:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:20","type":""}],"src":"1863:307:20"},{"body":{"nodeType":"YulBlock","src":"2227:269:20","statements":[{"nodeType":"YulAssignment","src":"2237:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:20"},"nodeType":"YulFunctionCall","src":"2247:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:20"},"nodeType":"YulFunctionCall","src":"2294:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:20","statements":[{"nodeType":"YulAssignment","src":"2359:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:20"},"nodeType":"YulFunctionCall","src":"2369:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:20"},"nodeType":"YulFunctionCall","src":"2318:26:20"},"nodeType":"YulIf","src":"2315:2:20"},{"body":{"nodeType":"YulBlock","src":"2448:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:20"},"nodeType":"YulFunctionCall","src":"2462:18:20"},"nodeType":"YulExpressionStatement","src":"2462:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:20"},"nodeType":"YulFunctionCall","src":"2432:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:20"},"nodeType":"YulFunctionCall","src":"2409:38:20"},"nodeType":"YulIf","src":"2406:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:20","type":""}],"src":"2176:320:20"},{"body":{"nodeType":"YulBlock","src":"2545:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:20"},"nodeType":"YulFunctionCall","src":"2585:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:20"},"nodeType":"YulFunctionCall","src":"2573:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:20"},"nodeType":"YulFunctionCall","src":"2726:18:20"},"nodeType":"YulExpressionStatement","src":"2726:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:20"},"nodeType":"YulFunctionCall","src":"2664:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:20"},"nodeType":"YulFunctionCall","src":"2700:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:20"},"nodeType":"YulFunctionCall","src":"2661:62:20"},"nodeType":"YulIf","src":"2658:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:20"},"nodeType":"YulFunctionCall","src":"2755:22:20"},"nodeType":"YulExpressionStatement","src":"2755:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:20","type":""}],"src":"2502:281:20"},{"body":{"nodeType":"YulBlock","src":"2817:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:20"},"nodeType":"YulFunctionCall","src":"2827:88:20"},"nodeType":"YulExpressionStatement","src":"2827:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:20"},"nodeType":"YulFunctionCall","src":"2924:15:20"},"nodeType":"YulExpressionStatement","src":"2924:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:20"},"nodeType":"YulFunctionCall","src":"2948:15:20"},"nodeType":"YulExpressionStatement","src":"2948:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:20"},{"body":{"nodeType":"YulBlock","src":"3003:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:20"},"nodeType":"YulFunctionCall","src":"3013:88:20"},"nodeType":"YulExpressionStatement","src":"3013:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:20"},"nodeType":"YulFunctionCall","src":"3110:15:20"},"nodeType":"YulExpressionStatement","src":"3110:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:20"},"nodeType":"YulFunctionCall","src":"3134:15:20"},"nodeType":"YulExpressionStatement","src":"3134:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:20"},{"body":{"nodeType":"YulBlock","src":"3209:54:20","statements":[{"nodeType":"YulAssignment","src":"3219:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:20"},"nodeType":"YulFunctionCall","src":"3233:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:20"},"nodeType":"YulFunctionCall","src":"3249:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:20"},"nodeType":"YulFunctionCall","src":"3229:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:20","type":""}],"src":"3161:102:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620024f5380380620024f5833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61216f80620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611625565b6102bc565b6040516100fb9190611936565b60405180910390f35b61010c61039e565b6040516101199190611951565b60405180910390f35b61013c60048036038101906101379190611677565b610430565b60405161014991906118cf565b60405180910390f35b61016c600480360381019061016791906115e9565b610476565b005b610188600480360381019061018391906114e3565b61058e565b005b6101a4600480360381019061019f91906114e3565b6105ee565b005b6101c060048036038101906101bb9190611677565b61060e565b6040516101cd91906118cf565b60405180910390f35b6101f060048036038101906101eb919061147e565b6106c0565b6040516101fd9190611a93565b60405180910390f35b61020e610778565b60405161021b9190611951565b60405180910390f35b61023e600480360381019061023991906115ad565b61080a565b005b61025a60048036038101906102559190611532565b610820565b005b61027660048036038101906102719190611677565b610882565b6040516102839190611951565b60405180910390f35b6102a660048036038101906102a191906114a7565b6108ea565b6040516102b39190611936565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611cb8565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611a53565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a13565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a73565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611a33565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906119f3565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611cb8565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611a73565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d29291906118ab565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f18161117d565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611a33565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906119b3565b60405180910390fd5b610c7a8383836111e9565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611bce565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611b47565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111ee565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e56906119d3565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611936565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111f3565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611973565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611178565b600082905060005b6000821461104a57808061103390611d1b565b915050600a826110439190611b9d565b9150611020565b60008167ffffffffffffffff81111561108c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110be5781602001600182028036833780820191505090505b5090505b60008514611171576001826110d79190611bce565b9150600a856110e69190611d64565b60306110f29190611b47565b60f81b81838151811061112e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561116a9190611b9d565b94506110c2565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006112148473ffffffffffffffffffffffffffffffffffffffff1661138a565b1561137d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261123d610a33565b8786866040518563ffffffff1660e01b815260040161125f94939291906118ea565b602060405180830381600087803b15801561127957600080fd5b505af19250505080156112aa57506040513d601f19601f820116820180604052508101906112a7919061164e565b60015b61132d573d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50600081511415611325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131c90611973565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611382565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006113c06113bb84611ad3565b611aae565b9050828152602081018484840111156113d857600080fd5b6113e3848285611c76565b509392505050565b6000813590506113fa816120dd565b92915050565b60008135905061140f816120f4565b92915050565b6000813590506114248161210b565b92915050565b6000815190506114398161210b565b92915050565b600082601f83011261145057600080fd5b81356114608482602086016113ad565b91505092915050565b60008135905061147881612122565b92915050565b60006020828403121561149057600080fd5b600061149e848285016113eb565b91505092915050565b600080604083850312156114ba57600080fd5b60006114c8858286016113eb565b92505060206114d9858286016113eb565b9150509250929050565b6000806000606084860312156114f857600080fd5b6000611506868287016113eb565b9350506020611517868287016113eb565b925050604061152886828701611469565b9150509250925092565b6000806000806080858703121561154857600080fd5b6000611556878288016113eb565b9450506020611567878288016113eb565b935050604061157887828801611469565b925050606085013567ffffffffffffffff81111561159557600080fd5b6115a18782880161143f565b91505092959194509250565b600080604083850312156115c057600080fd5b60006115ce858286016113eb565b92505060206115df85828601611400565b9150509250929050565b600080604083850312156115fc57600080fd5b600061160a858286016113eb565b925050602061161b85828601611469565b9150509250929050565b60006020828403121561163757600080fd5b600061164584828501611415565b91505092915050565b60006020828403121561166057600080fd5b600061166e8482850161142a565b91505092915050565b60006020828403121561168957600080fd5b600061169784828501611469565b91505092915050565b6116a981611c02565b82525050565b6116b881611c14565b82525050565b60006116c982611b04565b6116d38185611b1a565b93506116e3818560208601611c85565b6116ec81611e51565b840191505092915050565b600061170282611b0f565b61170c8185611b2b565b935061171c818560208601611c85565b61172581611e51565b840191505092915050565b600061173b82611b0f565b6117458185611b3c565b9350611755818560208601611c85565b80840191505092915050565b600061176e603283611b2b565b915061177982611e62565b604082019050919050565b6000611791602583611b2b565b915061179c82611eb1565b604082019050919050565b60006117b4602483611b2b565b91506117bf82611f00565b604082019050919050565b60006117d7601983611b2b565b91506117e282611f4f565b602082019050919050565b60006117fa602983611b2b565b915061180582611f78565b604082019050919050565b600061181d603e83611b2b565b915061182882611fc7565b604082019050919050565b6000611840601883611b2b565b915061184b82612016565b602082019050919050565b6000611863602183611b2b565b915061186e8261203f565b604082019050919050565b6000611886602e83611b2b565b91506118918261208e565b604082019050919050565b6118a581611c6c565b82525050565b60006118b78285611730565b91506118c38284611730565b91508190509392505050565b60006020820190506118e460008301846116a0565b92915050565b60006080820190506118ff60008301876116a0565b61190c60208301866116a0565b611919604083018561189c565b818103606083015261192b81846116be565b905095945050505050565b600060208201905061194b60008301846116af565b92915050565b6000602082019050818103600083015261196b81846116f7565b905092915050565b6000602082019050818103600083015261198c81611761565b9050919050565b600060208201905081810360008301526119ac81611784565b9050919050565b600060208201905081810360008301526119cc816117a7565b9050919050565b600060208201905081810360008301526119ec816117ca565b9050919050565b60006020820190508181036000830152611a0c816117ed565b9050919050565b60006020820190508181036000830152611a2c81611810565b9050919050565b60006020820190508181036000830152611a4c81611833565b9050919050565b60006020820190508181036000830152611a6c81611856565b9050919050565b60006020820190508181036000830152611a8c81611879565b9050919050565b6000602082019050611aa8600083018461189c565b92915050565b6000611ab8611ac9565b9050611ac48282611cea565b919050565b6000604051905090565b600067ffffffffffffffff821115611aee57611aed611e22565b5b611af782611e51565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b5282611c6c565b9150611b5d83611c6c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b9257611b91611d95565b5b828201905092915050565b6000611ba882611c6c565b9150611bb383611c6c565b925082611bc357611bc2611dc4565b5b828204905092915050565b6000611bd982611c6c565b9150611be483611c6c565b925082821015611bf757611bf6611d95565b5b828203905092915050565b6000611c0d82611c4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ca3578082015181840152602081019050611c88565b83811115611cb2576000848401525b50505050565b60006002820490506001821680611cd057607f821691505b60208210811415611ce457611ce3611df3565b5b50919050565b611cf382611e51565b810181811067ffffffffffffffff82111715611d1257611d11611e22565b5b80604052505050565b6000611d2682611c6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d5957611d58611d95565b5b600182019050919050565b6000611d6f82611c6c565b9150611d7a83611c6c565b925082611d8a57611d89611dc4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6120e681611c02565b81146120f157600080fd5b50565b6120fd81611c14565b811461210857600080fd5b50565b61211481611c20565b811461211f57600080fd5b50565b61212b81611c6c565b811461213657600080fd5b5056fea2646970667358221220db9d3f8c937313de0fca2b6f27913452c61faf6c42edbc7896d362c37024134664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24F5 CODESIZE SUB DUP1 PUSH3 0x24F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216F DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x117D JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1171 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x112E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP5 POP PUSH2 0x10C2 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x138A JUMP JUMPDEST ISZERO PUSH2 0x137D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x123D PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12AA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x132D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C0 PUSH2 0x13BB DUP5 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x20DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1478 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D9 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1517 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1528 DUP7 DUP3 DUP8 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1567 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1578 DUP8 DUP3 DUP9 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A1 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DF DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x161B DUP6 DUP3 DUP7 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1645 DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x142A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP5 DUP3 DUP6 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A9 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C9 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x16D3 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x16E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x1745 DUP2 DUP6 PUSH2 0x1B3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1755 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176E PUSH1 0x32 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1779 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1791 PUSH1 0x25 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x179C DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x24 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 PUSH1 0x19 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FA PUSH1 0x29 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D PUSH1 0x3E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1828 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 PUSH1 0x18 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH1 0x21 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1886 PUSH1 0x2E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196B DUP2 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AC DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19EC DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2C DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4C DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6C DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 PUSH2 0x1AC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC4 DUP3 DUP3 PUSH2 0x1CEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF7 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP3 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x1DF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7A DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D8A JUMPI PUSH2 0x1D89 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20E6 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2114 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x212B DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP14 EXTCODEHASH DUP13 SWAP4 PUSH20 0x13DE0FCA2B6F27913452C61FAF6C42EDBC7896D3 PUSH3 0xC37024 SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"628:13718:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:20:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;628:13718:6:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23179:20","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:20","statements":[{"nodeType":"YulAssignment","src":"100:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:20"},"nodeType":"YulFunctionCall","src":"125:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:20"},"nodeType":"YulFunctionCall","src":"109:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:20"},"nodeType":"YulFunctionCall","src":"183:21:20"},"nodeType":"YulExpressionStatement","src":"183:21:20"},{"nodeType":"YulVariableDeclaration","src":"213:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:20"},"nodeType":"YulFunctionCall","src":"224:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:20"},"nodeType":"YulFunctionCall","src":"280:12:20"},"nodeType":"YulExpressionStatement","src":"280:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:20"},"nodeType":"YulFunctionCall","src":"255:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:20"},"nodeType":"YulFunctionCall","src":"252:25:20"},"nodeType":"YulIf","src":"249:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:20"},"nodeType":"YulFunctionCall","src":"303:41:20"},"nodeType":"YulExpressionStatement","src":"303:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:20","type":""}],"src":"7:343:20"},{"body":{"nodeType":"YulBlock","src":"408:87:20","statements":[{"nodeType":"YulAssignment","src":"418:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"440:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:20"},"nodeType":"YulFunctionCall","src":"427:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"418:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"456:26:20"},"nodeType":"YulFunctionCall","src":"456:33:20"},"nodeType":"YulExpressionStatement","src":"456:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"386:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"394:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"402:5:20","type":""}],"src":"356:139:20"},{"body":{"nodeType":"YulBlock","src":"550:84:20","statements":[{"nodeType":"YulAssignment","src":"560:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"582:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"569:12:20"},"nodeType":"YulFunctionCall","src":"569:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"598:23:20"},"nodeType":"YulFunctionCall","src":"598:30:20"},"nodeType":"YulExpressionStatement","src":"598:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"528:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"536:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"544:5:20","type":""}],"src":"501:133:20"},{"body":{"nodeType":"YulBlock","src":"691:86:20","statements":[{"nodeType":"YulAssignment","src":"701:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"723:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"710:12:20"},"nodeType":"YulFunctionCall","src":"710:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"765:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"739:25:20"},"nodeType":"YulFunctionCall","src":"739:32:20"},"nodeType":"YulExpressionStatement","src":"739:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"669:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"677:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"685:5:20","type":""}],"src":"640:137:20"},{"body":{"nodeType":"YulBlock","src":"845:79:20","statements":[{"nodeType":"YulAssignment","src":"855:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"870:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"864:5:20"},"nodeType":"YulFunctionCall","src":"864:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"855:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"886:25:20"},"nodeType":"YulFunctionCall","src":"886:32:20"},"nodeType":"YulExpressionStatement","src":"886:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"823:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"831:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"839:5:20","type":""}],"src":"783:141:20"},{"body":{"nodeType":"YulBlock","src":"1004:210:20","statements":[{"body":{"nodeType":"YulBlock","src":"1053:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1062:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1055:6:20"},"nodeType":"YulFunctionCall","src":"1055:12:20"},"nodeType":"YulExpressionStatement","src":"1055:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1032:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1040:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:20"},"nodeType":"YulFunctionCall","src":"1028:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1047:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1024:3:20"},"nodeType":"YulFunctionCall","src":"1024:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1017:6:20"},"nodeType":"YulFunctionCall","src":"1017:35:20"},"nodeType":"YulIf","src":"1014:2:20"},{"nodeType":"YulVariableDeclaration","src":"1078:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1105:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:20"},"nodeType":"YulFunctionCall","src":"1092:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1082:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1121:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1181:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1189:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1177:3:20"},"nodeType":"YulFunctionCall","src":"1177:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"1196:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"1204:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1130:46:20"},"nodeType":"YulFunctionCall","src":"1130:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1121:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"982:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"990:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"998:5:20","type":""}],"src":"943:271:20"},{"body":{"nodeType":"YulBlock","src":"1272:87:20","statements":[{"nodeType":"YulAssignment","src":"1282:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1304:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1291:12:20"},"nodeType":"YulFunctionCall","src":"1291:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1347:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1320:26:20"},"nodeType":"YulFunctionCall","src":"1320:33:20"},"nodeType":"YulExpressionStatement","src":"1320:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1250:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1258:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1266:5:20","type":""}],"src":"1220:139:20"},{"body":{"nodeType":"YulBlock","src":"1431:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"1477:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1489:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1479:6:20"},"nodeType":"YulFunctionCall","src":"1479:12:20"},"nodeType":"YulExpressionStatement","src":"1479:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1461:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1448:3:20"},"nodeType":"YulFunctionCall","src":"1448:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1473:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1444:3:20"},"nodeType":"YulFunctionCall","src":"1444:32:20"},"nodeType":"YulIf","src":"1441:2:20"},{"nodeType":"YulBlock","src":"1503:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1522:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1547:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1593:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:20"},"nodeType":"YulFunctionCall","src":"1578:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1602:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1557:20:20"},"nodeType":"YulFunctionCall","src":"1557:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1547:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1401:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1412:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1424:6:20","type":""}],"src":"1365:262:20"},{"body":{"nodeType":"YulBlock","src":"1716:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:20"},"nodeType":"YulFunctionCall","src":"1764:12:20"},"nodeType":"YulExpressionStatement","src":"1764:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1737:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1733:3:20"},"nodeType":"YulFunctionCall","src":"1733:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1758:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1729:3:20"},"nodeType":"YulFunctionCall","src":"1729:32:20"},"nodeType":"YulIf","src":"1726:2:20"},{"nodeType":"YulBlock","src":"1788:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1803:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1817:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1807:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1832:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:20"},"nodeType":"YulFunctionCall","src":"1863:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1842:20:20"},"nodeType":"YulFunctionCall","src":"1842:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1832:6:20"}]}]},{"nodeType":"YulBlock","src":"1915:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1930:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1944:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1934:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1960:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2006:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:20"},"nodeType":"YulFunctionCall","src":"1991:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2015:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1970:20:20"},"nodeType":"YulFunctionCall","src":"1970:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1960:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1678:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1689:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1701:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1709:6:20","type":""}],"src":"1633:407:20"},{"body":{"nodeType":"YulBlock","src":"2146:452:20","statements":[{"body":{"nodeType":"YulBlock","src":"2192:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2204:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2194:6:20"},"nodeType":"YulFunctionCall","src":"2194:12:20"},"nodeType":"YulExpressionStatement","src":"2194:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2167:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2163:3:20"},"nodeType":"YulFunctionCall","src":"2163:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2159:3:20"},"nodeType":"YulFunctionCall","src":"2159:32:20"},"nodeType":"YulIf","src":"2156:2:20"},{"nodeType":"YulBlock","src":"2218:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2233:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2247:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2262:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:20"},"nodeType":"YulFunctionCall","src":"2293:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2272:20:20"},"nodeType":"YulFunctionCall","src":"2272:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:20"}]}]},{"nodeType":"YulBlock","src":"2345:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2390:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2436:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:20"},"nodeType":"YulFunctionCall","src":"2421:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2445:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2400:20:20"},"nodeType":"YulFunctionCall","src":"2400:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2390:6:20"}]}]},{"nodeType":"YulBlock","src":"2473:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2488:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2502:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2492:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2518:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2553:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2564:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:20"},"nodeType":"YulFunctionCall","src":"2549:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2573:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2528:20:20"},"nodeType":"YulFunctionCall","src":"2528:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2518:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2100:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2111:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2123:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2131:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2139:6:20","type":""}],"src":"2046:552:20"},{"body":{"nodeType":"YulBlock","src":"2730:683:20","statements":[{"body":{"nodeType":"YulBlock","src":"2777:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2786:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2789:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2779:6:20"},"nodeType":"YulFunctionCall","src":"2779:12:20"},"nodeType":"YulExpressionStatement","src":"2779:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2751:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2747:3:20"},"nodeType":"YulFunctionCall","src":"2747:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2772:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2743:3:20"},"nodeType":"YulFunctionCall","src":"2743:33:20"},"nodeType":"YulIf","src":"2740:2:20"},{"nodeType":"YulBlock","src":"2803:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2822:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2847:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2893:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:20"},"nodeType":"YulFunctionCall","src":"2878:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2902:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2857:20:20"},"nodeType":"YulFunctionCall","src":"2857:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2847:6:20"}]}]},{"nodeType":"YulBlock","src":"2930:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2975:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:20"},"nodeType":"YulFunctionCall","src":"3006:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2985:20:20"},"nodeType":"YulFunctionCall","src":"2985:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2975:6:20"}]}]},{"nodeType":"YulBlock","src":"3058:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3103:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3138:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:20"},"nodeType":"YulFunctionCall","src":"3134:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3158:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3113:20:20"},"nodeType":"YulFunctionCall","src":"3113:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3103:6:20"}]}]},{"nodeType":"YulBlock","src":"3186:220:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3201:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:20"},"nodeType":"YulFunctionCall","src":"3228:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3215:12:20"},"nodeType":"YulFunctionCall","src":"3215:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3205:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3294:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3306:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3296:6:20"},"nodeType":"YulFunctionCall","src":"3296:12:20"},"nodeType":"YulExpressionStatement","src":"3296:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3266:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3274:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3263:2:20"},"nodeType":"YulFunctionCall","src":"3263:30:20"},"nodeType":"YulIf","src":"3260:2:20"},{"nodeType":"YulAssignment","src":"3324:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3379:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:20"},"nodeType":"YulFunctionCall","src":"3364:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3334:29:20"},"nodeType":"YulFunctionCall","src":"3334:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3324:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2676:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2687:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2699:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2707:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2715:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2723:6:20","type":""}],"src":"2604:809:20"},{"body":{"nodeType":"YulBlock","src":"3499:321:20","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:20"},"nodeType":"YulFunctionCall","src":"3547:12:20"},"nodeType":"YulExpressionStatement","src":"3547:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3529:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3516:3:20"},"nodeType":"YulFunctionCall","src":"3516:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3512:3:20"},"nodeType":"YulFunctionCall","src":"3512:32:20"},"nodeType":"YulIf","src":"3509:2:20"},{"nodeType":"YulBlock","src":"3571:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3600:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3590:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3615:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3650:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3661:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:20"},"nodeType":"YulFunctionCall","src":"3646:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3670:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3625:20:20"},"nodeType":"YulFunctionCall","src":"3625:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3615:6:20"}]}]},{"nodeType":"YulBlock","src":"3698:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3713:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3727:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3717:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3743:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3775:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3786:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3771:3:20"},"nodeType":"YulFunctionCall","src":"3771:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3795:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3753:17:20"},"nodeType":"YulFunctionCall","src":"3753:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3743:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3461:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3472:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3484:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3492:6:20","type":""}],"src":"3419:401:20"},{"body":{"nodeType":"YulBlock","src":"3909:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"3955:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3964:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3967:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3957:6:20"},"nodeType":"YulFunctionCall","src":"3957:12:20"},"nodeType":"YulExpressionStatement","src":"3957:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:20"},"nodeType":"YulFunctionCall","src":"3926:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:20"},"nodeType":"YulFunctionCall","src":"3922:32:20"},"nodeType":"YulIf","src":"3919:2:20"},{"nodeType":"YulBlock","src":"3981:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3996:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4010:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4000:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4025:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4071:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:20"},"nodeType":"YulFunctionCall","src":"4056:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4080:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4035:20:20"},"nodeType":"YulFunctionCall","src":"4035:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4025:6:20"}]}]},{"nodeType":"YulBlock","src":"4108:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4123:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4137:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4127:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4153:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4184:3:20"},"nodeType":"YulFunctionCall","src":"4184:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4208:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4163:20:20"},"nodeType":"YulFunctionCall","src":"4163:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4153:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3871:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3882:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3894:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3902:6:20","type":""}],"src":"3826:407:20"},{"body":{"nodeType":"YulBlock","src":"4304:195:20","statements":[{"body":{"nodeType":"YulBlock","src":"4350:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4362:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:20"},"nodeType":"YulFunctionCall","src":"4352:12:20"},"nodeType":"YulExpressionStatement","src":"4352:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:20"},"nodeType":"YulFunctionCall","src":"4321:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:20"},"nodeType":"YulFunctionCall","src":"4317:32:20"},"nodeType":"YulIf","src":"4314:2:20"},{"nodeType":"YulBlock","src":"4376:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4405:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4420:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4465:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:20"},"nodeType":"YulFunctionCall","src":"4450:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4474:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4430:19:20"},"nodeType":"YulFunctionCall","src":"4430:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4420:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4274:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4285:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4297:6:20","type":""}],"src":"4239:260:20"},{"body":{"nodeType":"YulBlock","src":"4581:206:20","statements":[{"body":{"nodeType":"YulBlock","src":"4627:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:20"},"nodeType":"YulFunctionCall","src":"4629:12:20"},"nodeType":"YulExpressionStatement","src":"4629:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4602:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4598:3:20"},"nodeType":"YulFunctionCall","src":"4598:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4594:3:20"},"nodeType":"YulFunctionCall","src":"4594:32:20"},"nodeType":"YulIf","src":"4591:2:20"},{"nodeType":"YulBlock","src":"4653:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4668:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4682:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4672:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4697:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4742:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4753:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:20"},"nodeType":"YulFunctionCall","src":"4738:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4762:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"4707:30:20"},"nodeType":"YulFunctionCall","src":"4707:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4697:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4551:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4562:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4574:6:20","type":""}],"src":"4505:282:20"},{"body":{"nodeType":"YulBlock","src":"4859:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"4905:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4914:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4917:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4907:6:20"},"nodeType":"YulFunctionCall","src":"4907:12:20"},"nodeType":"YulExpressionStatement","src":"4907:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4880:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4876:3:20"},"nodeType":"YulFunctionCall","src":"4876:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4872:3:20"},"nodeType":"YulFunctionCall","src":"4872:32:20"},"nodeType":"YulIf","src":"4869:2:20"},{"nodeType":"YulBlock","src":"4931:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4946:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4960:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4950:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4975:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5021:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:20"},"nodeType":"YulFunctionCall","src":"5006:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5030:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4985:20:20"},"nodeType":"YulFunctionCall","src":"4985:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4975:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4829:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4840:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4852:6:20","type":""}],"src":"4793:262:20"},{"body":{"nodeType":"YulBlock","src":"5126:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5143:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5166:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5148:17:20"},"nodeType":"YulFunctionCall","src":"5148:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5136:6:20"},"nodeType":"YulFunctionCall","src":"5136:37:20"},"nodeType":"YulExpressionStatement","src":"5136:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5114:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5121:3:20","type":""}],"src":"5061:118:20"},{"body":{"nodeType":"YulBlock","src":"5244:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5261:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5266:14:20"},"nodeType":"YulFunctionCall","src":"5266:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:20"},"nodeType":"YulFunctionCall","src":"5254:34:20"},"nodeType":"YulExpressionStatement","src":"5254:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5232:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5239:3:20","type":""}],"src":"5185:109:20"},{"body":{"nodeType":"YulBlock","src":"5390:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5400:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5446:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5414:31:20"},"nodeType":"YulFunctionCall","src":"5414:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5404:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5461:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5526:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5531:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5468:57:20"},"nodeType":"YulFunctionCall","src":"5468:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5461:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5580:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:20"},"nodeType":"YulFunctionCall","src":"5569:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5587:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5592:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5547:21:20"},"nodeType":"YulFunctionCall","src":"5547:52:20"},"nodeType":"YulExpressionStatement","src":"5547:52:20"},{"nodeType":"YulAssignment","src":"5608:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5619:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5646:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5624:21:20"},"nodeType":"YulFunctionCall","src":"5624:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:20"},"nodeType":"YulFunctionCall","src":"5615:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5608:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5371:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5378:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5386:3:20","type":""}],"src":"5300:360:20"},{"body":{"nodeType":"YulBlock","src":"5758:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5768:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5815:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5782:32:20"},"nodeType":"YulFunctionCall","src":"5782:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5772:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5830:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5896:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5901:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5837:58:20"},"nodeType":"YulFunctionCall","src":"5837:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5830:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5943:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5939:3:20"},"nodeType":"YulFunctionCall","src":"5939:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5957:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5962:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5917:21:20"},"nodeType":"YulFunctionCall","src":"5917:52:20"},"nodeType":"YulExpressionStatement","src":"5917:52:20"},{"nodeType":"YulAssignment","src":"5978:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5989:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6016:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5994:21:20"},"nodeType":"YulFunctionCall","src":"5994:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:20"},"nodeType":"YulFunctionCall","src":"5985:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5978:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5739:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5746:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5754:3:20","type":""}],"src":"5666:364:20"},{"body":{"nodeType":"YulBlock","src":"6146:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6156:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6203:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6170:32:20"},"nodeType":"YulFunctionCall","src":"6170:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6160:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6218:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6307:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6225:76:20"},"nodeType":"YulFunctionCall","src":"6225:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6349:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6356:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:20"},"nodeType":"YulFunctionCall","src":"6345:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"6363:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6368:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6323:21:20"},"nodeType":"YulFunctionCall","src":"6323:52:20"},"nodeType":"YulExpressionStatement","src":"6323:52:20"},{"nodeType":"YulAssignment","src":"6384:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6395:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6400:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:20"},"nodeType":"YulFunctionCall","src":"6391:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6384:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6127:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6134:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6142:3:20","type":""}],"src":"6036:377:20"},{"body":{"nodeType":"YulBlock","src":"6565:220:20","statements":[{"nodeType":"YulAssignment","src":"6575:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6641:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6582:58:20"},"nodeType":"YulFunctionCall","src":"6582:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6575:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6747:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"6658:88:20"},"nodeType":"YulFunctionCall","src":"6658:93:20"},"nodeType":"YulExpressionStatement","src":"6658:93:20"},{"nodeType":"YulAssignment","src":"6760:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6771:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:20"},"nodeType":"YulFunctionCall","src":"6767:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6760:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6553:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6561:3:20","type":""}],"src":"6419:366:20"},{"body":{"nodeType":"YulBlock","src":"6937:220:20","statements":[{"nodeType":"YulAssignment","src":"6947:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7013:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7018:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6954:58:20"},"nodeType":"YulFunctionCall","src":"6954:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6947:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7119:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7030:88:20"},"nodeType":"YulFunctionCall","src":"7030:93:20"},"nodeType":"YulExpressionStatement","src":"7030:93:20"},{"nodeType":"YulAssignment","src":"7132:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7143:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:20"},"nodeType":"YulFunctionCall","src":"7139:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7132:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6925:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6933:3:20","type":""}],"src":"6791:366:20"},{"body":{"nodeType":"YulBlock","src":"7309:220:20","statements":[{"nodeType":"YulAssignment","src":"7319:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7385:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7326:58:20"},"nodeType":"YulFunctionCall","src":"7326:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7319:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"7402:88:20"},"nodeType":"YulFunctionCall","src":"7402:93:20"},"nodeType":"YulExpressionStatement","src":"7402:93:20"},{"nodeType":"YulAssignment","src":"7504:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7515:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7520:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7511:3:20"},"nodeType":"YulFunctionCall","src":"7511:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7504:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7297:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:20","type":""}],"src":"7163:366:20"},{"body":{"nodeType":"YulBlock","src":"7681:220:20","statements":[{"nodeType":"YulAssignment","src":"7691:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7757:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7762:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7698:58:20"},"nodeType":"YulFunctionCall","src":"7698:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7691:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7863:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"7774:88:20"},"nodeType":"YulFunctionCall","src":"7774:93:20"},"nodeType":"YulExpressionStatement","src":"7774:93:20"},{"nodeType":"YulAssignment","src":"7876:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:20"},"nodeType":"YulFunctionCall","src":"7883:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7876:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7669:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7677:3:20","type":""}],"src":"7535:366:20"},{"body":{"nodeType":"YulBlock","src":"8053:220:20","statements":[{"nodeType":"YulAssignment","src":"8063:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8129:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8070:58:20"},"nodeType":"YulFunctionCall","src":"8070:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8063:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8235:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"8146:88:20"},"nodeType":"YulFunctionCall","src":"8146:93:20"},"nodeType":"YulExpressionStatement","src":"8146:93:20"},{"nodeType":"YulAssignment","src":"8248:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8259:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8264:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:20"},"nodeType":"YulFunctionCall","src":"8255:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8248:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8041:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8049:3:20","type":""}],"src":"7907:366:20"},{"body":{"nodeType":"YulBlock","src":"8425:220:20","statements":[{"nodeType":"YulAssignment","src":"8435:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8501:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8442:58:20"},"nodeType":"YulFunctionCall","src":"8442:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8435:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8607:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"8518:88:20"},"nodeType":"YulFunctionCall","src":"8518:93:20"},"nodeType":"YulExpressionStatement","src":"8518:93:20"},{"nodeType":"YulAssignment","src":"8620:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8631:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:20"},"nodeType":"YulFunctionCall","src":"8627:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8620:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8413:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8421:3:20","type":""}],"src":"8279:366:20"},{"body":{"nodeType":"YulBlock","src":"8797:220:20","statements":[{"nodeType":"YulAssignment","src":"8807:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8878:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8814:58:20"},"nodeType":"YulFunctionCall","src":"8814:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8979:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"8890:88:20"},"nodeType":"YulFunctionCall","src":"8890:93:20"},"nodeType":"YulExpressionStatement","src":"8890:93:20"},{"nodeType":"YulAssignment","src":"8992:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:20"},"nodeType":"YulFunctionCall","src":"8999:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8992:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8785:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8793:3:20","type":""}],"src":"8651:366:20"},{"body":{"nodeType":"YulBlock","src":"9169:220:20","statements":[{"nodeType":"YulAssignment","src":"9179:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9245:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9250:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9186:58:20"},"nodeType":"YulFunctionCall","src":"9186:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9179:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9351:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"9262:88:20"},"nodeType":"YulFunctionCall","src":"9262:93:20"},"nodeType":"YulExpressionStatement","src":"9262:93:20"},{"nodeType":"YulAssignment","src":"9364:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9380:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:20"},"nodeType":"YulFunctionCall","src":"9371:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9364:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9157:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9165:3:20","type":""}],"src":"9023:366:20"},{"body":{"nodeType":"YulBlock","src":"9541:220:20","statements":[{"nodeType":"YulAssignment","src":"9551:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9617:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9622:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9558:58:20"},"nodeType":"YulFunctionCall","src":"9558:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9551:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9723:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"9634:88:20"},"nodeType":"YulFunctionCall","src":"9634:93:20"},"nodeType":"YulExpressionStatement","src":"9634:93:20"},{"nodeType":"YulAssignment","src":"9736:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:20"},"nodeType":"YulFunctionCall","src":"9743:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9736:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9529:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9537:3:20","type":""}],"src":"9395:366:20"},{"body":{"nodeType":"YulBlock","src":"9832:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9849:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9872:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9854:17:20"},"nodeType":"YulFunctionCall","src":"9854:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:20"},"nodeType":"YulFunctionCall","src":"9842:37:20"},"nodeType":"YulExpressionStatement","src":"9842:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9827:3:20","type":""}],"src":"9767:118:20"},{"body":{"nodeType":"YulBlock","src":"10075:251:20","statements":[{"nodeType":"YulAssignment","src":"10086:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10175:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10184:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10093:81:20"},"nodeType":"YulFunctionCall","src":"10093:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:20"}]},{"nodeType":"YulAssignment","src":"10198:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10287:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10296:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10205:81:20"},"nodeType":"YulFunctionCall","src":"10205:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10198:3:20"}]},{"nodeType":"YulAssignment","src":"10310:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"10317:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10310:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10046:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10052:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10071:3:20","type":""}],"src":"9891:435:20"},{"body":{"nodeType":"YulBlock","src":"10430:124:20","statements":[{"nodeType":"YulAssignment","src":"10440:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10452:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10463:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10448:3:20"},"nodeType":"YulFunctionCall","src":"10448:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10440:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10520:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10544:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10529:3:20"},"nodeType":"YulFunctionCall","src":"10529:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10476:43:20"},"nodeType":"YulFunctionCall","src":"10476:71:20"},"nodeType":"YulExpressionStatement","src":"10476:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10402:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10414:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10425:4:20","type":""}],"src":"10332:222:20"},{"body":{"nodeType":"YulBlock","src":"10760:440:20","statements":[{"nodeType":"YulAssignment","src":"10770:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10793:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:20"},"nodeType":"YulFunctionCall","src":"10778:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10770:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10864:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10875:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10860:3:20"},"nodeType":"YulFunctionCall","src":"10860:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10807:43:20"},"nodeType":"YulFunctionCall","src":"10807:71:20"},"nodeType":"YulExpressionStatement","src":"10807:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10932:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:20"},"nodeType":"YulFunctionCall","src":"10941:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10888:43:20"},"nodeType":"YulFunctionCall","src":"10888:72:20"},"nodeType":"YulExpressionStatement","src":"10888:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11014:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11027:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11038:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:20"},"nodeType":"YulFunctionCall","src":"11023:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10970:43:20"},"nodeType":"YulFunctionCall","src":"10970:72:20"},"nodeType":"YulExpressionStatement","src":"10970:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11063:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11074:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:20"},"nodeType":"YulFunctionCall","src":"11059:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11083:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11089:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11079:3:20"},"nodeType":"YulFunctionCall","src":"11079:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11052:6:20"},"nodeType":"YulFunctionCall","src":"11052:48:20"},"nodeType":"YulExpressionStatement","src":"11052:48:20"},{"nodeType":"YulAssignment","src":"11109:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11179:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"11188:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11117:61:20"},"nodeType":"YulFunctionCall","src":"11117:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11109:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10708:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10720:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10728:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10736:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10744:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10755:4:20","type":""}],"src":"10560:640:20"},{"body":{"nodeType":"YulBlock","src":"11298:118:20","statements":[{"nodeType":"YulAssignment","src":"11308:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11320:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11331:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:20"},"nodeType":"YulFunctionCall","src":"11316:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11308:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11382:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11395:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11406:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11391:3:20"},"nodeType":"YulFunctionCall","src":"11391:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11344:37:20"},"nodeType":"YulFunctionCall","src":"11344:65:20"},"nodeType":"YulExpressionStatement","src":"11344:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11270:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11282:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11293:4:20","type":""}],"src":"11206:210:20"},{"body":{"nodeType":"YulBlock","src":"11540:195:20","statements":[{"nodeType":"YulAssignment","src":"11550:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11562:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11573:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:20"},"nodeType":"YulFunctionCall","src":"11558:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11550:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11597:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11608:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11593:3:20"},"nodeType":"YulFunctionCall","src":"11593:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11616:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11622:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11612:3:20"},"nodeType":"YulFunctionCall","src":"11612:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11586:6:20"},"nodeType":"YulFunctionCall","src":"11586:47:20"},"nodeType":"YulExpressionStatement","src":"11586:47:20"},{"nodeType":"YulAssignment","src":"11642:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11714:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"11723:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11650:63:20"},"nodeType":"YulFunctionCall","src":"11650:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11642:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11524:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11535:4:20","type":""}],"src":"11422:313:20"},{"body":{"nodeType":"YulBlock","src":"11912:248:20","statements":[{"nodeType":"YulAssignment","src":"11922:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11945:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11930:3:20"},"nodeType":"YulFunctionCall","src":"11930:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11922:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11969:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11980:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11965:3:20"},"nodeType":"YulFunctionCall","src":"11965:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11994:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11984:3:20"},"nodeType":"YulFunctionCall","src":"11984:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11958:6:20"},"nodeType":"YulFunctionCall","src":"11958:47:20"},"nodeType":"YulExpressionStatement","src":"11958:47:20"},{"nodeType":"YulAssignment","src":"12014:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12148:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12022:124:20"},"nodeType":"YulFunctionCall","src":"12022:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12014:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11892:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11907:4:20","type":""}],"src":"11741:419:20"},{"body":{"nodeType":"YulBlock","src":"12337:248:20","statements":[{"nodeType":"YulAssignment","src":"12347:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12355:3:20"},"nodeType":"YulFunctionCall","src":"12355:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12347:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12394:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12405:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12390:3:20"},"nodeType":"YulFunctionCall","src":"12390:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12413:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12409:3:20"},"nodeType":"YulFunctionCall","src":"12409:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12383:6:20"},"nodeType":"YulFunctionCall","src":"12383:47:20"},"nodeType":"YulExpressionStatement","src":"12383:47:20"},{"nodeType":"YulAssignment","src":"12439:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12573:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12447:124:20"},"nodeType":"YulFunctionCall","src":"12447:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12439:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12317:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12332:4:20","type":""}],"src":"12166:419:20"},{"body":{"nodeType":"YulBlock","src":"12762:248:20","statements":[{"nodeType":"YulAssignment","src":"12772:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12784:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12780:3:20"},"nodeType":"YulFunctionCall","src":"12780:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12772:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12819:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12815:3:20"},"nodeType":"YulFunctionCall","src":"12815:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12838:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12844:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12834:3:20"},"nodeType":"YulFunctionCall","src":"12834:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12808:6:20"},"nodeType":"YulFunctionCall","src":"12808:47:20"},"nodeType":"YulExpressionStatement","src":"12808:47:20"},{"nodeType":"YulAssignment","src":"12864:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12872:124:20"},"nodeType":"YulFunctionCall","src":"12872:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12864:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12742:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12757:4:20","type":""}],"src":"12591:419:20"},{"body":{"nodeType":"YulBlock","src":"13187:248:20","statements":[{"nodeType":"YulAssignment","src":"13197:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13209:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13220:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13205:3:20"},"nodeType":"YulFunctionCall","src":"13205:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13197:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13244:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13255:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13240:3:20"},"nodeType":"YulFunctionCall","src":"13240:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13263:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13269:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13259:3:20"},"nodeType":"YulFunctionCall","src":"13259:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:20"},"nodeType":"YulFunctionCall","src":"13233:47:20"},"nodeType":"YulExpressionStatement","src":"13233:47:20"},{"nodeType":"YulAssignment","src":"13289:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13423:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13297:124:20"},"nodeType":"YulFunctionCall","src":"13297:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13289:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13167:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13182:4:20","type":""}],"src":"13016:419:20"},{"body":{"nodeType":"YulBlock","src":"13612:248:20","statements":[{"nodeType":"YulAssignment","src":"13622:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13634:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:20"},"nodeType":"YulFunctionCall","src":"13630:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13622:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13669:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13665:3:20"},"nodeType":"YulFunctionCall","src":"13665:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13694:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13684:3:20"},"nodeType":"YulFunctionCall","src":"13684:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13658:6:20"},"nodeType":"YulFunctionCall","src":"13658:47:20"},"nodeType":"YulExpressionStatement","src":"13658:47:20"},{"nodeType":"YulAssignment","src":"13714:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13722:124:20"},"nodeType":"YulFunctionCall","src":"13722:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13714:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13592:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13607:4:20","type":""}],"src":"13441:419:20"},{"body":{"nodeType":"YulBlock","src":"14037:248:20","statements":[{"nodeType":"YulAssignment","src":"14047:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14059:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14070:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:20"},"nodeType":"YulFunctionCall","src":"14055:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14047:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14094:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14105:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14090:3:20"},"nodeType":"YulFunctionCall","src":"14090:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14113:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14119:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14109:3:20"},"nodeType":"YulFunctionCall","src":"14109:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14083:6:20"},"nodeType":"YulFunctionCall","src":"14083:47:20"},"nodeType":"YulExpressionStatement","src":"14083:47:20"},{"nodeType":"YulAssignment","src":"14139:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14273:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14147:124:20"},"nodeType":"YulFunctionCall","src":"14147:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14139:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14017:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14032:4:20","type":""}],"src":"13866:419:20"},{"body":{"nodeType":"YulBlock","src":"14462:248:20","statements":[{"nodeType":"YulAssignment","src":"14472:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14484:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14495:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14480:3:20"},"nodeType":"YulFunctionCall","src":"14480:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14472:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14530:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14515:3:20"},"nodeType":"YulFunctionCall","src":"14515:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14538:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14544:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14534:3:20"},"nodeType":"YulFunctionCall","src":"14534:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14508:6:20"},"nodeType":"YulFunctionCall","src":"14508:47:20"},"nodeType":"YulExpressionStatement","src":"14508:47:20"},{"nodeType":"YulAssignment","src":"14564:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14698:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14572:124:20"},"nodeType":"YulFunctionCall","src":"14572:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14564:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14442:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14457:4:20","type":""}],"src":"14291:419:20"},{"body":{"nodeType":"YulBlock","src":"14887:248:20","statements":[{"nodeType":"YulAssignment","src":"14897:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14909:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14920:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14905:3:20"},"nodeType":"YulFunctionCall","src":"14905:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14897:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14955:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14940:3:20"},"nodeType":"YulFunctionCall","src":"14940:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14963:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14969:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14959:3:20"},"nodeType":"YulFunctionCall","src":"14959:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14933:6:20"},"nodeType":"YulFunctionCall","src":"14933:47:20"},"nodeType":"YulExpressionStatement","src":"14933:47:20"},{"nodeType":"YulAssignment","src":"14989:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15123:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14997:124:20"},"nodeType":"YulFunctionCall","src":"14997:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14867:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14882:4:20","type":""}],"src":"14716:419:20"},{"body":{"nodeType":"YulBlock","src":"15312:248:20","statements":[{"nodeType":"YulAssignment","src":"15322:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15334:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15345:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:20"},"nodeType":"YulFunctionCall","src":"15330:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15322:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15369:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15380:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15365:3:20"},"nodeType":"YulFunctionCall","src":"15365:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15388:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15394:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15384:3:20"},"nodeType":"YulFunctionCall","src":"15384:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15358:6:20"},"nodeType":"YulFunctionCall","src":"15358:47:20"},"nodeType":"YulExpressionStatement","src":"15358:47:20"},{"nodeType":"YulAssignment","src":"15414:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15422:124:20"},"nodeType":"YulFunctionCall","src":"15422:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15414:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15292:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15307:4:20","type":""}],"src":"15141:419:20"},{"body":{"nodeType":"YulBlock","src":"15664:124:20","statements":[{"nodeType":"YulAssignment","src":"15674:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15686:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15697:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:20"},"nodeType":"YulFunctionCall","src":"15682:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15674:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15754:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15767:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15778:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15763:3:20"},"nodeType":"YulFunctionCall","src":"15763:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15710:43:20"},"nodeType":"YulFunctionCall","src":"15710:71:20"},"nodeType":"YulExpressionStatement","src":"15710:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15636:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15648:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15659:4:20","type":""}],"src":"15566:222:20"},{"body":{"nodeType":"YulBlock","src":"15835:88:20","statements":[{"nodeType":"YulAssignment","src":"15845:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15855:18:20"},"nodeType":"YulFunctionCall","src":"15855:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15845:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15904:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"15912:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15884:19:20"},"nodeType":"YulFunctionCall","src":"15884:33:20"},"nodeType":"YulExpressionStatement","src":"15884:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15819:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15828:6:20","type":""}],"src":"15794:129:20"},{"body":{"nodeType":"YulBlock","src":"15969:35:20","statements":[{"nodeType":"YulAssignment","src":"15979:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15995:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15989:5:20"},"nodeType":"YulFunctionCall","src":"15989:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15979:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15962:6:20","type":""}],"src":"15929:75:20"},{"body":{"nodeType":"YulBlock","src":"16076:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"16181:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16183:16:20"},"nodeType":"YulFunctionCall","src":"16183:18:20"},"nodeType":"YulExpressionStatement","src":"16183:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16153:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16161:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16150:2:20"},"nodeType":"YulFunctionCall","src":"16150:30:20"},"nodeType":"YulIf","src":"16147:2:20"},{"nodeType":"YulAssignment","src":"16213:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16243:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16221:21:20"},"nodeType":"YulFunctionCall","src":"16221:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16213:4:20"}]},{"nodeType":"YulAssignment","src":"16287:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16299:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"16305:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16295:3:20"},"nodeType":"YulFunctionCall","src":"16295:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16287:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16060:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16071:4:20","type":""}],"src":"16010:307:20"},{"body":{"nodeType":"YulBlock","src":"16381:40:20","statements":[{"nodeType":"YulAssignment","src":"16392:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16408:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16402:5:20"},"nodeType":"YulFunctionCall","src":"16402:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16392:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16364:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16374:6:20","type":""}],"src":"16323:98:20"},{"body":{"nodeType":"YulBlock","src":"16486:40:20","statements":[{"nodeType":"YulAssignment","src":"16497:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16513:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16507:5:20"},"nodeType":"YulFunctionCall","src":"16507:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16497:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16469:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16479:6:20","type":""}],"src":"16427:99:20"},{"body":{"nodeType":"YulBlock","src":"16627:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16644:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16649:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:20"},"nodeType":"YulFunctionCall","src":"16637:19:20"},"nodeType":"YulExpressionStatement","src":"16637:19:20"},{"nodeType":"YulAssignment","src":"16665:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16684:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16689:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16680:3:20"},"nodeType":"YulFunctionCall","src":"16680:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16665:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16599:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16604:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16615:11:20","type":""}],"src":"16532:168:20"},{"body":{"nodeType":"YulBlock","src":"16802:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16819:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16824:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16812:6:20"},"nodeType":"YulFunctionCall","src":"16812:19:20"},"nodeType":"YulExpressionStatement","src":"16812:19:20"},{"nodeType":"YulAssignment","src":"16840:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16859:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16864:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16855:3:20"},"nodeType":"YulFunctionCall","src":"16855:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16840:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16774:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16779:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16790:11:20","type":""}],"src":"16706:169:20"},{"body":{"nodeType":"YulBlock","src":"16995:34:20","statements":[{"nodeType":"YulAssignment","src":"17005:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17020:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17005:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16967:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16972:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16983:11:20","type":""}],"src":"16881:148:20"},{"body":{"nodeType":"YulBlock","src":"17079:261:20","statements":[{"nodeType":"YulAssignment","src":"17089:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17112:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17094:17:20"},"nodeType":"YulFunctionCall","src":"17094:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17089:1:20"}]},{"nodeType":"YulAssignment","src":"17123:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17146:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17128:17:20"},"nodeType":"YulFunctionCall","src":"17128:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17123:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17286:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17288:16:20"},"nodeType":"YulFunctionCall","src":"17288:18:20"},"nodeType":"YulExpressionStatement","src":"17288:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17207:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17214:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17282:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17210:3:20"},"nodeType":"YulFunctionCall","src":"17210:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17204:2:20"},"nodeType":"YulFunctionCall","src":"17204:81:20"},"nodeType":"YulIf","src":"17201:2:20"},{"nodeType":"YulAssignment","src":"17318:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17329:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17332:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17325:3:20"},"nodeType":"YulFunctionCall","src":"17325:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17318:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17066:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17069:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17075:3:20","type":""}],"src":"17035:305:20"},{"body":{"nodeType":"YulBlock","src":"17388:143:20","statements":[{"nodeType":"YulAssignment","src":"17398:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17421:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17403:17:20"},"nodeType":"YulFunctionCall","src":"17403:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17398:1:20"}]},{"nodeType":"YulAssignment","src":"17432:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17455:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17437:17:20"},"nodeType":"YulFunctionCall","src":"17437:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17432:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17479:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"17481:16:20"},"nodeType":"YulFunctionCall","src":"17481:18:20"},"nodeType":"YulExpressionStatement","src":"17481:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17476:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17469:6:20"},"nodeType":"YulFunctionCall","src":"17469:9:20"},"nodeType":"YulIf","src":"17466:2:20"},{"nodeType":"YulAssignment","src":"17511:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17520:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17523:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17516:3:20"},"nodeType":"YulFunctionCall","src":"17516:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"17511:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17377:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17380:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17386:1:20","type":""}],"src":"17346:185:20"},{"body":{"nodeType":"YulBlock","src":"17582:146:20","statements":[{"nodeType":"YulAssignment","src":"17592:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17615:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17597:17:20"},"nodeType":"YulFunctionCall","src":"17597:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17592:1:20"}]},{"nodeType":"YulAssignment","src":"17626:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17649:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17631:17:20"},"nodeType":"YulFunctionCall","src":"17631:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17626:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17673:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17675:16:20"},"nodeType":"YulFunctionCall","src":"17675:18:20"},"nodeType":"YulExpressionStatement","src":"17675:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17667:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17670:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17664:2:20"},"nodeType":"YulFunctionCall","src":"17664:8:20"},"nodeType":"YulIf","src":"17661:2:20"},{"nodeType":"YulAssignment","src":"17705:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17717:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17720:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17713:3:20"},"nodeType":"YulFunctionCall","src":"17713:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17705:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17568:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17571:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17577:4:20","type":""}],"src":"17537:191:20"},{"body":{"nodeType":"YulBlock","src":"17779:51:20","statements":[{"nodeType":"YulAssignment","src":"17789:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17818:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17800:17:20"},"nodeType":"YulFunctionCall","src":"17800:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17789:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17761:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17771:7:20","type":""}],"src":"17734:96:20"},{"body":{"nodeType":"YulBlock","src":"17878:48:20","statements":[{"nodeType":"YulAssignment","src":"17888:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17913:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17906:6:20"},"nodeType":"YulFunctionCall","src":"17906:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17899:6:20"},"nodeType":"YulFunctionCall","src":"17899:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17888:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17860:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17870:7:20","type":""}],"src":"17836:90:20"},{"body":{"nodeType":"YulBlock","src":"17976:105:20","statements":[{"nodeType":"YulAssignment","src":"17986:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18001:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18008:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17997:3:20"},"nodeType":"YulFunctionCall","src":"17997:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17986:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17958:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17968:7:20","type":""}],"src":"17932:149:20"},{"body":{"nodeType":"YulBlock","src":"18132:81:20","statements":[{"nodeType":"YulAssignment","src":"18142:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18157:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18164:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18153:3:20"},"nodeType":"YulFunctionCall","src":"18153:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18142:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18114:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18124:7:20","type":""}],"src":"18087:126:20"},{"body":{"nodeType":"YulBlock","src":"18264:32:20","statements":[{"nodeType":"YulAssignment","src":"18274:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"18285:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18274:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18246:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18256:7:20","type":""}],"src":"18219:77:20"},{"body":{"nodeType":"YulBlock","src":"18353:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18376:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"18381:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18386:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18363:12:20"},"nodeType":"YulFunctionCall","src":"18363:30:20"},"nodeType":"YulExpressionStatement","src":"18363:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18434:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18439:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:20"},"nodeType":"YulFunctionCall","src":"18430:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"18448:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:20"},"nodeType":"YulFunctionCall","src":"18423:27:20"},"nodeType":"YulExpressionStatement","src":"18423:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18335:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18340:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"18345:6:20","type":""}],"src":"18302:154:20"},{"body":{"nodeType":"YulBlock","src":"18511:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18521:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18530:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18525:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18590:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18615:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18620:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18611:3:20"},"nodeType":"YulFunctionCall","src":"18611:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18634:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18639:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18630:3:20"},"nodeType":"YulFunctionCall","src":"18630:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18624:5:20"},"nodeType":"YulFunctionCall","src":"18624:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18604:6:20"},"nodeType":"YulFunctionCall","src":"18604:39:20"},"nodeType":"YulExpressionStatement","src":"18604:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18551:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18554:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18548:2:20"},"nodeType":"YulFunctionCall","src":"18548:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18562:19:20","statements":[{"nodeType":"YulAssignment","src":"18564:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18573:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"18576:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18569:3:20"},"nodeType":"YulFunctionCall","src":"18569:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18564:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"18544:3:20","statements":[]},"src":"18540:113:20"},{"body":{"nodeType":"YulBlock","src":"18687:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18737:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18742:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:20"},"nodeType":"YulFunctionCall","src":"18733:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:20"},"nodeType":"YulFunctionCall","src":"18726:27:20"},"nodeType":"YulExpressionStatement","src":"18726:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18668:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18671:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18665:2:20"},"nodeType":"YulFunctionCall","src":"18665:13:20"},"nodeType":"YulIf","src":"18662:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18493:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18498:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"18503:6:20","type":""}],"src":"18462:307:20"},{"body":{"nodeType":"YulBlock","src":"18826:269:20","statements":[{"nodeType":"YulAssignment","src":"18836:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18850:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18856:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18846:3:20"},"nodeType":"YulFunctionCall","src":"18846:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18836:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"18867:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18897:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18903:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18893:3:20"},"nodeType":"YulFunctionCall","src":"18893:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18871:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18944:51:20","statements":[{"nodeType":"YulAssignment","src":"18958:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18972:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18980:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18968:3:20"},"nodeType":"YulFunctionCall","src":"18968:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18958:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18924:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18917:6:20"},"nodeType":"YulFunctionCall","src":"18917:26:20"},"nodeType":"YulIf","src":"18914:2:20"},{"body":{"nodeType":"YulBlock","src":"19047:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19061:16:20"},"nodeType":"YulFunctionCall","src":"19061:18:20"},"nodeType":"YulExpressionStatement","src":"19061:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19011:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19034:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19042:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19031:2:20"},"nodeType":"YulFunctionCall","src":"19031:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19008:2:20"},"nodeType":"YulFunctionCall","src":"19008:38:20"},"nodeType":"YulIf","src":"19005:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18810:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18819:6:20","type":""}],"src":"18775:320:20"},{"body":{"nodeType":"YulBlock","src":"19144:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19154:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19176:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19206:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19184:21:20"},"nodeType":"YulFunctionCall","src":"19184:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19172:3:20"},"nodeType":"YulFunctionCall","src":"19172:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19158:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"19323:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19325:16:20"},"nodeType":"YulFunctionCall","src":"19325:18:20"},"nodeType":"YulExpressionStatement","src":"19325:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19266:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"19278:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19263:2:20"},"nodeType":"YulFunctionCall","src":"19263:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19302:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19314:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19299:2:20"},"nodeType":"YulFunctionCall","src":"19299:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19260:2:20"},"nodeType":"YulFunctionCall","src":"19260:62:20"},"nodeType":"YulIf","src":"19257:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19361:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19365:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19354:6:20"},"nodeType":"YulFunctionCall","src":"19354:22:20"},"nodeType":"YulExpressionStatement","src":"19354:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19130:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"19138:4:20","type":""}],"src":"19101:281:20"},{"body":{"nodeType":"YulBlock","src":"19431:190:20","statements":[{"nodeType":"YulAssignment","src":"19441:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19468:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19450:17:20"},"nodeType":"YulFunctionCall","src":"19450:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19441:5:20"}]},{"body":{"nodeType":"YulBlock","src":"19564:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19566:16:20"},"nodeType":"YulFunctionCall","src":"19566:18:20"},"nodeType":"YulExpressionStatement","src":"19566:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19489:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19496:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19486:2:20"},"nodeType":"YulFunctionCall","src":"19486:77:20"},"nodeType":"YulIf","src":"19483:2:20"},{"nodeType":"YulAssignment","src":"19595:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19606:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19613:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19602:3:20"},"nodeType":"YulFunctionCall","src":"19602:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19595:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19417:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19427:3:20","type":""}],"src":"19388:233:20"},{"body":{"nodeType":"YulBlock","src":"19661:142:20","statements":[{"nodeType":"YulAssignment","src":"19671:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19694:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19676:17:20"},"nodeType":"YulFunctionCall","src":"19676:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19671:1:20"}]},{"nodeType":"YulAssignment","src":"19705:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19728:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19710:17:20"},"nodeType":"YulFunctionCall","src":"19710:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19705:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19752:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"19754:16:20"},"nodeType":"YulFunctionCall","src":"19754:18:20"},"nodeType":"YulExpressionStatement","src":"19754:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19749:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19742:6:20"},"nodeType":"YulFunctionCall","src":"19742:9:20"},"nodeType":"YulIf","src":"19739:2:20"},{"nodeType":"YulAssignment","src":"19783:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19792:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19795:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"19788:3:20"},"nodeType":"YulFunctionCall","src":"19788:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"19783:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19650:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19653:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"19659:1:20","type":""}],"src":"19627:176:20"},{"body":{"nodeType":"YulBlock","src":"19837:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19854:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19857:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19847:6:20"},"nodeType":"YulFunctionCall","src":"19847:88:20"},"nodeType":"YulExpressionStatement","src":"19847:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19951:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19954:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:20"},"nodeType":"YulFunctionCall","src":"19944:15:20"},"nodeType":"YulExpressionStatement","src":"19944:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19975:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19978:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19968:6:20"},"nodeType":"YulFunctionCall","src":"19968:15:20"},"nodeType":"YulExpressionStatement","src":"19968:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19809:180:20"},{"body":{"nodeType":"YulBlock","src":"20023:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20040:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20043:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20033:6:20"},"nodeType":"YulFunctionCall","src":"20033:88:20"},"nodeType":"YulExpressionStatement","src":"20033:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20137:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20140:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20130:6:20"},"nodeType":"YulFunctionCall","src":"20130:15:20"},"nodeType":"YulExpressionStatement","src":"20130:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20161:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20164:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20154:6:20"},"nodeType":"YulFunctionCall","src":"20154:15:20"},"nodeType":"YulExpressionStatement","src":"20154:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19995:180:20"},{"body":{"nodeType":"YulBlock","src":"20209:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20226:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20229:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20219:6:20"},"nodeType":"YulFunctionCall","src":"20219:88:20"},"nodeType":"YulExpressionStatement","src":"20219:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20323:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20326:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20316:6:20"},"nodeType":"YulFunctionCall","src":"20316:15:20"},"nodeType":"YulExpressionStatement","src":"20316:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20347:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20350:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20340:6:20"},"nodeType":"YulFunctionCall","src":"20340:15:20"},"nodeType":"YulExpressionStatement","src":"20340:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20181:180:20"},{"body":{"nodeType":"YulBlock","src":"20395:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20412:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20415:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20405:6:20"},"nodeType":"YulFunctionCall","src":"20405:88:20"},"nodeType":"YulExpressionStatement","src":"20405:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20509:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20512:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20502:6:20"},"nodeType":"YulFunctionCall","src":"20502:15:20"},"nodeType":"YulExpressionStatement","src":"20502:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20533:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20536:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20526:6:20"},"nodeType":"YulFunctionCall","src":"20526:15:20"},"nodeType":"YulExpressionStatement","src":"20526:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20367:180:20"},{"body":{"nodeType":"YulBlock","src":"20601:54:20","statements":[{"nodeType":"YulAssignment","src":"20611:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20629:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"20636:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20625:3:20"},"nodeType":"YulFunctionCall","src":"20625:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20645:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20641:3:20"},"nodeType":"YulFunctionCall","src":"20641:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20621:3:20"},"nodeType":"YulFunctionCall","src":"20621:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20611:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20584:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20594:6:20","type":""}],"src":"20553:102:20"},{"body":{"nodeType":"YulBlock","src":"20767:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20789:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20797:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20785:3:20"},"nodeType":"YulFunctionCall","src":"20785:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"20801:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20778:6:20"},"nodeType":"YulFunctionCall","src":"20778:58:20"},"nodeType":"YulExpressionStatement","src":"20778:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20857:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20865:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20853:3:20"},"nodeType":"YulFunctionCall","src":"20853:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"20870:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20846:6:20"},"nodeType":"YulFunctionCall","src":"20846:45:20"},"nodeType":"YulExpressionStatement","src":"20846:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20759:6:20","type":""}],"src":"20661:237:20"},{"body":{"nodeType":"YulBlock","src":"21010:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21032:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21040:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21028:3:20"},"nodeType":"YulFunctionCall","src":"21028:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21044:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21021:6:20"},"nodeType":"YulFunctionCall","src":"21021:58:20"},"nodeType":"YulExpressionStatement","src":"21021:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21100:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21108:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21096:3:20"},"nodeType":"YulFunctionCall","src":"21096:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21113:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21089:6:20"},"nodeType":"YulFunctionCall","src":"21089:32:20"},"nodeType":"YulExpressionStatement","src":"21089:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21002:6:20","type":""}],"src":"20904:224:20"},{"body":{"nodeType":"YulBlock","src":"21240:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21262:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21270:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21258:3:20"},"nodeType":"YulFunctionCall","src":"21258:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21274:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21251:6:20"},"nodeType":"YulFunctionCall","src":"21251:58:20"},"nodeType":"YulExpressionStatement","src":"21251:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21330:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21338:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21326:3:20"},"nodeType":"YulFunctionCall","src":"21326:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21343:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21319:6:20"},"nodeType":"YulFunctionCall","src":"21319:31:20"},"nodeType":"YulExpressionStatement","src":"21319:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21232:6:20","type":""}],"src":"21134:223:20"},{"body":{"nodeType":"YulBlock","src":"21469:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21491:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21499:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21487:3:20"},"nodeType":"YulFunctionCall","src":"21487:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21503:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21480:6:20"},"nodeType":"YulFunctionCall","src":"21480:51:20"},"nodeType":"YulExpressionStatement","src":"21480:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21461:6:20","type":""}],"src":"21363:175:20"},{"body":{"nodeType":"YulBlock","src":"21650:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21672:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21668:3:20"},"nodeType":"YulFunctionCall","src":"21668:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21684:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21661:6:20"},"nodeType":"YulFunctionCall","src":"21661:58:20"},"nodeType":"YulExpressionStatement","src":"21661:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21740:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21748:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21736:3:20"},"nodeType":"YulFunctionCall","src":"21736:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21753:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21729:6:20"},"nodeType":"YulFunctionCall","src":"21729:36:20"},"nodeType":"YulExpressionStatement","src":"21729:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21642:6:20","type":""}],"src":"21544:228:20"},{"body":{"nodeType":"YulBlock","src":"21884:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21906:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21914:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21902:3:20"},"nodeType":"YulFunctionCall","src":"21902:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21918:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21895:6:20"},"nodeType":"YulFunctionCall","src":"21895:58:20"},"nodeType":"YulExpressionStatement","src":"21895:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21974:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21982:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21970:3:20"},"nodeType":"YulFunctionCall","src":"21970:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21987:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21963:6:20"},"nodeType":"YulFunctionCall","src":"21963:57:20"},"nodeType":"YulExpressionStatement","src":"21963:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21876:6:20","type":""}],"src":"21778:249:20"},{"body":{"nodeType":"YulBlock","src":"22139:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22161:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22169:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22157:3:20"},"nodeType":"YulFunctionCall","src":"22157:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22173:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22150:6:20"},"nodeType":"YulFunctionCall","src":"22150:50:20"},"nodeType":"YulExpressionStatement","src":"22150:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22131:6:20","type":""}],"src":"22033:174:20"},{"body":{"nodeType":"YulBlock","src":"22319:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22341:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22349:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22337:3:20"},"nodeType":"YulFunctionCall","src":"22337:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22353:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22330:6:20"},"nodeType":"YulFunctionCall","src":"22330:58:20"},"nodeType":"YulExpressionStatement","src":"22330:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22409:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22417:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22405:3:20"},"nodeType":"YulFunctionCall","src":"22405:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"22422:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22398:6:20"},"nodeType":"YulFunctionCall","src":"22398:28:20"},"nodeType":"YulExpressionStatement","src":"22398:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22311:6:20","type":""}],"src":"22213:220:20"},{"body":{"nodeType":"YulBlock","src":"22545:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22567:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22575:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:20"},"nodeType":"YulFunctionCall","src":"22563:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22579:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22556:6:20"},"nodeType":"YulFunctionCall","src":"22556:58:20"},"nodeType":"YulExpressionStatement","src":"22556:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22635:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22643:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22631:3:20"},"nodeType":"YulFunctionCall","src":"22631:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"22648:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22624:6:20"},"nodeType":"YulFunctionCall","src":"22624:41:20"},"nodeType":"YulExpressionStatement","src":"22624:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22537:6:20","type":""}],"src":"22439:233:20"},{"body":{"nodeType":"YulBlock","src":"22721:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"22778:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22787:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22790:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22780:6:20"},"nodeType":"YulFunctionCall","src":"22780:12:20"},"nodeType":"YulExpressionStatement","src":"22780:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22744:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22769:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22751:17:20"},"nodeType":"YulFunctionCall","src":"22751:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22741:2:20"},"nodeType":"YulFunctionCall","src":"22741:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22734:6:20"},"nodeType":"YulFunctionCall","src":"22734:43:20"},"nodeType":"YulIf","src":"22731:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22714:5:20","type":""}],"src":"22678:122:20"},{"body":{"nodeType":"YulBlock","src":"22846:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"22900:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22909:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22912:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22902:6:20"},"nodeType":"YulFunctionCall","src":"22902:12:20"},"nodeType":"YulExpressionStatement","src":"22902:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22869:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22891:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22876:14:20"},"nodeType":"YulFunctionCall","src":"22876:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22866:2:20"},"nodeType":"YulFunctionCall","src":"22866:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22859:6:20"},"nodeType":"YulFunctionCall","src":"22859:40:20"},"nodeType":"YulIf","src":"22856:2:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22839:5:20","type":""}],"src":"22806:116:20"},{"body":{"nodeType":"YulBlock","src":"22970:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"23026:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23035:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23038:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23028:6:20"},"nodeType":"YulFunctionCall","src":"23028:12:20"},"nodeType":"YulExpressionStatement","src":"23028:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22993:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23017:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23000:16:20"},"nodeType":"YulFunctionCall","src":"23000:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22990:2:20"},"nodeType":"YulFunctionCall","src":"22990:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22983:6:20"},"nodeType":"YulFunctionCall","src":"22983:42:20"},"nodeType":"YulIf","src":"22980:2:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22963:5:20","type":""}],"src":"22928:120:20"},{"body":{"nodeType":"YulBlock","src":"23097:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"23154:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23163:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23166:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23156:6:20"},"nodeType":"YulFunctionCall","src":"23156:12:20"},"nodeType":"YulExpressionStatement","src":"23156:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23120:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23145:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23127:17:20"},"nodeType":"YulFunctionCall","src":"23127:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23117:2:20"},"nodeType":"YulFunctionCall","src":"23117:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23110:6:20"},"nodeType":"YulFunctionCall","src":"23110:43:20"},"nodeType":"YulIf","src":"23107:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23090:5:20","type":""}],"src":"23054:122:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611625565b6102bc565b6040516100fb9190611936565b60405180910390f35b61010c61039e565b6040516101199190611951565b60405180910390f35b61013c60048036038101906101379190611677565b610430565b60405161014991906118cf565b60405180910390f35b61016c600480360381019061016791906115e9565b610476565b005b610188600480360381019061018391906114e3565b61058e565b005b6101a4600480360381019061019f91906114e3565b6105ee565b005b6101c060048036038101906101bb9190611677565b61060e565b6040516101cd91906118cf565b60405180910390f35b6101f060048036038101906101eb919061147e565b6106c0565b6040516101fd9190611a93565b60405180910390f35b61020e610778565b60405161021b9190611951565b60405180910390f35b61023e600480360381019061023991906115ad565b61080a565b005b61025a60048036038101906102559190611532565b610820565b005b61027660048036038101906102719190611677565b610882565b6040516102839190611951565b60405180910390f35b6102a660048036038101906102a191906114a7565b6108ea565b6040516102b39190611936565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611cb8565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611a53565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a13565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a73565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611a33565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906119f3565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611cb8565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611a73565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d29291906118ab565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f18161117d565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611a33565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906119b3565b60405180910390fd5b610c7a8383836111e9565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611bce565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611b47565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111ee565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e56906119d3565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611936565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111f3565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611973565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611178565b600082905060005b6000821461104a57808061103390611d1b565b915050600a826110439190611b9d565b9150611020565b60008167ffffffffffffffff81111561108c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110be5781602001600182028036833780820191505090505b5090505b60008514611171576001826110d79190611bce565b9150600a856110e69190611d64565b60306110f29190611b47565b60f81b81838151811061112e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561116a9190611b9d565b94506110c2565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006112148473ffffffffffffffffffffffffffffffffffffffff1661138a565b1561137d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261123d610a33565b8786866040518563ffffffff1660e01b815260040161125f94939291906118ea565b602060405180830381600087803b15801561127957600080fd5b505af19250505080156112aa57506040513d601f19601f820116820180604052508101906112a7919061164e565b60015b61132d573d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50600081511415611325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131c90611973565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611382565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006113c06113bb84611ad3565b611aae565b9050828152602081018484840111156113d857600080fd5b6113e3848285611c76565b509392505050565b6000813590506113fa816120dd565b92915050565b60008135905061140f816120f4565b92915050565b6000813590506114248161210b565b92915050565b6000815190506114398161210b565b92915050565b600082601f83011261145057600080fd5b81356114608482602086016113ad565b91505092915050565b60008135905061147881612122565b92915050565b60006020828403121561149057600080fd5b600061149e848285016113eb565b91505092915050565b600080604083850312156114ba57600080fd5b60006114c8858286016113eb565b92505060206114d9858286016113eb565b9150509250929050565b6000806000606084860312156114f857600080fd5b6000611506868287016113eb565b9350506020611517868287016113eb565b925050604061152886828701611469565b9150509250925092565b6000806000806080858703121561154857600080fd5b6000611556878288016113eb565b9450506020611567878288016113eb565b935050604061157887828801611469565b925050606085013567ffffffffffffffff81111561159557600080fd5b6115a18782880161143f565b91505092959194509250565b600080604083850312156115c057600080fd5b60006115ce858286016113eb565b92505060206115df85828601611400565b9150509250929050565b600080604083850312156115fc57600080fd5b600061160a858286016113eb565b925050602061161b85828601611469565b9150509250929050565b60006020828403121561163757600080fd5b600061164584828501611415565b91505092915050565b60006020828403121561166057600080fd5b600061166e8482850161142a565b91505092915050565b60006020828403121561168957600080fd5b600061169784828501611469565b91505092915050565b6116a981611c02565b82525050565b6116b881611c14565b82525050565b60006116c982611b04565b6116d38185611b1a565b93506116e3818560208601611c85565b6116ec81611e51565b840191505092915050565b600061170282611b0f565b61170c8185611b2b565b935061171c818560208601611c85565b61172581611e51565b840191505092915050565b600061173b82611b0f565b6117458185611b3c565b9350611755818560208601611c85565b80840191505092915050565b600061176e603283611b2b565b915061177982611e62565b604082019050919050565b6000611791602583611b2b565b915061179c82611eb1565b604082019050919050565b60006117b4602483611b2b565b91506117bf82611f00565b604082019050919050565b60006117d7601983611b2b565b91506117e282611f4f565b602082019050919050565b60006117fa602983611b2b565b915061180582611f78565b604082019050919050565b600061181d603e83611b2b565b915061182882611fc7565b604082019050919050565b6000611840601883611b2b565b915061184b82612016565b602082019050919050565b6000611863602183611b2b565b915061186e8261203f565b604082019050919050565b6000611886602e83611b2b565b91506118918261208e565b604082019050919050565b6118a581611c6c565b82525050565b60006118b78285611730565b91506118c38284611730565b91508190509392505050565b60006020820190506118e460008301846116a0565b92915050565b60006080820190506118ff60008301876116a0565b61190c60208301866116a0565b611919604083018561189c565b818103606083015261192b81846116be565b905095945050505050565b600060208201905061194b60008301846116af565b92915050565b6000602082019050818103600083015261196b81846116f7565b905092915050565b6000602082019050818103600083015261198c81611761565b9050919050565b600060208201905081810360008301526119ac81611784565b9050919050565b600060208201905081810360008301526119cc816117a7565b9050919050565b600060208201905081810360008301526119ec816117ca565b9050919050565b60006020820190508181036000830152611a0c816117ed565b9050919050565b60006020820190508181036000830152611a2c81611810565b9050919050565b60006020820190508181036000830152611a4c81611833565b9050919050565b60006020820190508181036000830152611a6c81611856565b9050919050565b60006020820190508181036000830152611a8c81611879565b9050919050565b6000602082019050611aa8600083018461189c565b92915050565b6000611ab8611ac9565b9050611ac48282611cea565b919050565b6000604051905090565b600067ffffffffffffffff821115611aee57611aed611e22565b5b611af782611e51565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b5282611c6c565b9150611b5d83611c6c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b9257611b91611d95565b5b828201905092915050565b6000611ba882611c6c565b9150611bb383611c6c565b925082611bc357611bc2611dc4565b5b828204905092915050565b6000611bd982611c6c565b9150611be483611c6c565b925082821015611bf757611bf6611d95565b5b828203905092915050565b6000611c0d82611c4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ca3578082015181840152602081019050611c88565b83811115611cb2576000848401525b50505050565b60006002820490506001821680611cd057607f821691505b60208210811415611ce457611ce3611df3565b5b50919050565b611cf382611e51565b810181811067ffffffffffffffff82111715611d1257611d11611e22565b5b80604052505050565b6000611d2682611c6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d5957611d58611d95565b5b600182019050919050565b6000611d6f82611c6c565b9150611d7a83611c6c565b925082611d8a57611d89611dc4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6120e681611c02565b81146120f157600080fd5b50565b6120fd81611c14565b811461210857600080fd5b50565b61211481611c20565b811461211f57600080fd5b50565b61212b81611c6c565b811461213657600080fd5b5056fea2646970667358221220db9d3f8c937313de0fca2b6f27913452c61faf6c42edbc7896d362c37024134664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x117D JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1171 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x112E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP5 POP PUSH2 0x10C2 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x138A JUMP JUMPDEST ISZERO PUSH2 0x137D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x123D PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12AA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x132D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C0 PUSH2 0x13BB DUP5 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x20DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1478 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D9 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1517 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1528 DUP7 DUP3 DUP8 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1567 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1578 DUP8 DUP3 DUP9 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A1 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DF DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x161B DUP6 DUP3 DUP7 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1645 DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x142A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP5 DUP3 DUP6 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A9 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C9 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x16D3 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x16E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x1745 DUP2 DUP6 PUSH2 0x1B3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1755 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176E PUSH1 0x32 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1779 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1791 PUSH1 0x25 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x179C DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x24 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 PUSH1 0x19 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FA PUSH1 0x29 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D PUSH1 0x3E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1828 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 PUSH1 0x18 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH1 0x21 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1886 PUSH1 0x2E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196B DUP2 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AC DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19EC DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2C DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4C DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6C DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 PUSH2 0x1AC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC4 DUP3 DUP3 PUSH2 0x1CEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF7 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP3 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x1DF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7A DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D8A JUMPI PUSH2 0x1D89 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20E6 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2114 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x212B DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP14 EXTCODEHASH DUP13 SWAP4 PUSH20 0x13DE0FCA2B6F27913452C61FAF6C42EDBC7896D3 PUSH3 0xC37024 SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"628:13718:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3467:407;;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:15:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:6:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:12:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:343:20:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:133::-;544:5;582:6;569:20;560:29;;598:30;622:5;598:30;:::i;:::-;550:84;;;;:::o;640:137::-;685:5;723:6;710:20;701:29;;739:32;765:5;739:32;:::i;:::-;691:86;;;;:::o;783:141::-;839:5;870:6;864:13;855:22;;886:32;912:5;886:32;:::i;:::-;845:79;;;;:::o;943:271::-;998:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1065:1;1062;1055:12;1014:2;1105:6;1092:20;1130:78;1204:3;1196:6;1189:4;1181:6;1177:17;1130:78;:::i;:::-;1121:87;;1004:210;;;;;:::o;1220:139::-;1266:5;1304:6;1291:20;1282:29;;1320:33;1347:5;1320:33;:::i;:::-;1272:87;;;;:::o;1365:262::-;1424:6;1473:2;1461:9;1452:7;1448:23;1444:32;1441:2;;;1489:1;1486;1479:12;1441:2;1532:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;:::i;:::-;1547:63;;1503:117;1431:196;;;;:::o;1633:407::-;1701:6;1709;1758:2;1746:9;1737:7;1733:23;1729:32;1726:2;;;1774:1;1771;1764:12;1726:2;1817:1;1842:53;1887:7;1878:6;1867:9;1863:22;1842:53;:::i;:::-;1832:63;;1788:117;1944:2;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1915:118;1716:324;;;;;:::o;2046:552::-;2123:6;2131;2139;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2204:1;2201;2194:12;2156:2;2247:1;2272:53;2317:7;2308:6;2297:9;2293:22;2272:53;:::i;:::-;2262:63;;2218:117;2374:2;2400:53;2445:7;2436:6;2425:9;2421:22;2400:53;:::i;:::-;2390:63;;2345:118;2502:2;2528:53;2573:7;2564:6;2553:9;2549:22;2528:53;:::i;:::-;2518:63;;2473:118;2146:452;;;;;:::o;2604:809::-;2699:6;2707;2715;2723;2772:3;2760:9;2751:7;2747:23;2743:33;2740:2;;;2789:1;2786;2779:12;2740:2;2832:1;2857:53;2902:7;2893:6;2882:9;2878:22;2857:53;:::i;:::-;2847:63;;2803:117;2959:2;2985:53;3030:7;3021:6;3010:9;3006:22;2985:53;:::i;:::-;2975:63;;2930:118;3087:2;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3058:118;3243:2;3232:9;3228:18;3215:32;3274:18;3266:6;3263:30;3260:2;;;3306:1;3303;3296:12;3260:2;3334:62;3388:7;3379:6;3368:9;3364:22;3334:62;:::i;:::-;3324:72;;3186:220;2730:683;;;;;;;:::o;3419:401::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3600:1;3625:53;3670:7;3661:6;3650:9;3646:22;3625:53;:::i;:::-;3615:63;;3571:117;3727:2;3753:50;3795:7;3786:6;3775:9;3771:22;3753:50;:::i;:::-;3743:60;;3698:115;3499:321;;;;;:::o;3826:407::-;3894:6;3902;3951:2;3939:9;3930:7;3926:23;3922:32;3919:2;;;3967:1;3964;3957:12;3919:2;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3909:324;;;;;:::o;4239:260::-;4297:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4362:1;4359;4352:12;4314:2;4405:1;4430:52;4474:7;4465:6;4454:9;4450:22;4430:52;:::i;:::-;4420:62;;4376:116;4304:195;;;;:::o;4505:282::-;4574:6;4623:2;4611:9;4602:7;4598:23;4594:32;4591:2;;;4639:1;4636;4629:12;4591:2;4682:1;4707:63;4762:7;4753:6;4742:9;4738:22;4707:63;:::i;:::-;4697:73;;4653:127;4581:206;;;;:::o;4793:262::-;4852:6;4901:2;4889:9;4880:7;4876:23;4872:32;4869:2;;;4917:1;4914;4907:12;4869:2;4960:1;4985:53;5030:7;5021:6;5010:9;5006:22;4985:53;:::i;:::-;4975:63;;4931:117;4859:196;;;;:::o;5061:118::-;5148:24;5166:5;5148:24;:::i;:::-;5143:3;5136:37;5126:53;;:::o;5185:109::-;5266:21;5281:5;5266:21;:::i;:::-;5261:3;5254:34;5244:50;;:::o;5300:360::-;5386:3;5414:38;5446:5;5414:38;:::i;:::-;5468:70;5531:6;5526:3;5468:70;:::i;:::-;5461:77;;5547:52;5592:6;5587:3;5580:4;5573:5;5569:16;5547:52;:::i;:::-;5624:29;5646:6;5624:29;:::i;:::-;5619:3;5615:39;5608:46;;5390:270;;;;;:::o;5666:364::-;5754:3;5782:39;5815:5;5782:39;:::i;:::-;5837:71;5901:6;5896:3;5837:71;:::i;:::-;5830:78;;5917:52;5962:6;5957:3;5950:4;5943:5;5939:16;5917:52;:::i;:::-;5994:29;6016:6;5994:29;:::i;:::-;5989:3;5985:39;5978:46;;5758:272;;;;;:::o;6036:377::-;6142:3;6170:39;6203:5;6170:39;:::i;:::-;6225:89;6307:6;6302:3;6225:89;:::i;:::-;6218:96;;6323:52;6368:6;6363:3;6356:4;6349:5;6345:16;6323:52;:::i;:::-;6400:6;6395:3;6391:16;6384:23;;6146:267;;;;;:::o;6419:366::-;6561:3;6582:67;6646:2;6641:3;6582:67;:::i;:::-;6575:74;;6658:93;6747:3;6658:93;:::i;:::-;6776:2;6771:3;6767:12;6760:19;;6565:220;;;:::o;6791:366::-;6933:3;6954:67;7018:2;7013:3;6954:67;:::i;:::-;6947:74;;7030:93;7119:3;7030:93;:::i;:::-;7148:2;7143:3;7139:12;7132:19;;6937:220;;;:::o;7163:366::-;7305:3;7326:67;7390:2;7385:3;7326:67;:::i;:::-;7319:74;;7402:93;7491:3;7402:93;:::i;:::-;7520:2;7515:3;7511:12;7504:19;;7309:220;;;:::o;7535:366::-;7677:3;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7681:220;;;:::o;7907:366::-;8049:3;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;8053:220;;;:::o;8279:366::-;8421:3;8442:67;8506:2;8501:3;8442:67;:::i;:::-;8435:74;;8518:93;8607:3;8518:93;:::i;:::-;8636:2;8631:3;8627:12;8620:19;;8425:220;;;:::o;8651:366::-;8793:3;8814:67;8878:2;8873:3;8814:67;:::i;:::-;8807:74;;8890:93;8979:3;8890:93;:::i;:::-;9008:2;9003:3;8999:12;8992:19;;8797:220;;;:::o;9023:366::-;9165:3;9186:67;9250:2;9245:3;9186:67;:::i;:::-;9179:74;;9262:93;9351:3;9262:93;:::i;:::-;9380:2;9375:3;9371:12;9364:19;;9169:220;;;:::o;9395:366::-;9537:3;9558:67;9622:2;9617:3;9558:67;:::i;:::-;9551:74;;9634:93;9723:3;9634:93;:::i;:::-;9752:2;9747:3;9743:12;9736:19;;9541:220;;;:::o;9767:118::-;9854:24;9872:5;9854:24;:::i;:::-;9849:3;9842:37;9832:53;;:::o;9891:435::-;10071:3;10093:95;10184:3;10175:6;10093:95;:::i;:::-;10086:102;;10205:95;10296:3;10287:6;10205:95;:::i;:::-;10198:102;;10317:3;10310:10;;10075:251;;;;;:::o;10332:222::-;10425:4;10463:2;10452:9;10448:18;10440:26;;10476:71;10544:1;10533:9;10529:17;10520:6;10476:71;:::i;:::-;10430:124;;;;:::o;10560:640::-;10755:4;10793:3;10782:9;10778:19;10770:27;;10807:71;10875:1;10864:9;10860:17;10851:6;10807:71;:::i;:::-;10888:72;10956:2;10945:9;10941:18;10932:6;10888:72;:::i;:::-;10970;11038:2;11027:9;11023:18;11014:6;10970:72;:::i;:::-;11089:9;11083:4;11079:20;11074:2;11063:9;11059:18;11052:48;11117:76;11188:4;11179:6;11117:76;:::i;:::-;11109:84;;10760:440;;;;;;;:::o;11206:210::-;11293:4;11331:2;11320:9;11316:18;11308:26;;11344:65;11406:1;11395:9;11391:17;11382:6;11344:65;:::i;:::-;11298:118;;;;:::o;11422:313::-;11535:4;11573:2;11562:9;11558:18;11550:26;;11622:9;11616:4;11612:20;11608:1;11597:9;11593:17;11586:47;11650:78;11723:4;11714:6;11650:78;:::i;:::-;11642:86;;11540:195;;;;:::o;11741:419::-;11907:4;11945:2;11934:9;11930:18;11922:26;;11994:9;11988:4;11984:20;11980:1;11969:9;11965:17;11958:47;12022:131;12148:4;12022:131;:::i;:::-;12014:139;;11912:248;;;:::o;12166:419::-;12332:4;12370:2;12359:9;12355:18;12347:26;;12419:9;12413:4;12409:20;12405:1;12394:9;12390:17;12383:47;12447:131;12573:4;12447:131;:::i;:::-;12439:139;;12337:248;;;:::o;12591:419::-;12757:4;12795:2;12784:9;12780:18;12772:26;;12844:9;12838:4;12834:20;12830:1;12819:9;12815:17;12808:47;12872:131;12998:4;12872:131;:::i;:::-;12864:139;;12762:248;;;:::o;13016:419::-;13182:4;13220:2;13209:9;13205:18;13197:26;;13269:9;13263:4;13259:20;13255:1;13244:9;13240:17;13233:47;13297:131;13423:4;13297:131;:::i;:::-;13289:139;;13187:248;;;:::o;13441:419::-;13607:4;13645:2;13634:9;13630:18;13622:26;;13694:9;13688:4;13684:20;13680:1;13669:9;13665:17;13658:47;13722:131;13848:4;13722:131;:::i;:::-;13714:139;;13612:248;;;:::o;13866:419::-;14032:4;14070:2;14059:9;14055:18;14047:26;;14119:9;14113:4;14109:20;14105:1;14094:9;14090:17;14083:47;14147:131;14273:4;14147:131;:::i;:::-;14139:139;;14037:248;;;:::o;14291:419::-;14457:4;14495:2;14484:9;14480:18;14472:26;;14544:9;14538:4;14534:20;14530:1;14519:9;14515:17;14508:47;14572:131;14698:4;14572:131;:::i;:::-;14564:139;;14462:248;;;:::o;14716:419::-;14882:4;14920:2;14909:9;14905:18;14897:26;;14969:9;14963:4;14959:20;14955:1;14944:9;14940:17;14933:47;14997:131;15123:4;14997:131;:::i;:::-;14989:139;;14887:248;;;:::o;15141:419::-;15307:4;15345:2;15334:9;15330:18;15322:26;;15394:9;15388:4;15384:20;15380:1;15369:9;15365:17;15358:47;15422:131;15548:4;15422:131;:::i;:::-;15414:139;;15312:248;;;:::o;15566:222::-;15659:4;15697:2;15686:9;15682:18;15674:26;;15710:71;15778:1;15767:9;15763:17;15754:6;15710:71;:::i;:::-;15664:124;;;;:::o;15794:129::-;15828:6;15855:20;;:::i;:::-;15845:30;;15884:33;15912:4;15904:6;15884:33;:::i;:::-;15835:88;;;:::o;15929:75::-;15962:6;15995:2;15989:9;15979:19;;15969:35;:::o;16010:307::-;16071:4;16161:18;16153:6;16150:30;16147:2;;;16183:18;;:::i;:::-;16147:2;16221:29;16243:6;16221:29;:::i;:::-;16213:37;;16305:4;16299;16295:15;16287:23;;16076:241;;;:::o;16323:98::-;16374:6;16408:5;16402:12;16392:22;;16381:40;;;:::o;16427:99::-;16479:6;16513:5;16507:12;16497:22;;16486:40;;;:::o;16532:168::-;16615:11;16649:6;16644:3;16637:19;16689:4;16684:3;16680:14;16665:29;;16627:73;;;;:::o;16706:169::-;16790:11;16824:6;16819:3;16812:19;16864:4;16859:3;16855:14;16840:29;;16802:73;;;;:::o;16881:148::-;16983:11;17020:3;17005:18;;16995:34;;;;:::o;17035:305::-;17075:3;17094:20;17112:1;17094:20;:::i;:::-;17089:25;;17128:20;17146:1;17128:20;:::i;:::-;17123:25;;17282:1;17214:66;17210:74;17207:1;17204:81;17201:2;;;17288:18;;:::i;:::-;17201:2;17332:1;17329;17325:9;17318:16;;17079:261;;;;:::o;17346:185::-;17386:1;17403:20;17421:1;17403:20;:::i;:::-;17398:25;;17437:20;17455:1;17437:20;:::i;:::-;17432:25;;17476:1;17466:2;;17481:18;;:::i;:::-;17466:2;17523:1;17520;17516:9;17511:14;;17388:143;;;;:::o;17537:191::-;17577:4;17597:20;17615:1;17597:20;:::i;:::-;17592:25;;17631:20;17649:1;17631:20;:::i;:::-;17626:25;;17670:1;17667;17664:8;17661:2;;;17675:18;;:::i;:::-;17661:2;17720:1;17717;17713:9;17705:17;;17582:146;;;;:::o;17734:96::-;17771:7;17800:24;17818:5;17800:24;:::i;:::-;17789:35;;17779:51;;;:::o;17836:90::-;17870:7;17913:5;17906:13;17899:21;17888:32;;17878:48;;;:::o;17932:149::-;17968:7;18008:66;18001:5;17997:78;17986:89;;17976:105;;;:::o;18087:126::-;18124:7;18164:42;18157:5;18153:54;18142:65;;18132:81;;;:::o;18219:77::-;18256:7;18285:5;18274:16;;18264:32;;;:::o;18302:154::-;18386:6;18381:3;18376;18363:30;18448:1;18439:6;18434:3;18430:16;18423:27;18353:103;;;:::o;18462:307::-;18530:1;18540:113;18554:6;18551:1;18548:13;18540:113;;;18639:1;18634:3;18630:11;18624:18;18620:1;18615:3;18611:11;18604:39;18576:2;18573:1;18569:10;18564:15;;18540:113;;;18671:6;18668:1;18665:13;18662:2;;;18751:1;18742:6;18737:3;18733:16;18726:27;18662:2;18511:258;;;;:::o;18775:320::-;18819:6;18856:1;18850:4;18846:12;18836:22;;18903:1;18897:4;18893:12;18924:18;18914:2;;18980:4;18972:6;18968:17;18958:27;;18914:2;19042;19034:6;19031:14;19011:18;19008:38;19005:2;;;19061:18;;:::i;:::-;19005:2;18826:269;;;;:::o;19101:281::-;19184:27;19206:4;19184:27;:::i;:::-;19176:6;19172:40;19314:6;19302:10;19299:22;19278:18;19266:10;19263:34;19260:62;19257:2;;;19325:18;;:::i;:::-;19257:2;19365:10;19361:2;19354:22;19144:238;;;:::o;19388:233::-;19427:3;19450:24;19468:5;19450:24;:::i;:::-;19441:33;;19496:66;19489:5;19486:77;19483:2;;;19566:18;;:::i;:::-;19483:2;19613:1;19606:5;19602:13;19595:20;;19431:190;;;:::o;19627:176::-;19659:1;19676:20;19694:1;19676:20;:::i;:::-;19671:25;;19710:20;19728:1;19710:20;:::i;:::-;19705:25;;19749:1;19739:2;;19754:18;;:::i;:::-;19739:2;19795:1;19792;19788:9;19783:14;;19661:142;;;;:::o;19809:180::-;19857:77;19854:1;19847:88;19954:4;19951:1;19944:15;19978:4;19975:1;19968:15;19995:180;20043:77;20040:1;20033:88;20140:4;20137:1;20130:15;20164:4;20161:1;20154:15;20181:180;20229:77;20226:1;20219:88;20326:4;20323:1;20316:15;20350:4;20347:1;20340:15;20367:180;20415:77;20412:1;20405:88;20512:4;20509:1;20502:15;20536:4;20533:1;20526:15;20553:102;20594:6;20645:2;20641:7;20636:2;20629:5;20625:14;20621:28;20611:38;;20601:54;;;:::o;20661:237::-;20801:34;20797:1;20789:6;20785:14;20778:58;20870:20;20865:2;20857:6;20853:15;20846:45;20767:131;:::o;20904:224::-;21044:34;21040:1;21032:6;21028:14;21021:58;21113:7;21108:2;21100:6;21096:15;21089:32;21010:118;:::o;21134:223::-;21274:34;21270:1;21262:6;21258:14;21251:58;21343:6;21338:2;21330:6;21326:15;21319:31;21240:117;:::o;21363:175::-;21503:27;21499:1;21491:6;21487:14;21480:51;21469:69;:::o;21544:228::-;21684:34;21680:1;21672:6;21668:14;21661:58;21753:11;21748:2;21740:6;21736:15;21729:36;21650:122;:::o;21778:249::-;21918:34;21914:1;21906:6;21902:14;21895:58;21987:32;21982:2;21974:6;21970:15;21963:57;21884:143;:::o;22033:174::-;22173:26;22169:1;22161:6;22157:14;22150:50;22139:68;:::o;22213:220::-;22353:34;22349:1;22341:6;22337:14;22330:58;22422:3;22417:2;22409:6;22405:15;22398:28;22319:114;:::o;22439:233::-;22579:34;22575:1;22567:6;22563:14;22556:58;22648:16;22643:2;22635:6;22631:15;22624:41;22545:127;:::o;22678:122::-;22751:24;22769:5;22751:24;:::i;:::-;22744:5;22741:35;22731:2;;22790:1;22787;22780:12;22731:2;22721:79;:::o;22806:116::-;22876:21;22891:5;22876:21;:::i;:::-;22869:5;22866:32;22856:2;;22912:1;22909;22902:12;22856:2;22846:76;:::o;22928:120::-;23000:23;23017:5;23000:23;:::i;:::-;22993:5;22990:34;22980:2;;23038:1;23035;23028:12;22980:2;22970:78;:::o;23054:122::-;23127:24;23145:5;23127:24;:::i;:::-;23120:5;23117:35;23107:2;;23166:1;23163;23156:12;23107:2;23097:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1711800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1624","getApproved(uint256)":"2634","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"1682","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"2124","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"969","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":345,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":349,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":345,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":349,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1333,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1337,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1340,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1344,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd254622f387abed5de0b86dc404dec231eb83f9f7f76fb1ea323d611df986064736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 SLOAD PUSH3 0x2F387A 0xBE 0xD5 0xDE SIGNEXTEND DUP7 0xDC BLOCKHASH 0x4D 0xEC 0x23 0x1E 0xB8 EXTCODEHASH SWAP16 PUSH32 0x76FB1EA323D611DF986064736F6C634300080400330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd254622f387abed5de0b86dc404dec231eb83f9f7f76fb1ea323d611df986064736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 SLOAD PUSH3 0x2F387A 0xBE 0xD5 0xDE SIGNEXTEND DUP7 0xDC BLOCKHASH 0x4D 0xEC 0x23 0x1E 0xB8 EXTCODEHASH SWAP16 PUSH32 0x76FB1EA323D611DF986064736F6C634300080400330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"devdoc":{"details":"Provides a set of functions to operate with Base64 strings. _Available since v4.5._","kind":"dev","methods":{},"stateVariables":{"_TABLE":{"details":"Base64 Encoding/Decoding Table"}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ff99c870616d28ca2deac152037aaa32267a8019bc86da57fe4ac4a9d3606db64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF99C870616D28CA2DEAC152037AAA32267A8019BC86DA57FE4AC4A9D3606DB64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"231:3302:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ff99c870616d28ca2deac152037aaa32267a8019bc86da57fe4ac4a9d3606db64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF99C870616D28CA2DEAC152037AAA32267A8019BC86DA57FE4AC4A9D3606DB64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"231:3302:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a83ebd19446944e6ba80c8778d5afff4d43a35c74d88c713440c5171725240e364736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 RETURNDATACOPY 0xBD NOT DIFFICULTY PUSH10 0x44E6BA80C8778D5AFFF4 0xD4 GASPRICE CALLDATALOAD 0xC7 0x4D DUP9 0xC7 SGT DIFFICULTY 0xC MLOAD PUSH18 0x725240E364736F6C63430008040033000000 ","sourceMap":"161:2235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a83ebd19446944e6ba80c8778d5afff4d43a35c74d88c713440c5171725240e364736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 RETURNDATACOPY 0xBD NOT DIFFICULTY PUSH10 0x44E6BA80C8778D5AFFF4 0xD4 GASPRICE CALLDATALOAD 0xC7 0x4D DUP9 0xC7 SGT DIFFICULTY 0xC MLOAD PUSH18 0x725240E364736F6C63430008040033000000 ","sourceMap":"161:2235:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/INFTCollection.sol":{"INFTCollection":{"abi":[{"inputs":[],"name":"batchSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRevealed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealPendingMetadata","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealedCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"}],"name":"setRevealBatchSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealInterval","type":"uint256"}],"name":"setRevealInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shouldReveal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchSize()":"f4daaba1","lastRevealed()":"7b4fab5a","maxSupply()":"d5abeb01","mint(uint256)":"a0712d68","mintCost()":"bdb4b848","revealInterval()":"247cd8ad","revealPendingMetadata()":"96634a40","revealedCount()":"bbd78e93","setRevealBatchSize(uint256)":"aaae4e23","setRevealInterval(uint256)":"5c65d81f","shouldReveal()":"cf3b94cd","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"batchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRevealed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealPendingMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"}],\"name\":\"setRevealBatchSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"}],\"name\":\"setRevealInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReveal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/INFTCollection.sol\":\"INFTCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface INFTCollection {\\n    function mint(uint256 _amount) external payable;\\n\\n    function withdrawProceeds() external;\\n\\n    function revealedCount() external view returns(uint256);\\n\\n    function lastRevealed() external view returns(uint256);\\n\\n    function batchSize() external view returns(uint256);\\n\\n    function revealInterval() external view returns(uint256);\\n\\n    function mintCost() external view returns (uint256);\\n\\n    function maxSupply() external view returns (uint256);\\n\\n    function shouldReveal() external view returns (bool);\\n\\n    function revealPendingMetadata() external returns (uint256 requestId);\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\\n\\n    function setRevealInterval(uint256 _revealInterval) external;\\n}\\n\",\"keccak256\":\"0x7d1a0ec803647708dfc18e7e377c954e6fbd106c7da7d0da0904d0fb475bb157\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTCollection.sol":{"NFTCollection":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_mintCost","type":"uint256"},{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"},{"internalType":"uint256","name":"_revealInterval","type":"uint256"},{"internalType":"address","name":"_vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"_vrfSubscriptionId","type":"uint64"},{"internalType":"bytes32","name":"_vrfGasLane","type":"bytes32"},{"internalType":"uint32","name":"_vrfCallbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InsufficientLINK","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"MaxSupplyReached","type":"error"},{"inputs":[],"name":"NonExistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RevealCriteriaNotMet","type":"error"},{"inputs":[],"name":"RevealInProgress","type":"error"},{"inputs":[],"name":"WithdrawProceedsFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"BatchRevealFinished","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"BatchRevealRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRevealed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealPendingMetadata","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealedCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"}],"name":"setRevealBatchSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealInterval","type":"uint256"}],"name":"setRevealInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shouldReveal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"str","type":"string"},{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"substring","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6500:20","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:20","statements":[{"nodeType":"YulAssignment","src":"112:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:20"},"nodeType":"YulFunctionCall","src":"137:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:20"},"nodeType":"YulFunctionCall","src":"121:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:20"},"nodeType":"YulFunctionCall","src":"196:21:20"},"nodeType":"YulExpressionStatement","src":"196:21:20"},{"nodeType":"YulVariableDeclaration","src":"226:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:20"},"nodeType":"YulFunctionCall","src":"237:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:20"},"nodeType":"YulFunctionCall","src":"293:12:20"},"nodeType":"YulExpressionStatement","src":"293:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:20"},"nodeType":"YulFunctionCall","src":"265:25:20"},"nodeType":"YulIf","src":"262:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:20"},"nodeType":"YulFunctionCall","src":"316:39:20"},"nodeType":"YulExpressionStatement","src":"316:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:20","type":""}],"src":"7:354:20"},{"body":{"nodeType":"YulBlock","src":"430:80:20","statements":[{"nodeType":"YulAssignment","src":"440:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"455:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:20"},"nodeType":"YulFunctionCall","src":"449:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"440:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"471:26:20"},"nodeType":"YulFunctionCall","src":"471:33:20"},"nodeType":"YulExpressionStatement","src":"471:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"416:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"424:5:20","type":""}],"src":"367:143:20"},{"body":{"nodeType":"YulBlock","src":"579:80:20","statements":[{"nodeType":"YulAssignment","src":"589:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"604:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"598:5:20"},"nodeType":"YulFunctionCall","src":"598:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"589:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"620:26:20"},"nodeType":"YulFunctionCall","src":"620:33:20"},"nodeType":"YulExpressionStatement","src":"620:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"557:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"565:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"573:5:20","type":""}],"src":"516:143:20"},{"body":{"nodeType":"YulBlock","src":"752:215:20","statements":[{"body":{"nodeType":"YulBlock","src":"801:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"810:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"813:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"803:6:20"},"nodeType":"YulFunctionCall","src":"803:12:20"},"nodeType":"YulExpressionStatement","src":"803:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"788:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"776:3:20"},"nodeType":"YulFunctionCall","src":"776:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"795:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"772:3:20"},"nodeType":"YulFunctionCall","src":"772:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"765:6:20"},"nodeType":"YulFunctionCall","src":"765:35:20"},"nodeType":"YulIf","src":"762:2:20"},{"nodeType":"YulVariableDeclaration","src":"826:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"846:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"840:5:20"},"nodeType":"YulFunctionCall","src":"840:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"830:6:20","type":""}]},{"nodeType":"YulAssignment","src":"862:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"934:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"942:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:20"},"nodeType":"YulFunctionCall","src":"930:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"949:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"957:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"871:58:20"},"nodeType":"YulFunctionCall","src":"871:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"862:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"730:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"738:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"746:5:20","type":""}],"src":"679:288:20"},{"body":{"nodeType":"YulBlock","src":"1036:80:20","statements":[{"nodeType":"YulAssignment","src":"1046:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1061:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1055:5:20"},"nodeType":"YulFunctionCall","src":"1055:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1046:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1104:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1077:26:20"},"nodeType":"YulFunctionCall","src":"1077:33:20"},"nodeType":"YulExpressionStatement","src":"1077:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1014:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1022:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1030:5:20","type":""}],"src":"973:143:20"},{"body":{"nodeType":"YulBlock","src":"1184:79:20","statements":[{"nodeType":"YulAssignment","src":"1194:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1209:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1203:5:20"},"nodeType":"YulFunctionCall","src":"1203:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1251:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1225:25:20"},"nodeType":"YulFunctionCall","src":"1225:32:20"},"nodeType":"YulExpressionStatement","src":"1225:32:20"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1162:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1170:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1178:5:20","type":""}],"src":"1122:141:20"},{"body":{"nodeType":"YulBlock","src":"1331:79:20","statements":[{"nodeType":"YulAssignment","src":"1341:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1356:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1350:5:20"},"nodeType":"YulFunctionCall","src":"1350:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1341:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1398:5:20"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1372:25:20"},"nodeType":"YulFunctionCall","src":"1372:32:20"},"nodeType":"YulExpressionStatement","src":"1372:32:20"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1309:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1317:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1325:5:20","type":""}],"src":"1269:141:20"},{"body":{"nodeType":"YulBlock","src":"1664:1655:20","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:20"},"nodeType":"YulFunctionCall","src":"1713:12:20"},"nodeType":"YulExpressionStatement","src":"1713:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:20"},"nodeType":"YulFunctionCall","src":"1681:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1706:3:20","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:20"},"nodeType":"YulFunctionCall","src":"1677:33:20"},"nodeType":"YulIf","src":"1674:2:20"},{"nodeType":"YulBlock","src":"1737:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1752:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1776:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:20"},"nodeType":"YulFunctionCall","src":"1772:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1766:5:20"},"nodeType":"YulFunctionCall","src":"1766:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1756:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1837:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1849:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1839:6:20"},"nodeType":"YulFunctionCall","src":"1839:12:20"},"nodeType":"YulExpressionStatement","src":"1839:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1809:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1817:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1806:2:20"},"nodeType":"YulFunctionCall","src":"1806:30:20"},"nodeType":"YulIf","src":"1803:2:20"},{"nodeType":"YulAssignment","src":"1867:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1923:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1934:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1919:3:20"},"nodeType":"YulFunctionCall","src":"1919:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1943:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1877:41:20"},"nodeType":"YulFunctionCall","src":"1877:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1867:6:20"}]}]},{"nodeType":"YulBlock","src":"1971:225:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1986:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2021:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:20"},"nodeType":"YulFunctionCall","src":"2006:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2000:5:20"},"nodeType":"YulFunctionCall","src":"2000:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1990:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2072:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2081:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2084:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2074:6:20"},"nodeType":"YulFunctionCall","src":"2074:12:20"},"nodeType":"YulExpressionStatement","src":"2074:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2044:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2052:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2041:2:20"},"nodeType":"YulFunctionCall","src":"2041:30:20"},"nodeType":"YulIf","src":"2038:2:20"},{"nodeType":"YulAssignment","src":"2102:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:20"},"nodeType":"YulFunctionCall","src":"2154:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2112:41:20"},"nodeType":"YulFunctionCall","src":"2112:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2102:6:20"}]}]},{"nodeType":"YulBlock","src":"2206:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2221:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2235:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2225:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2251:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:20"},"nodeType":"YulFunctionCall","src":"2293:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2261:31:20"},"nodeType":"YulFunctionCall","src":"2261:64:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2251:6:20"}]}]},{"nodeType":"YulBlock","src":"2345:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2390:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2447:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:20"},"nodeType":"YulFunctionCall","src":"2432:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2456:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2400:31:20"},"nodeType":"YulFunctionCall","src":"2400:64:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2390:6:20"}]}]},{"nodeType":"YulBlock","src":"2484:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2499:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2513:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2530:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2587:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:20"},"nodeType":"YulFunctionCall","src":"2572:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2596:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2540:31:20"},"nodeType":"YulFunctionCall","src":"2540:64:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2530:6:20"}]}]},{"nodeType":"YulBlock","src":"2624:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2639:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2653:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2643:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2670:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2727:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:20"},"nodeType":"YulFunctionCall","src":"2712:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2736:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2680:31:20"},"nodeType":"YulFunctionCall","src":"2680:64:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2670:6:20"}]}]},{"nodeType":"YulBlock","src":"2764:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2779:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2793:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2783:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2810:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2856:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2867:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2852:3:20"},"nodeType":"YulFunctionCall","src":"2852:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2876:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2820:31:20"},"nodeType":"YulFunctionCall","src":"2820:64:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2810:6:20"}]}]},{"nodeType":"YulBlock","src":"2904:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2919:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2933:3:20","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2923:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2950:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2995:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3006:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2991:3:20"},"nodeType":"YulFunctionCall","src":"2991:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3015:7:20"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"2960:30:20"},"nodeType":"YulFunctionCall","src":"2960:63:20"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2950:6:20"}]}]},{"nodeType":"YulBlock","src":"3043:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3058:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3072:3:20","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3062:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3089:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3135:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3146:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3131:3:20"},"nodeType":"YulFunctionCall","src":"3131:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3155:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"3099:31:20"},"nodeType":"YulFunctionCall","src":"3099:64:20"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"3089:6:20"}]}]},{"nodeType":"YulBlock","src":"3183:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3198:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3212:3:20","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3202:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3229:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3285:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3270:3:20"},"nodeType":"YulFunctionCall","src":"3270:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3294:7:20"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3239:30:20"},"nodeType":"YulFunctionCall","src":"3239:63:20"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"3229:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint64t_bytes32t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1562:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1573:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1585:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1593:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1601:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1609:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1617:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1625:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1633:6:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1641:6:20","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1649:6:20","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1657:6:20","type":""}],"src":"1416:1903:20"},{"body":{"nodeType":"YulBlock","src":"3366:88:20","statements":[{"nodeType":"YulAssignment","src":"3376:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3386:18:20"},"nodeType":"YulFunctionCall","src":"3386:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3376:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3435:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"3443:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3415:19:20"},"nodeType":"YulFunctionCall","src":"3415:33:20"},"nodeType":"YulExpressionStatement","src":"3415:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3350:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3359:6:20","type":""}],"src":"3325:129:20"},{"body":{"nodeType":"YulBlock","src":"3500:35:20","statements":[{"nodeType":"YulAssignment","src":"3510:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3526:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3520:5:20"},"nodeType":"YulFunctionCall","src":"3520:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3510:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3493:6:20","type":""}],"src":"3460:75:20"},{"body":{"nodeType":"YulBlock","src":"3608:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"3713:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3715:16:20"},"nodeType":"YulFunctionCall","src":"3715:18:20"},"nodeType":"YulExpressionStatement","src":"3715:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3685:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3693:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3682:2:20"},"nodeType":"YulFunctionCall","src":"3682:30:20"},"nodeType":"YulIf","src":"3679:2:20"},{"nodeType":"YulAssignment","src":"3745:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3775:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3753:21:20"},"nodeType":"YulFunctionCall","src":"3753:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3745:4:20"}]},{"nodeType":"YulAssignment","src":"3819:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3831:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3837:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:20"},"nodeType":"YulFunctionCall","src":"3827:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3819:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3592:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3603:4:20","type":""}],"src":"3541:308:20"},{"body":{"nodeType":"YulBlock","src":"3900:51:20","statements":[{"nodeType":"YulAssignment","src":"3910:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3939:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3921:17:20"},"nodeType":"YulFunctionCall","src":"3921:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3910:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3882:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3892:7:20","type":""}],"src":"3855:96:20"},{"body":{"nodeType":"YulBlock","src":"4002:32:20","statements":[{"nodeType":"YulAssignment","src":"4012:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4023:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4012:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3984:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3994:7:20","type":""}],"src":"3957:77:20"},{"body":{"nodeType":"YulBlock","src":"4085:81:20","statements":[{"nodeType":"YulAssignment","src":"4095:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4110:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4117:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4106:3:20"},"nodeType":"YulFunctionCall","src":"4106:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4095:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4067:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4077:7:20","type":""}],"src":"4040:126:20"},{"body":{"nodeType":"YulBlock","src":"4217:32:20","statements":[{"nodeType":"YulAssignment","src":"4227:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4238:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4227:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4199:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4209:7:20","type":""}],"src":"4172:77:20"},{"body":{"nodeType":"YulBlock","src":"4299:49:20","statements":[{"nodeType":"YulAssignment","src":"4309:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4324:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4331:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4320:3:20"},"nodeType":"YulFunctionCall","src":"4320:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4309:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4281:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4291:7:20","type":""}],"src":"4255:93:20"},{"body":{"nodeType":"YulBlock","src":"4398:57:20","statements":[{"nodeType":"YulAssignment","src":"4408:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4430:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4419:3:20"},"nodeType":"YulFunctionCall","src":"4419:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4408:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4380:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4390:7:20","type":""}],"src":"4354:101:20"},{"body":{"nodeType":"YulBlock","src":"4510:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4520:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4529:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4524:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4589:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4614:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4619:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4610:3:20"},"nodeType":"YulFunctionCall","src":"4610:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4633:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4638:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4629:3:20"},"nodeType":"YulFunctionCall","src":"4629:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4623:5:20"},"nodeType":"YulFunctionCall","src":"4623:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4603:6:20"},"nodeType":"YulFunctionCall","src":"4603:39:20"},"nodeType":"YulExpressionStatement","src":"4603:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4550:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"4553:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4547:2:20"},"nodeType":"YulFunctionCall","src":"4547:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4561:19:20","statements":[{"nodeType":"YulAssignment","src":"4563:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4572:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"4575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:20"},"nodeType":"YulFunctionCall","src":"4568:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4563:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"4543:3:20","statements":[]},"src":"4539:113:20"},{"body":{"nodeType":"YulBlock","src":"4686:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4736:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4741:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4732:3:20"},"nodeType":"YulFunctionCall","src":"4732:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"4750:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4725:6:20"},"nodeType":"YulFunctionCall","src":"4725:27:20"},"nodeType":"YulExpressionStatement","src":"4725:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4667:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"4670:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4664:2:20"},"nodeType":"YulFunctionCall","src":"4664:13:20"},"nodeType":"YulIf","src":"4661:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4492:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4497:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4502:6:20","type":""}],"src":"4461:307:20"},{"body":{"nodeType":"YulBlock","src":"4825:269:20","statements":[{"nodeType":"YulAssignment","src":"4835:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4849:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4855:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4845:3:20"},"nodeType":"YulFunctionCall","src":"4845:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4835:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4866:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4896:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4902:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4892:3:20"},"nodeType":"YulFunctionCall","src":"4892:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4870:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4943:51:20","statements":[{"nodeType":"YulAssignment","src":"4957:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4971:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4979:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4967:3:20"},"nodeType":"YulFunctionCall","src":"4967:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4957:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4923:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4916:6:20"},"nodeType":"YulFunctionCall","src":"4916:26:20"},"nodeType":"YulIf","src":"4913:2:20"},{"body":{"nodeType":"YulBlock","src":"5046:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5060:16:20"},"nodeType":"YulFunctionCall","src":"5060:18:20"},"nodeType":"YulExpressionStatement","src":"5060:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5010:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5033:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5041:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5030:2:20"},"nodeType":"YulFunctionCall","src":"5030:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5007:2:20"},"nodeType":"YulFunctionCall","src":"5007:38:20"},"nodeType":"YulIf","src":"5004:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4809:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4818:6:20","type":""}],"src":"4774:320:20"},{"body":{"nodeType":"YulBlock","src":"5143:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5153:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5175:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5205:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5183:21:20"},"nodeType":"YulFunctionCall","src":"5183:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:20"},"nodeType":"YulFunctionCall","src":"5171:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5157:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5322:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5324:16:20"},"nodeType":"YulFunctionCall","src":"5324:18:20"},"nodeType":"YulExpressionStatement","src":"5324:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5265:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"5277:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5262:2:20"},"nodeType":"YulFunctionCall","src":"5262:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5301:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5313:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5298:2:20"},"nodeType":"YulFunctionCall","src":"5298:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5259:2:20"},"nodeType":"YulFunctionCall","src":"5259:62:20"},"nodeType":"YulIf","src":"5256:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5360:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5353:6:20"},"nodeType":"YulFunctionCall","src":"5353:22:20"},"nodeType":"YulExpressionStatement","src":"5353:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5129:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"5137:4:20","type":""}],"src":"5100:281:20"},{"body":{"nodeType":"YulBlock","src":"5415:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5432:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5435:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5425:6:20"},"nodeType":"YulFunctionCall","src":"5425:88:20"},"nodeType":"YulExpressionStatement","src":"5425:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5529:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5532:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5522:6:20"},"nodeType":"YulFunctionCall","src":"5522:15:20"},"nodeType":"YulExpressionStatement","src":"5522:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5553:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5556:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5546:6:20"},"nodeType":"YulFunctionCall","src":"5546:15:20"},"nodeType":"YulExpressionStatement","src":"5546:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5387:180:20"},{"body":{"nodeType":"YulBlock","src":"5601:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5618:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5621:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:20"},"nodeType":"YulFunctionCall","src":"5611:88:20"},"nodeType":"YulExpressionStatement","src":"5611:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5718:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5708:6:20"},"nodeType":"YulFunctionCall","src":"5708:15:20"},"nodeType":"YulExpressionStatement","src":"5708:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5739:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5742:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5732:6:20"},"nodeType":"YulFunctionCall","src":"5732:15:20"},"nodeType":"YulExpressionStatement","src":"5732:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5573:180:20"},{"body":{"nodeType":"YulBlock","src":"5807:54:20","statements":[{"nodeType":"YulAssignment","src":"5817:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5835:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5842:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:20"},"nodeType":"YulFunctionCall","src":"5831:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5851:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5847:3:20"},"nodeType":"YulFunctionCall","src":"5847:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5827:3:20"},"nodeType":"YulFunctionCall","src":"5827:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5817:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5790:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5800:6:20","type":""}],"src":"5759:102:20"},{"body":{"nodeType":"YulBlock","src":"5910:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"5967:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5976:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5979:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5969:6:20"},"nodeType":"YulFunctionCall","src":"5969:12:20"},"nodeType":"YulExpressionStatement","src":"5969:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5933:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5958:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5940:17:20"},"nodeType":"YulFunctionCall","src":"5940:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5930:2:20"},"nodeType":"YulFunctionCall","src":"5930:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5923:6:20"},"nodeType":"YulFunctionCall","src":"5923:43:20"},"nodeType":"YulIf","src":"5920:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:20","type":""}],"src":"5867:122:20"},{"body":{"nodeType":"YulBlock","src":"6038:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6095:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6104:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6107:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6097:6:20"},"nodeType":"YulFunctionCall","src":"6097:12:20"},"nodeType":"YulExpressionStatement","src":"6097:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6061:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6086:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6068:17:20"},"nodeType":"YulFunctionCall","src":"6068:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6058:2:20"},"nodeType":"YulFunctionCall","src":"6058:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6051:6:20"},"nodeType":"YulFunctionCall","src":"6051:43:20"},"nodeType":"YulIf","src":"6048:2:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6031:5:20","type":""}],"src":"5995:122:20"},{"body":{"nodeType":"YulBlock","src":"6166:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6223:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6232:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6235:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6225:6:20"},"nodeType":"YulFunctionCall","src":"6225:12:20"},"nodeType":"YulExpressionStatement","src":"6225:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6189:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6214:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6196:17:20"},"nodeType":"YulFunctionCall","src":"6196:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6186:2:20"},"nodeType":"YulFunctionCall","src":"6186:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6179:6:20"},"nodeType":"YulFunctionCall","src":"6179:43:20"},"nodeType":"YulIf","src":"6176:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6159:5:20","type":""}],"src":"6123:122:20"},{"body":{"nodeType":"YulBlock","src":"6293:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"6349:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6358:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6361:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6351:6:20"},"nodeType":"YulFunctionCall","src":"6351:12:20"},"nodeType":"YulExpressionStatement","src":"6351:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6316:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6323:16:20"},"nodeType":"YulFunctionCall","src":"6323:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6313:2:20"},"nodeType":"YulFunctionCall","src":"6313:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6306:6:20"},"nodeType":"YulFunctionCall","src":"6306:42:20"},"nodeType":"YulIf","src":"6303:2:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6286:5:20","type":""}],"src":"6251:120:20"},{"body":{"nodeType":"YulBlock","src":"6419:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"6475:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6484:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6487:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6477:6:20"},"nodeType":"YulFunctionCall","src":"6477:12:20"},"nodeType":"YulExpressionStatement","src":"6477:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6442:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6466:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"6449:16:20"},"nodeType":"YulFunctionCall","src":"6449:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6439:2:20"},"nodeType":"YulFunctionCall","src":"6439:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6432:6:20"},"nodeType":"YulFunctionCall","src":"6432:42:20"},"nodeType":"YulIf","src":"6429:2:20"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6412:5:20","type":""}],"src":"6377:120:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint64t_bytes32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE TIMESTAMP PUSH1 0xE SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5B58 CODESIZE SUB DUP1 PUSH3 0x5B58 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x3D2 JUMP JUMPDEST DUP4 DUP11 DUP11 PUSH3 0x5F PUSH3 0x53 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x179 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x77 SWAP3 SWAP2 SWAP1 PUSH3 0x23D JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x90 SWAP3 SWAP2 SWAP1 PUSH3 0x23D JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP8 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP7 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP2 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP6 PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x752 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x24B SWAP1 PUSH3 0x5F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x26F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x28A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CA SWAP2 SWAP1 PUSH3 0x2CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x304 PUSH3 0x2FE DUP5 PUSH3 0x51D JUMP JUMPDEST PUSH3 0x4F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32A DUP5 DUP3 DUP6 PUSH3 0x5BF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x343 DUP2 PUSH3 0x6D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x35A DUP2 PUSH3 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x39E DUP2 PUSH3 0x704 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3B5 DUP2 PUSH3 0x71E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3CC DUP2 PUSH3 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP12 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x41C DUP14 DUP3 DUP15 ADD PUSH3 0x360 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 DUP12 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x448 DUP14 DUP3 DUP15 ADD PUSH3 0x360 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x45B DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46E DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x481 DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x494 DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A7 DUP14 DUP3 DUP15 ADD PUSH3 0x332 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4BA DUP14 DUP3 DUP15 ADD PUSH3 0x3BB JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CE DUP14 DUP3 DUP15 ADD PUSH3 0x349 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4E2 DUP14 DUP3 DUP15 ADD PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x500 PUSH3 0x513 JUMP JUMPDEST SWAP1 POP PUSH3 0x50E DUP3 DUP3 PUSH3 0x62B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x53B JUMPI PUSH3 0x53A PUSH3 0x690 JUMP JUMPDEST JUMPDEST PUSH3 0x546 DUP3 PUSH3 0x6BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x560 DUP3 PUSH3 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x60E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x625 JUMPI PUSH3 0x624 PUSH3 0x661 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x636 DUP3 PUSH3 0x6BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x658 JUMPI PUSH3 0x657 PUSH3 0x690 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6DB DUP2 PUSH3 0x553 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F5 DUP2 PUSH3 0x567 JUMP JUMPDEST DUP2 EQ PUSH3 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x70F DUP2 PUSH3 0x591 JUMP JUMPDEST DUP2 EQ PUSH3 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x729 DUP2 PUSH3 0x59B JUMP JUMPDEST DUP2 EQ PUSH3 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x743 DUP2 PUSH3 0x5AB JUMP JUMPDEST DUP2 EQ PUSH3 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0xC0 SHR PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0xE0 SHR PUSH2 0x538A PUSH3 0x7CE PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x130D ADD MSTORE PUSH1 0x0 PUSH2 0x12C9 ADD MSTORE PUSH1 0x0 PUSH2 0x12EA ADD MSTORE PUSH1 0x0 PUSH2 0x128D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x14A6 ADD MSTORE PUSH2 0x15DB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1440 ADD MSTORE PUSH2 0x170C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xC3B ADD MSTORE PUSH2 0xC8F ADD MSTORE PUSH2 0x538A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCF3B94CD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCF3B94CD EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0xF4DAABA1 EQ PUSH2 0x829 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xBBD78E93 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xBDB4B848 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x730 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x96634A40 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xAAAE4E23 EQ PUSH2 0x688 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B4FAB5A EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x5D6 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x247CD8AD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x5C65D81F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x52C JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x247CD8AD EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x422 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1DCD9B55 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x368 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3B6A JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x3C23 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0xE28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x4362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57E PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C0 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EB PUSH2 0x10BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x3A5B JUMP JUMPDEST PUSH2 0x1543 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71A PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x782 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AD PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x827 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83E PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP3 PUSH2 0x1852 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8DD SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x909 SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x92B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x956 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x939 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96B DUP3 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B1 DUP3 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x4587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA41 PUSH2 0x197F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA70 JUMPI POP PUSH2 0xA6F DUP2 PUSH2 0xA6A PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST JUMPDEST PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x4507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP4 DUP4 PUSH2 0x1987 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP5 DUP5 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB51 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC2C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0xC24 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB5A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCEB JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP3 SWAP2 SWAP1 PUSH2 0x42D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF5 DUP3 DUP3 PUSH2 0x1A40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xD04 PUSH2 0x197F JUMP JUMPDEST DUP3 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD40 SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD54 DUP4 DUP4 DUP4 PUSH2 0x1B23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP4 PUSH2 0xFBE JUMP JUMPDEST DUP3 LT PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA6 SWAP1 PUSH2 0x4407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE23 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x156B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE30 PUSH2 0x1204 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH2 0xABE JUMP JUMPDEST DUP3 LT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x45A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xFB5 JUMPI POP PUSH2 0xFB4 PUSH2 0x167F JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP1 PUSH2 0x44E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x107E PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x1088 PUSH1 0x0 PUSH2 0x1E08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10C5 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH2 0x1094 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA5B23000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1181 SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11AD SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0CF055400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1255 PUSH2 0x167F JUMP JUMPDEST PUSH2 0x128B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E628EBC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x137C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x3BFA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D83BDD6DB199FF596CEC09EA8E4F4E50DA2DCB4020BC2A1CF072C507056B1EA DUP2 PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1401 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 DUP3 PUSH2 0x146B SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST GT ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH32 0x0 PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x47EA JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x153E JUMPI PUSH2 0x152B CALLER DUP3 DUP5 PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1536 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x150F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1555 PUSH2 0x154E PUSH2 0x197F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1EEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1561 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x157C PUSH2 0x1576 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B2 SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15C7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2057 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x160A DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9430A17E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x164C DUP5 PUSH2 0x211F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x165C DUP4 DUP4 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1669 DUP3 PUSH2 0x28A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1674 DUP2 PUSH2 0x293C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD PUSH2 0x168D PUSH2 0xABE JUMP JUMPDEST PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD GT DUP1 ISZERO PUSH2 0x16C1 JUMPI POP PUSH1 0xC SLOAD DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x16CB JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD GT DUP1 ISZERO PUSH2 0x16EC JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x16EA SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 DUP1 PUSH2 0x16FF JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CC PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1833 SWAP1 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x1E08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x191D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x192D JUMPI POP PUSH2 0x192C DUP3 PUSH2 0x298C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193D DUP2 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1973 SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19FA DUP4 PUSH2 0xEDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A7D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A9A DUP4 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1ADC JUMPI POP PUSH2 0x1ADB DUP2 DUP6 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B1A JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B02 DUP5 PUSH2 0x960 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B43 DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B90 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP1 PUSH2 0x44A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C14 DUP4 DUP4 DUP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH2 0x1C1F PUSH1 0x0 DUP3 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D85 DUP4 DUP4 DUP4 PUSH2 0x2C08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D92 PUSH2 0x197F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB0 PUSH2 0x1094 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFD SWAP1 PUSH2 0x4547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EE6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F50 SWAP1 PUSH2 0x44C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x204A SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2062 DUP5 DUP5 DUP5 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x206E DUP5 DUP5 DUP5 DUP5 PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0x20AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A4 SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x226D JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x216C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x21D7 JUMPI POP PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x225A JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2216 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x223A SWAP3 SWAP2 SWAP1 PUSH2 0x4602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2265 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2125 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x227D PUSH2 0x36B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x62 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5216 PUSH1 0x62 SWAP2 CODECOPY DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x22D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP3 ISZERO PUSH2 0x2636 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5189 PUSH1 0x8D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2331 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x2341 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C DUP7 PUSH2 0x2DFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 PUSH2 0x2394 DUP4 PUSH1 0xB DUP5 PUSH2 0x2370 SWAP2 SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x1 DUP7 PUSH2 0x2382 SWAP2 SWAP1 PUSH2 0x4782 JUMP JUMPDEST PUSH2 0x238C SWAP2 SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xACB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23A7 SWAP2 SWAP1 PUSH2 0x41EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP4 PUSH1 0xFF AND PUSH1 0x7 DUP2 LT PUSH2 0x23F2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x2406 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2351 JUMP JUMPDEST POP DUP2 PUSH1 0x0 PUSH1 0x7 DUP2 LT PUSH2 0x2449 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x7 DUP2 LT PUSH2 0x2488 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x2 PUSH1 0x7 DUP2 LT PUSH2 0x24C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x3 PUSH1 0x7 DUP2 LT PUSH2 0x2506 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x4 PUSH1 0x7 DUP2 LT PUSH2 0x2545 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x5 PUSH1 0x7 DUP2 LT PUSH2 0x2584 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x6 PUSH1 0x7 DUP2 LT PUSH2 0x25C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25DE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2627 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP POP PUSH2 0x270A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x52B8 PUSH1 0x9D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2689 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2701 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3C2F746578743E3C2F7376673E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x277A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x27BC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x27FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x283A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2891 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x414C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x290F DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28FB SWAP2 SWAP1 PUSH2 0x4111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2FAC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2924 SWAP3 SWAP2 SWAP1 PUSH2 0x4128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2966 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2952 SWAP2 SWAP1 PUSH2 0x421C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2976 SWAP2 SWAP1 PUSH2 0x4280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A00 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x2A13 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2A24 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA39D9410ABE7578BFBF71501989F175C50A6950B6595718DD8092474541C889B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AE6 SWAP3 SWAP2 SWAP1 PUSH2 0x4602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x2AFF DUP4 DUP4 DUP4 PUSH2 0x3136 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B42 JUMPI PUSH2 0x2B3D DUP2 PUSH2 0x313B JUMP JUMPDEST PUSH2 0x2B81 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B80 JUMPI PUSH2 0x2B7F DUP4 DUP3 PUSH2 0x3184 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BC4 JUMPI PUSH2 0x2BBF DUP2 PUSH2 0x32F1 JUMP JUMPDEST PUSH2 0x2C03 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C02 JUMPI PUSH2 0x2C01 DUP3 DUP3 PUSH2 0x3434 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C17 DUP4 DUP4 PUSH2 0x34B3 JUMP JUMPDEST PUSH2 0x2C24 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0x2C63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5A SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C89 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x368D JUMP JUMPDEST ISZERO PUSH2 0x2DF2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2CB2 PUSH2 0x197F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2D1F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1C SWAP2 SWAP1 PUSH2 0x3AFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2DA2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D4F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D91 SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2E47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x2E79 JUMPI DUP1 DUP1 PUSH2 0x2E62 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x2E72 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EBB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EED JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x2FA0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x2F06 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x2F15 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2F21 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F5D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2F99 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST SWAP5 POP PUSH2 0x2EF1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x3131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5278 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x2FFE SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH2 0x3008 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x3014 SWAP2 SWAP1 PUSH2 0x47EA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3053 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3085 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x30F1 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x3096 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x310D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3120 JUMPI PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3191 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3280 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x3305 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x335B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x33A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x3418 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343F DUP4 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3523 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351A SWAP1 PUSH2 0x4527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352C DUP2 PUSH2 0x20B3 JUMP JUMPDEST ISZERO PUSH2 0x356C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3563 SWAP1 PUSH2 0x4487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3578 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x35C8 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3689 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2C08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x36BF JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x36E6 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3711 PUSH2 0x370C DUP5 PUSH2 0x4650 JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3760 JUMPI DUP2 PUSH2 0x3746 DUP9 DUP3 PUSH2 0x3902 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3733 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377D PUSH2 0x3778 DUP5 PUSH2 0x467C JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37A0 DUP5 DUP3 DUP6 PUSH2 0x4970 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37BB PUSH2 0x37B6 DUP5 PUSH2 0x46AD JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x37D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37DE DUP5 DUP3 DUP6 PUSH2 0x4970 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F5 DUP2 PUSH2 0x512C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x380C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x381C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x36FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3834 DUP2 PUSH2 0x5143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3849 DUP2 PUSH2 0x515A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x385E DUP2 PUSH2 0x515A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x388F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x38A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x376A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3911 DUP2 PUSH2 0x5171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3926 DUP2 PUSH2 0x5171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x394C DUP5 DUP3 DUP6 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3976 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3987 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39B4 DUP7 DUP3 DUP8 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x39C5 DUP7 DUP3 DUP8 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x39D6 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A04 DUP8 DUP3 DUP9 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A15 DUP8 DUP3 DUP9 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A26 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A4F DUP8 DUP3 DUP9 ADD PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7C DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A8D DUP6 DUP3 DUP7 ADD PUSH2 0x3825 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AB8 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3AC9 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AF3 DUP5 DUP3 DUP6 ADD PUSH2 0x383A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B1C DUP5 DUP3 DUP6 ADD PUSH2 0x384F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B5E DUP6 DUP3 DUP7 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BA5 DUP7 DUP3 DUP8 ADD PUSH2 0x38D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BB6 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BF1 DUP5 DUP3 DUP6 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C1A DUP5 DUP3 DUP6 ADD PUSH2 0x3917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C44 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C6D DUP6 DUP3 DUP7 ADD PUSH2 0x37FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C80 DUP2 PUSH2 0x48B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C8F DUP2 PUSH2 0x48C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C9E DUP2 PUSH2 0x48D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAF DUP3 PUSH2 0x46DE JUMP JUMPDEST PUSH2 0x3CB9 DUP2 DUP6 PUSH2 0x46F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST PUSH2 0x3CD2 DUP2 PUSH2 0x4B75 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE8 DUP3 PUSH2 0x46E9 JUMP JUMPDEST PUSH2 0x3CF2 DUP2 DUP6 PUSH2 0x4710 JUMP JUMPDEST SWAP4 POP PUSH2 0x3D02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST PUSH2 0x3D0B DUP2 PUSH2 0x4B75 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP3 PUSH2 0x46E9 JUMP JUMPDEST PUSH2 0x3D2B DUP2 DUP6 PUSH2 0x4721 JUMP JUMPDEST SWAP4 POP PUSH2 0x3D3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 PUSH1 0x2B DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D5F DUP3 PUSH2 0x4B86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D77 PUSH1 0x32 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D82 DUP3 PUSH2 0x4BD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D9A PUSH1 0x26 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DA5 DUP3 PUSH2 0x4C24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD PUSH1 0x25 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC8 DUP3 PUSH2 0x4C73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE0 PUSH1 0x1C DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DEB DUP3 PUSH2 0x4CC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E03 PUSH1 0x8 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E0E DUP3 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E26 PUSH1 0xE DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E31 DUP3 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E49 PUSH1 0x24 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E54 DUP3 PUSH2 0x4D3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6C PUSH1 0x19 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E77 DUP3 PUSH2 0x4D8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8F PUSH1 0x11 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E9A DUP3 PUSH2 0x4DB5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB2 PUSH1 0x29 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EBD DUP3 PUSH2 0x4DDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED5 PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE0 DUP3 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF8 PUSH1 0x25 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F03 DUP3 PUSH2 0x4E56 JUMP JUMPDEST PUSH1 0x25 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1B PUSH1 0x9 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F26 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3E PUSH1 0x3E DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F49 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F61 PUSH1 0x20 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6C DUP3 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F84 PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F8F DUP3 PUSH2 0x4F46 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 PUSH1 0x16 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB2 DUP3 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FCA PUSH1 0x20 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD5 DUP3 PUSH2 0x4F98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FED PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FF8 DUP3 PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4010 PUSH1 0x18 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x401B DUP3 PUSH2 0x4FEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4033 PUSH1 0x21 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x403E DUP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4056 PUSH1 0x1D DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x4061 DUP3 PUSH2 0x5062 JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4079 PUSH1 0x0 DUP4 PUSH2 0x4705 JUMP JUMPDEST SWAP2 POP PUSH2 0x4084 DUP3 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409C PUSH1 0x2C DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A7 DUP3 PUSH2 0x508E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40BF PUSH1 0x2E DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x40CA DUP3 PUSH2 0x50DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40DE DUP2 PUSH2 0x4907 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40ED DUP2 PUSH2 0x4935 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40FC DUP2 PUSH2 0x493F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x410B DUP2 PUSH2 0x494F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411D DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4134 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4140 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4158 DUP3 DUP8 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4164 DUP3 DUP7 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4170 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x417C DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4196 DUP3 DUP11 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41A2 DUP3 DUP10 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41AE DUP3 DUP9 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41BA DUP3 DUP8 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41C6 DUP3 DUP7 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D2 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41DE DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41FA DUP3 PUSH2 0x3F9A JUMP JUMPDEST SWAP2 POP PUSH2 0x4206 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4211 DUP3 PUSH2 0x3DF6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4227 DUP3 PUSH2 0x3FE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4232 DUP3 PUSH2 0x3E19 JUMP JUMPDEST SWAP2 POP PUSH2 0x423D DUP3 PUSH2 0x3EEB JUMP JUMPDEST SWAP2 POP PUSH2 0x4248 DUP3 PUSH2 0x3E82 JUMP JUMPDEST SWAP2 POP PUSH2 0x4253 DUP3 PUSH2 0x3F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x425F DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x426A DUP3 PUSH2 0x3EC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4275 DUP3 PUSH2 0x3F77 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428B DUP3 PUSH2 0x4049 JUMP JUMPDEST SWAP2 POP PUSH2 0x4297 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AD DUP3 PUSH2 0x406C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42E7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x42F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4310 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x431D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x432A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x433C DUP2 DUP5 PUSH2 0x3CA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x435C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4377 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C86 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4389 DUP2 DUP5 PUSH2 0x3CA4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43A7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3C95 JUMP JUMPDEST PUSH2 0x43B4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x40D5 JUMP JUMPDEST PUSH2 0x43CE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40F3 JUMP JUMPDEST PUSH2 0x43DB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43FF DUP2 DUP5 PUSH2 0x3CDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4420 DUP2 PUSH2 0x3D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4440 DUP2 PUSH2 0x3D6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4460 DUP2 PUSH2 0x3D8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4480 DUP2 PUSH2 0x3DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44A0 DUP2 PUSH2 0x3DD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44C0 DUP2 PUSH2 0x3E3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44E0 DUP2 PUSH2 0x3E5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4500 DUP2 PUSH2 0x3EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4520 DUP2 PUSH2 0x3F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4540 DUP2 PUSH2 0x3F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4560 DUP2 PUSH2 0x3FBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4580 DUP2 PUSH2 0x4003 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45A0 DUP2 PUSH2 0x4026 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C0 DUP2 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45E0 DUP2 PUSH2 0x40B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4617 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x4624 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4635 PUSH2 0x4646 JUMP JUMPDEST SWAP1 POP PUSH2 0x4641 DUP3 DUP3 PUSH2 0x49E4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x466B JUMPI PUSH2 0x466A PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4697 JUMPI PUSH2 0x4696 PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH2 0x46A0 DUP3 PUSH2 0x4B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x46C8 JUMPI PUSH2 0x46C7 PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH2 0x46D1 DUP3 PUSH2 0x4B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4737 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4742 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4777 JUMPI PUSH2 0x4776 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478D DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH2 0x4798 DUP4 PUSH2 0x4963 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x47AE JUMPI PUSH2 0x47AD PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C4 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x47CF DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x47DF JUMPI PUSH2 0x47DE PUSH2 0x4AE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F5 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4800 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4839 JUMPI PUSH2 0x4838 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484F DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH2 0x485A DUP4 PUSH2 0x4963 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4874 JUMPI PUSH2 0x4873 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488A DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4895 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x48A8 JUMPI PUSH2 0x48A7 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BE DUP3 PUSH2 0x4915 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x499D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4982 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x49AC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x49CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x49DE JUMPI PUSH2 0x49DD PUSH2 0x4B17 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49ED DUP3 PUSH2 0x4B75 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4A0C JUMPI PUSH2 0x4A0B PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A20 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4A53 JUMPI PUSH2 0x4A52 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A69 DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x4A7D JUMPI PUSH2 0x4A7C PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A93 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9E DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4AAE JUMPI PUSH2 0x4AAD PUSH2 0x4AE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C2F747370616E3E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226E616D65223A224E4654222C20000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A22222C20000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2242617463682D72657665616C6564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5421222C20000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x22696D616765223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C747370616E20783D223132222064793D223438223E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5135 DUP2 PUSH2 0x48B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x514C DUP2 PUSH2 0x48C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5163 DUP2 PUSH2 0x48DB JUMP JUMPDEST DUP2 EQ PUSH2 0x516E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x517A DUP2 PUSH2 0x4935 JUMP JUMPDEST DUP2 EQ PUSH2 0x5185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID EXTCODECOPY PUSH20 0x74796C653E2E62617365207B2066696C6C3A2077 PUSH9 0x6974653B20666F6E74 0x2D PUSH7 0x616D696C793A20 PUSH20 0x657269663B20666F6E742D73697A653A20353470 PUSH25 0x3B207D3C2F7374796C653E3C726563742077696474683D2231 ADDRESS ADDRESS 0x25 0x22 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420636C6173733D2262617365223E3C737667 KECCAK256 PUSH25 0x6D6C6E733D22687474703A2F2F7777772E77332E6F72672F32 ADDRESS ADDRESS ADDRESS 0x2F PUSH20 0x7667222070726573657276654173706563745261 PUSH21 0x696F3D22784D696E594D696E206D65657422207669 PUSH6 0x77426F783D22 ADDRESS KECCAK256 ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS 0x22 RETURNDATACOPY COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x2E PUSH3 0x617365 KECCAK256 PUSH28 0x2066696C6C3A2077686974653B20666F6E742D66616D696C793A2073 PUSH6 0x7269663B2066 PUSH16 0x6E742D73697A653A2033353070783B20 PUSH30 0x3C2F7374796C653E3C726563742077696474683D22313030252220686569 PUSH8 0x68743D2231303025 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420783D2239302220793D223239352220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH3 0x617365 0x22 RETURNDATACOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xEF RETURNDATASIZE LOG1 DELEGATECALL 0x49 MLOAD SWAP16 SSTORE 0xBB PC MLOAD LOG3 0xF 0x2A DUP15 EXP DUP2 0x4A PUSH26 0x6239050EA9D5C3D0B5ADDD6C64736F6C63430008040033000000 ","sourceMap":"527:10606:19:-:0;;;1072:15;1039:48;;1924:773;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2301:17;2267:5;2274:7;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1464:5:6;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;5616:15:2;5599:32;;;;;;;;;;;;5556:80;2343:10:19::2;2330:23;;;;::::0;::::2;2375:9;2363:21;;;;::::0;::::2;2441:17;2394:65;;;;;;;;;;::::0;::::2;2491:18;2469:40;;;;;;;;;;::::0;::::2;2534:11;2519:26;;;;::::0;::::2;2580:20;2555:45;;;;;;;;;;::::0;::::2;2630:16;2610:17;:36;;;;2675:15;2656:16;:34;;;;1924:773:::0;;;;;;;;;;527:10606;;640:96:14;693:7;719:10;712:17;;640:96;:::o;2433:187:5:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;527:10606:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:20:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:143::-;424:5;455:6;449:13;440:22;;471:33;498:5;471:33;:::i;:::-;430:80;;;;:::o;516:143::-;573:5;604:6;598:13;589:22;;620:33;647:5;620:33;:::i;:::-;579:80;;;;:::o;679:288::-;746:5;795:3;788:4;780:6;776:17;772:27;762:2;;813:1;810;803:12;762:2;846:6;840:13;871:90;957:3;949:6;942:4;934:6;930:17;871:90;:::i;:::-;862:99;;752:215;;;;;:::o;973:143::-;1030:5;1061:6;1055:13;1046:22;;1077:33;1104:5;1077:33;:::i;:::-;1036:80;;;;:::o;1122:141::-;1178:5;1209:6;1203:13;1194:22;;1225:32;1251:5;1225:32;:::i;:::-;1184:79;;;;:::o;1269:141::-;1325:5;1356:6;1350:13;1341:22;;1372:32;1398:5;1372:32;:::i;:::-;1331:79;;;;:::o;1416:1903::-;1585:6;1593;1601;1609;1617;1625;1633;1641;1649;1657;1706:3;1694:9;1685:7;1681:23;1677:33;1674:2;;;1723:1;1720;1713:12;1674:2;1787:1;1776:9;1772:17;1766:24;1817:18;1809:6;1806:30;1803:2;;;1849:1;1846;1839:12;1803:2;1877:74;1943:7;1934:6;1923:9;1919:22;1877:74;:::i;:::-;1867:84;;1737:224;2021:2;2010:9;2006:18;2000:25;2052:18;2044:6;2041:30;2038:2;;;2084:1;2081;2074:12;2038:2;2112:74;2178:7;2169:6;2158:9;2154:22;2112:74;:::i;:::-;2102:84;;1971:225;2235:2;2261:64;2317:7;2308:6;2297:9;2293:22;2261:64;:::i;:::-;2251:74;;2206:129;2374:2;2400:64;2456:7;2447:6;2436:9;2432:22;2400:64;:::i;:::-;2390:74;;2345:129;2513:3;2540:64;2596:7;2587:6;2576:9;2572:22;2540:64;:::i;:::-;2530:74;;2484:130;2653:3;2680:64;2736:7;2727:6;2716:9;2712:22;2680:64;:::i;:::-;2670:74;;2624:130;2793:3;2820:64;2876:7;2867:6;2856:9;2852:22;2820:64;:::i;:::-;2810:74;;2764:130;2933:3;2960:63;3015:7;3006:6;2995:9;2991:22;2960:63;:::i;:::-;2950:73;;2904:129;3072:3;3099:64;3155:7;3146:6;3135:9;3131:22;3099:64;:::i;:::-;3089:74;;3043:130;3212:3;3239:63;3294:7;3285:6;3274:9;3270:22;3239:63;:::i;:::-;3229:73;;3183:129;1664:1655;;;;;;;;;;;;;:::o;3325:129::-;3359:6;3386:20;;:::i;:::-;3376:30;;3415:33;3443:4;3435:6;3415:33;:::i;:::-;3366:88;;;:::o;3460:75::-;3493:6;3526:2;3520:9;3510:19;;3500:35;:::o;3541:308::-;3603:4;3693:18;3685:6;3682:30;3679:2;;;3715:18;;:::i;:::-;3679:2;3753:29;3775:6;3753:29;:::i;:::-;3745:37;;3837:4;3831;3827:15;3819:23;;3608:241;;;:::o;3855:96::-;3892:7;3921:24;3939:5;3921:24;:::i;:::-;3910:35;;3900:51;;;:::o;3957:77::-;3994:7;4023:5;4012:16;;4002:32;;;:::o;4040:126::-;4077:7;4117:42;4110:5;4106:54;4095:65;;4085:81;;;:::o;4172:77::-;4209:7;4238:5;4227:16;;4217:32;;;:::o;4255:93::-;4291:7;4331:10;4324:5;4320:22;4309:33;;4299:49;;;:::o;4354:101::-;4390:7;4430:18;4423:5;4419:30;4408:41;;4398:57;;;:::o;4461:307::-;4529:1;4539:113;4553:6;4550:1;4547:13;4539:113;;;4638:1;4633:3;4629:11;4623:18;4619:1;4614:3;4610:11;4603:39;4575:2;4572:1;4568:10;4563:15;;4539:113;;;4670:6;4667:1;4664:13;4661:2;;;4750:1;4741:6;4736:3;4732:16;4725:27;4661:2;4510:258;;;;:::o;4774:320::-;4818:6;4855:1;4849:4;4845:12;4835:22;;4902:1;4896:4;4892:12;4923:18;4913:2;;4979:4;4971:6;4967:17;4957:27;;4913:2;5041;5033:6;5030:14;5010:18;5007:38;5004:2;;;5060:18;;:::i;:::-;5004:2;4825:269;;;;:::o;5100:281::-;5183:27;5205:4;5183:27;:::i;:::-;5175:6;5171:40;5313:6;5301:10;5298:22;5277:18;5265:10;5262:34;5259:62;5256:2;;;5324:18;;:::i;:::-;5256:2;5364:10;5360:2;5353:22;5143:238;;;:::o;5387:180::-;5435:77;5432:1;5425:88;5532:4;5529:1;5522:15;5556:4;5553:1;5546:15;5573:180;5621:77;5618:1;5611:88;5718:4;5715:1;5708:15;5742:4;5739:1;5732:15;5759:102;5800:6;5851:2;5847:7;5842:2;5835:5;5831:14;5827:28;5817:38;;5807:54;;;:::o;5867:122::-;5940:24;5958:5;5940:24;:::i;:::-;5933:5;5930:35;5920:2;;5979:1;5976;5969:12;5920:2;5910:79;:::o;5995:122::-;6068:24;6086:5;6068:24;:::i;:::-;6061:5;6058:35;6048:2;;6107:1;6104;6097:12;6048:2;6038:79;:::o;6123:122::-;6196:24;6214:5;6196:24;:::i;:::-;6189:5;6186:35;6176:2;;6235:1;6232;6225:12;6176:2;6166:79;:::o;6251:120::-;6323:23;6340:5;6323:23;:::i;:::-;6316:5;6313:34;6303:2;;6361:1;6358;6351:12;6303:2;6293:78;:::o;6377:120::-;6449:23;6466:5;6449:23;:::i;:::-;6442:5;6439:34;6429:2;;6487:1;6484;6477:12;6429:2;6419:78;:::o;527:10606:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50663:20","statements":[{"body":{"nodeType":"YulBlock","src":"126:553:20","statements":[{"nodeType":"YulAssignment","src":"136:90:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:20"},"nodeType":"YulFunctionCall","src":"161:64:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:20"},"nodeType":"YulFunctionCall","src":"145:81:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:20"},"nodeType":"YulFunctionCall","src":"261:21:20"},"nodeType":"YulExpressionStatement","src":"261:21:20"},{"nodeType":"YulAssignment","src":"291:23:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:20"},"nodeType":"YulFunctionCall","src":"298:16:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:36:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"411:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"404:6:20"},"nodeType":"YulFunctionCall","src":"404:12:20"},"nodeType":"YulExpressionStatement","src":"404:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:20"},"nodeType":"YulFunctionCall","src":"365:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:20"},"nodeType":"YulFunctionCall","src":"356:27:20"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:20"},"nodeType":"YulFunctionCall","src":"353:36:20"},"nodeType":"YulIf","src":"350:2:20"},{"body":{"nodeType":"YulBlock","src":"495:178:20","statements":[{"nodeType":"YulVariableDeclaration","src":"510:21:20","value":{"name":"src","nodeType":"YulIdentifier","src":"528:3:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"514:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"552:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"578:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"590:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"557:20:20"},"nodeType":"YulFunctionCall","src":"557:37:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"545:6:20"},"nodeType":"YulFunctionCall","src":"545:50:20"},"nodeType":"YulExpressionStatement","src":"545:50:20"},{"nodeType":"YulAssignment","src":"608:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"624:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"615:3:20"},"nodeType":"YulFunctionCall","src":"615:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"608:3:20"}]},{"nodeType":"YulAssignment","src":"642:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"653:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"658:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"649:3:20"},"nodeType":"YulFunctionCall","src":"649:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"642:3:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"457:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"460:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"454:2:20"},"nodeType":"YulFunctionCall","src":"454:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"468:18:20","statements":[{"nodeType":"YulAssignment","src":"470:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"479:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"482:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"475:3:20"},"nodeType":"YulFunctionCall","src":"475:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"470:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"439:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"441:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"450:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"445:1:20","type":""}]}]},"src":"435:238:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:20","type":""}],"src":"24:655:20"},{"body":{"nodeType":"YulBlock","src":"768:260:20","statements":[{"nodeType":"YulAssignment","src":"778:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"844:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"803:40:20"},"nodeType":"YulFunctionCall","src":"803:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"787:15:20"},"nodeType":"YulFunctionCall","src":"787:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"778:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"868:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"875:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:20"},"nodeType":"YulFunctionCall","src":"861:21:20"},"nodeType":"YulExpressionStatement","src":"861:21:20"},{"nodeType":"YulVariableDeclaration","src":"891:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"906:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"913:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:20"},"nodeType":"YulFunctionCall","src":"902:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"895:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"956:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"965:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"958:6:20"},"nodeType":"YulFunctionCall","src":"958:12:20"},"nodeType":"YulExpressionStatement","src":"958:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"937:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:20"},"nodeType":"YulFunctionCall","src":"933:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"951:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:20"},"nodeType":"YulFunctionCall","src":"930:25:20"},"nodeType":"YulIf","src":"927:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1005:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"1010:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1015:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"981:23:20"},"nodeType":"YulFunctionCall","src":"981:41:20"},"nodeType":"YulExpressionStatement","src":"981:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"741:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"746:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"754:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"762:5:20","type":""}],"src":"685:343:20"},{"body":{"nodeType":"YulBlock","src":"1118:261:20","statements":[{"nodeType":"YulAssignment","src":"1128:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1195:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1153:41:20"},"nodeType":"YulFunctionCall","src":"1153:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1137:15:20"},"nodeType":"YulFunctionCall","src":"1137:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1128:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1219:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"1226:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1212:6:20"},"nodeType":"YulFunctionCall","src":"1212:21:20"},"nodeType":"YulExpressionStatement","src":"1212:21:20"},{"nodeType":"YulVariableDeclaration","src":"1242:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1257:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1264:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1253:3:20"},"nodeType":"YulFunctionCall","src":"1253:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1246:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1307:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1316:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1319:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1309:6:20"},"nodeType":"YulFunctionCall","src":"1309:12:20"},"nodeType":"YulExpressionStatement","src":"1309:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1288:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1293:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1284:3:20"},"nodeType":"YulFunctionCall","src":"1284:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"1302:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1281:2:20"},"nodeType":"YulFunctionCall","src":"1281:25:20"},"nodeType":"YulIf","src":"1278:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1356:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"1361:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1366:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1332:23:20"},"nodeType":"YulFunctionCall","src":"1332:41:20"},"nodeType":"YulExpressionStatement","src":"1332:41:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1091:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1096:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1104:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1112:5:20","type":""}],"src":"1034:345:20"},{"body":{"nodeType":"YulBlock","src":"1437:87:20","statements":[{"nodeType":"YulAssignment","src":"1447:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1469:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1456:12:20"},"nodeType":"YulFunctionCall","src":"1456:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1512:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1485:26:20"},"nodeType":"YulFunctionCall","src":"1485:33:20"},"nodeType":"YulExpressionStatement","src":"1485:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1415:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1423:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1431:5:20","type":""}],"src":"1385:139:20"},{"body":{"nodeType":"YulBlock","src":"1624:226:20","statements":[{"body":{"nodeType":"YulBlock","src":"1673:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1685:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1675:6:20"},"nodeType":"YulFunctionCall","src":"1675:12:20"},"nodeType":"YulExpressionStatement","src":"1675:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1652:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1660:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:20"},"nodeType":"YulFunctionCall","src":"1648:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1667:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1644:3:20"},"nodeType":"YulFunctionCall","src":"1644:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1637:6:20"},"nodeType":"YulFunctionCall","src":"1637:35:20"},"nodeType":"YulIf","src":"1634:2:20"},{"nodeType":"YulVariableDeclaration","src":"1698:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1725:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1712:12:20"},"nodeType":"YulFunctionCall","src":"1712:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1702:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1741:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1825:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1813:3:20"},"nodeType":"YulFunctionCall","src":"1813:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"1832:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"1840:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:62:20"},"nodeType":"YulFunctionCall","src":"1750:94:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1741:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1602:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1610:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1618:5:20","type":""}],"src":"1547:303:20"},{"body":{"nodeType":"YulBlock","src":"1905:84:20","statements":[{"nodeType":"YulAssignment","src":"1915:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1937:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1924:12:20"},"nodeType":"YulFunctionCall","src":"1924:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1915:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1977:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1953:23:20"},"nodeType":"YulFunctionCall","src":"1953:30:20"},"nodeType":"YulExpressionStatement","src":"1953:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1883:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1891:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1899:5:20","type":""}],"src":"1856:133:20"},{"body":{"nodeType":"YulBlock","src":"2046:86:20","statements":[{"nodeType":"YulAssignment","src":"2056:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2078:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2065:12:20"},"nodeType":"YulFunctionCall","src":"2065:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2056:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2120:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2094:25:20"},"nodeType":"YulFunctionCall","src":"2094:32:20"},"nodeType":"YulExpressionStatement","src":"2094:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2024:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2032:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2040:5:20","type":""}],"src":"1995:137:20"},{"body":{"nodeType":"YulBlock","src":"2200:79:20","statements":[{"nodeType":"YulAssignment","src":"2210:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2225:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2219:5:20"},"nodeType":"YulFunctionCall","src":"2219:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2210:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2267:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2241:25:20"},"nodeType":"YulFunctionCall","src":"2241:32:20"},"nodeType":"YulExpressionStatement","src":"2241:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2178:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2186:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2194:5:20","type":""}],"src":"2138:141:20"},{"body":{"nodeType":"YulBlock","src":"2372:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"2421:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2433:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2423:6:20"},"nodeType":"YulFunctionCall","src":"2423:12:20"},"nodeType":"YulExpressionStatement","src":"2423:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2400:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:20"},"nodeType":"YulFunctionCall","src":"2396:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2415:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2392:3:20"},"nodeType":"YulFunctionCall","src":"2392:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2385:6:20"},"nodeType":"YulFunctionCall","src":"2385:35:20"},"nodeType":"YulIf","src":"2382:2:20"},{"nodeType":"YulAssignment","src":"2446:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2469:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2456:12:20"},"nodeType":"YulFunctionCall","src":"2456:20:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2446:6:20"}]},{"body":{"nodeType":"YulBlock","src":"2519:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2528:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2531:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2521:6:20"},"nodeType":"YulFunctionCall","src":"2521:12:20"},"nodeType":"YulExpressionStatement","src":"2521:12:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2491:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2499:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2488:2:20"},"nodeType":"YulFunctionCall","src":"2488:30:20"},"nodeType":"YulIf","src":"2485:2:20"},{"nodeType":"YulAssignment","src":"2544:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2560:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2568:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2556:3:20"},"nodeType":"YulFunctionCall","src":"2556:17:20"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2544:8:20"}]},{"body":{"nodeType":"YulBlock","src":"2627:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:20"},"nodeType":"YulFunctionCall","src":"2629:12:20"},"nodeType":"YulExpressionStatement","src":"2629:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2592:8:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2614:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2602:3:20"},"nodeType":"YulFunctionCall","src":"2602:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:20"},"nodeType":"YulFunctionCall","src":"2588:32:20"},{"name":"end","nodeType":"YulIdentifier","src":"2622:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2585:2:20"},"nodeType":"YulFunctionCall","src":"2585:41:20"},"nodeType":"YulIf","src":"2582:2:20"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2355:8:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2365:6:20","type":""}],"src":"2298:351:20"},{"body":{"nodeType":"YulBlock","src":"2729:210:20","statements":[{"body":{"nodeType":"YulBlock","src":"2778:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2787:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2790:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2780:6:20"},"nodeType":"YulFunctionCall","src":"2780:12:20"},"nodeType":"YulExpressionStatement","src":"2780:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2757:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2765:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:20"},"nodeType":"YulFunctionCall","src":"2753:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2772:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2749:3:20"},"nodeType":"YulFunctionCall","src":"2749:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2742:6:20"},"nodeType":"YulFunctionCall","src":"2742:35:20"},"nodeType":"YulIf","src":"2739:2:20"},{"nodeType":"YulVariableDeclaration","src":"2803:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:20"},"nodeType":"YulFunctionCall","src":"2817:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2807:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2846:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2906:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:20"},"nodeType":"YulFunctionCall","src":"2902:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"2921:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"2929:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2855:46:20"},"nodeType":"YulFunctionCall","src":"2855:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2846:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2707:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2715:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2723:5:20","type":""}],"src":"2668:271:20"},{"body":{"nodeType":"YulBlock","src":"3021:211:20","statements":[{"body":{"nodeType":"YulBlock","src":"3070:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3079:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3082:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3072:6:20"},"nodeType":"YulFunctionCall","src":"3072:12:20"},"nodeType":"YulExpressionStatement","src":"3072:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3049:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3057:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3045:3:20"},"nodeType":"YulFunctionCall","src":"3045:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"3064:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3041:3:20"},"nodeType":"YulFunctionCall","src":"3041:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3034:6:20"},"nodeType":"YulFunctionCall","src":"3034:35:20"},"nodeType":"YulIf","src":"3031:2:20"},{"nodeType":"YulVariableDeclaration","src":"3095:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3122:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3109:12:20"},"nodeType":"YulFunctionCall","src":"3109:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3099:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3138:88:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3199:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3207:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:20"},"nodeType":"YulFunctionCall","src":"3195:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"3214:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"3222:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3147:47:20"},"nodeType":"YulFunctionCall","src":"3147:79:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3138:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2999:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3007:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3015:5:20","type":""}],"src":"2959:273:20"},{"body":{"nodeType":"YulBlock","src":"3290:87:20","statements":[{"nodeType":"YulAssignment","src":"3300:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3322:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3309:12:20"},"nodeType":"YulFunctionCall","src":"3309:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3300:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3365:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3338:26:20"},"nodeType":"YulFunctionCall","src":"3338:33:20"},"nodeType":"YulExpressionStatement","src":"3338:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3268:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3276:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3284:5:20","type":""}],"src":"3238:139:20"},{"body":{"nodeType":"YulBlock","src":"3446:80:20","statements":[{"nodeType":"YulAssignment","src":"3456:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3471:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3465:5:20"},"nodeType":"YulFunctionCall","src":"3465:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3456:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3514:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3487:26:20"},"nodeType":"YulFunctionCall","src":"3487:33:20"},"nodeType":"YulExpressionStatement","src":"3487:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3424:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3432:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3440:5:20","type":""}],"src":"3383:143:20"},{"body":{"nodeType":"YulBlock","src":"3598:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"3644:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3653:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3656:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3646:6:20"},"nodeType":"YulFunctionCall","src":"3646:12:20"},"nodeType":"YulExpressionStatement","src":"3646:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3619:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3628:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3615:3:20"},"nodeType":"YulFunctionCall","src":"3615:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3640:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3611:3:20"},"nodeType":"YulFunctionCall","src":"3611:32:20"},"nodeType":"YulIf","src":"3608:2:20"},{"nodeType":"YulBlock","src":"3670:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3685:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3699:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3689:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3714:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3749:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3760:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3745:3:20"},"nodeType":"YulFunctionCall","src":"3745:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3769:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3724:20:20"},"nodeType":"YulFunctionCall","src":"3724:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3714:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3568:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3579:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3591:6:20","type":""}],"src":"3532:262:20"},{"body":{"nodeType":"YulBlock","src":"3883:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"3929:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3938:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3941:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3931:6:20"},"nodeType":"YulFunctionCall","src":"3931:12:20"},"nodeType":"YulExpressionStatement","src":"3931:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3904:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3913:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3900:3:20"},"nodeType":"YulFunctionCall","src":"3900:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3925:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3896:3:20"},"nodeType":"YulFunctionCall","src":"3896:32:20"},"nodeType":"YulIf","src":"3893:2:20"},{"nodeType":"YulBlock","src":"3955:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3970:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3984:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3974:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3999:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4045:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4030:3:20"},"nodeType":"YulFunctionCall","src":"4030:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4054:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4009:20:20"},"nodeType":"YulFunctionCall","src":"4009:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3999:6:20"}]}]},{"nodeType":"YulBlock","src":"4082:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4097:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4111:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4101:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4127:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4173:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:20"},"nodeType":"YulFunctionCall","src":"4158:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4182:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4137:20:20"},"nodeType":"YulFunctionCall","src":"4137:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4127:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3845:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3856:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3868:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3876:6:20","type":""}],"src":"3800:407:20"},{"body":{"nodeType":"YulBlock","src":"4313:452:20","statements":[{"body":{"nodeType":"YulBlock","src":"4359:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4368:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4371:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4361:6:20"},"nodeType":"YulFunctionCall","src":"4361:12:20"},"nodeType":"YulExpressionStatement","src":"4361:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4334:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4343:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4330:3:20"},"nodeType":"YulFunctionCall","src":"4330:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4355:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4326:3:20"},"nodeType":"YulFunctionCall","src":"4326:32:20"},"nodeType":"YulIf","src":"4323:2:20"},{"nodeType":"YulBlock","src":"4385:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4400:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4414:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4404:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4429:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4464:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4475:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4460:3:20"},"nodeType":"YulFunctionCall","src":"4460:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4484:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4439:20:20"},"nodeType":"YulFunctionCall","src":"4439:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4429:6:20"}]}]},{"nodeType":"YulBlock","src":"4512:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4527:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4541:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4531:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4557:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4592:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4603:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4588:3:20"},"nodeType":"YulFunctionCall","src":"4588:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4612:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4567:20:20"},"nodeType":"YulFunctionCall","src":"4567:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4557:6:20"}]}]},{"nodeType":"YulBlock","src":"4640:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4655:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4669:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4659:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4685:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4720:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4731:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:20"},"nodeType":"YulFunctionCall","src":"4716:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4740:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4695:20:20"},"nodeType":"YulFunctionCall","src":"4695:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4685:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4267:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4278:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4290:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4298:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4306:6:20","type":""}],"src":"4213:552:20"},{"body":{"nodeType":"YulBlock","src":"4897:683:20","statements":[{"body":{"nodeType":"YulBlock","src":"4944:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4953:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4956:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4946:6:20"},"nodeType":"YulFunctionCall","src":"4946:12:20"},"nodeType":"YulExpressionStatement","src":"4946:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4918:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4914:3:20"},"nodeType":"YulFunctionCall","src":"4914:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4939:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4910:3:20"},"nodeType":"YulFunctionCall","src":"4910:33:20"},"nodeType":"YulIf","src":"4907:2:20"},{"nodeType":"YulBlock","src":"4970:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4985:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4999:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4989:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5014:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5060:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5045:3:20"},"nodeType":"YulFunctionCall","src":"5045:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5069:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5024:20:20"},"nodeType":"YulFunctionCall","src":"5024:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5014:6:20"}]}]},{"nodeType":"YulBlock","src":"5097:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5112:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5126:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5116:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5142:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5177:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5188:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5173:3:20"},"nodeType":"YulFunctionCall","src":"5173:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5197:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5152:20:20"},"nodeType":"YulFunctionCall","src":"5152:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5142:6:20"}]}]},{"nodeType":"YulBlock","src":"5225:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5240:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5254:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5244:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5270:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5305:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5316:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:20"},"nodeType":"YulFunctionCall","src":"5301:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5325:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5280:20:20"},"nodeType":"YulFunctionCall","src":"5280:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5270:6:20"}]}]},{"nodeType":"YulBlock","src":"5353:220:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5368:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5399:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5410:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:20"},"nodeType":"YulFunctionCall","src":"5395:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5382:12:20"},"nodeType":"YulFunctionCall","src":"5382:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5372:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5461:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5470:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5473:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5463:6:20"},"nodeType":"YulFunctionCall","src":"5463:12:20"},"nodeType":"YulExpressionStatement","src":"5463:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5433:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5441:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5430:2:20"},"nodeType":"YulFunctionCall","src":"5430:30:20"},"nodeType":"YulIf","src":"5427:2:20"},{"nodeType":"YulAssignment","src":"5491:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5535:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5546:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5531:3:20"},"nodeType":"YulFunctionCall","src":"5531:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5555:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5501:29:20"},"nodeType":"YulFunctionCall","src":"5501:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5491:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4843:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4854:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4866:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4874:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4882:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4890:6:20","type":""}],"src":"4771:809:20"},{"body":{"nodeType":"YulBlock","src":"5666:321:20","statements":[{"body":{"nodeType":"YulBlock","src":"5712:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5721:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5724:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5714:6:20"},"nodeType":"YulFunctionCall","src":"5714:12:20"},"nodeType":"YulExpressionStatement","src":"5714:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5687:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5696:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5683:3:20"},"nodeType":"YulFunctionCall","src":"5683:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5708:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5679:3:20"},"nodeType":"YulFunctionCall","src":"5679:32:20"},"nodeType":"YulIf","src":"5676:2:20"},{"nodeType":"YulBlock","src":"5738:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5753:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5767:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5757:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5782:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5828:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:20"},"nodeType":"YulFunctionCall","src":"5813:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5837:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5792:20:20"},"nodeType":"YulFunctionCall","src":"5792:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5782:6:20"}]}]},{"nodeType":"YulBlock","src":"5865:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5880:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5894:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5884:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5910:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5942:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5953:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5938:3:20"},"nodeType":"YulFunctionCall","src":"5938:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5962:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5920:17:20"},"nodeType":"YulFunctionCall","src":"5920:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5910:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5628:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5639:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5651:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5659:6:20","type":""}],"src":"5586:401:20"},{"body":{"nodeType":"YulBlock","src":"6076:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"6122:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6131:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6134:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6124:6:20"},"nodeType":"YulFunctionCall","src":"6124:12:20"},"nodeType":"YulExpressionStatement","src":"6124:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6097:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6106:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6093:3:20"},"nodeType":"YulFunctionCall","src":"6093:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6118:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6089:3:20"},"nodeType":"YulFunctionCall","src":"6089:32:20"},"nodeType":"YulIf","src":"6086:2:20"},{"nodeType":"YulBlock","src":"6148:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6163:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6177:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6167:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6192:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6227:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6238:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6223:3:20"},"nodeType":"YulFunctionCall","src":"6223:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6247:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6202:20:20"},"nodeType":"YulFunctionCall","src":"6202:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6192:6:20"}]}]},{"nodeType":"YulBlock","src":"6275:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6290:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6304:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6294:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6320:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6355:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6366:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6351:3:20"},"nodeType":"YulFunctionCall","src":"6351:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6375:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6330:20:20"},"nodeType":"YulFunctionCall","src":"6330:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6320:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6038:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6049:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6061:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6069:6:20","type":""}],"src":"5993:407:20"},{"body":{"nodeType":"YulBlock","src":"6471:195:20","statements":[{"body":{"nodeType":"YulBlock","src":"6517:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6526:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6529:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6519:6:20"},"nodeType":"YulFunctionCall","src":"6519:12:20"},"nodeType":"YulExpressionStatement","src":"6519:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6492:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6488:3:20"},"nodeType":"YulFunctionCall","src":"6488:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6513:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6484:3:20"},"nodeType":"YulFunctionCall","src":"6484:32:20"},"nodeType":"YulIf","src":"6481:2:20"},{"nodeType":"YulBlock","src":"6543:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6558:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6572:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6562:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6587:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6632:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6617:3:20"},"nodeType":"YulFunctionCall","src":"6617:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6641:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"6597:19:20"},"nodeType":"YulFunctionCall","src":"6597:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6587:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6441:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6452:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6464:6:20","type":""}],"src":"6406:260:20"},{"body":{"nodeType":"YulBlock","src":"6748:206:20","statements":[{"body":{"nodeType":"YulBlock","src":"6794:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6803:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6806:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6796:6:20"},"nodeType":"YulFunctionCall","src":"6796:12:20"},"nodeType":"YulExpressionStatement","src":"6796:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6769:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6778:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6765:3:20"},"nodeType":"YulFunctionCall","src":"6765:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6790:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6761:3:20"},"nodeType":"YulFunctionCall","src":"6761:32:20"},"nodeType":"YulIf","src":"6758:2:20"},{"nodeType":"YulBlock","src":"6820:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6835:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6839:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6864:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6909:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6920:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6905:3:20"},"nodeType":"YulFunctionCall","src":"6905:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6929:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"6874:30:20"},"nodeType":"YulFunctionCall","src":"6874:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6864:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6718:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6729:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6741:6:20","type":""}],"src":"6672:282:20"},{"body":{"nodeType":"YulBlock","src":"7045:308:20","statements":[{"body":{"nodeType":"YulBlock","src":"7091:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7100:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7103:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7093:6:20"},"nodeType":"YulFunctionCall","src":"7093:12:20"},"nodeType":"YulExpressionStatement","src":"7093:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7066:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7075:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7062:3:20"},"nodeType":"YulFunctionCall","src":"7062:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7087:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7058:3:20"},"nodeType":"YulFunctionCall","src":"7058:32:20"},"nodeType":"YulIf","src":"7055:2:20"},{"nodeType":"YulBlock","src":"7117:229:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7132:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7163:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7174:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7159:3:20"},"nodeType":"YulFunctionCall","src":"7159:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7146:12:20"},"nodeType":"YulFunctionCall","src":"7146:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7136:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7224:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7233:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7236:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7226:6:20"},"nodeType":"YulFunctionCall","src":"7226:12:20"},"nodeType":"YulExpressionStatement","src":"7226:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7196:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7204:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7193:2:20"},"nodeType":"YulFunctionCall","src":"7193:30:20"},"nodeType":"YulIf","src":"7190:2:20"},{"nodeType":"YulAssignment","src":"7254:82:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7308:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7319:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7304:3:20"},"nodeType":"YulFunctionCall","src":"7304:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7328:7:20"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7272:31:20"},"nodeType":"YulFunctionCall","src":"7272:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7254:6:20"},{"name":"value1","nodeType":"YulIdentifier","src":"7262:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7007:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7018:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7030:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7038:6:20","type":""}],"src":"6960:393:20"},{"body":{"nodeType":"YulBlock","src":"7469:555:20","statements":[{"body":{"nodeType":"YulBlock","src":"7515:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7524:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7527:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7517:6:20"},"nodeType":"YulFunctionCall","src":"7517:12:20"},"nodeType":"YulExpressionStatement","src":"7517:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7490:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7499:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7486:3:20"},"nodeType":"YulFunctionCall","src":"7486:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7511:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7482:3:20"},"nodeType":"YulFunctionCall","src":"7482:32:20"},"nodeType":"YulIf","src":"7479:2:20"},{"nodeType":"YulBlock","src":"7541:220:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7556:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7598:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:20"},"nodeType":"YulFunctionCall","src":"7583:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7570:12:20"},"nodeType":"YulFunctionCall","src":"7570:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7560:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7648:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7657:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7660:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7650:6:20"},"nodeType":"YulFunctionCall","src":"7650:12:20"},"nodeType":"YulExpressionStatement","src":"7650:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7620:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7628:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7617:2:20"},"nodeType":"YulFunctionCall","src":"7617:30:20"},"nodeType":"YulIf","src":"7614:2:20"},{"nodeType":"YulAssignment","src":"7678:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7723:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7734:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7719:3:20"},"nodeType":"YulFunctionCall","src":"7719:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7743:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7688:30:20"},"nodeType":"YulFunctionCall","src":"7688:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7678:6:20"}]}]},{"nodeType":"YulBlock","src":"7771:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7786:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7800:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7790:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7816:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7851:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7862:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7847:3:20"},"nodeType":"YulFunctionCall","src":"7847:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7871:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7826:20:20"},"nodeType":"YulFunctionCall","src":"7826:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7816:6:20"}]}]},{"nodeType":"YulBlock","src":"7899:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7914:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7928:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7918:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7944:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7979:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7990:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7975:3:20"},"nodeType":"YulFunctionCall","src":"7975:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7999:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7954:20:20"},"nodeType":"YulFunctionCall","src":"7954:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7944:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7423:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7434:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7446:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7454:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7462:6:20","type":""}],"src":"7359:665:20"},{"body":{"nodeType":"YulBlock","src":"8096:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"8142:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8151:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8154:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8144:6:20"},"nodeType":"YulFunctionCall","src":"8144:12:20"},"nodeType":"YulExpressionStatement","src":"8144:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8117:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8113:3:20"},"nodeType":"YulFunctionCall","src":"8113:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8138:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8109:3:20"},"nodeType":"YulFunctionCall","src":"8109:32:20"},"nodeType":"YulIf","src":"8106:2:20"},{"nodeType":"YulBlock","src":"8168:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8183:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8197:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8187:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8212:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8247:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8258:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8243:3:20"},"nodeType":"YulFunctionCall","src":"8243:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8267:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8222:20:20"},"nodeType":"YulFunctionCall","src":"8222:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8212:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8066:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8077:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8089:6:20","type":""}],"src":"8030:262:20"},{"body":{"nodeType":"YulBlock","src":"8375:207:20","statements":[{"body":{"nodeType":"YulBlock","src":"8421:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8430:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8433:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8423:6:20"},"nodeType":"YulFunctionCall","src":"8423:12:20"},"nodeType":"YulExpressionStatement","src":"8423:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8396:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8405:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8392:3:20"},"nodeType":"YulFunctionCall","src":"8392:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8417:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8388:3:20"},"nodeType":"YulFunctionCall","src":"8388:32:20"},"nodeType":"YulIf","src":"8385:2:20"},{"nodeType":"YulBlock","src":"8447:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8462:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8476:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8466:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8491:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8537:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8548:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8533:3:20"},"nodeType":"YulFunctionCall","src":"8533:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8557:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8501:31:20"},"nodeType":"YulFunctionCall","src":"8501:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8491:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8345:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8356:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8368:6:20","type":""}],"src":"8298:284:20"},{"body":{"nodeType":"YulBlock","src":"8696:442:20","statements":[{"body":{"nodeType":"YulBlock","src":"8742:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8751:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8744:6:20"},"nodeType":"YulFunctionCall","src":"8744:12:20"},"nodeType":"YulExpressionStatement","src":"8744:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8717:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8726:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8713:3:20"},"nodeType":"YulFunctionCall","src":"8713:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8738:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8709:3:20"},"nodeType":"YulFunctionCall","src":"8709:32:20"},"nodeType":"YulIf","src":"8706:2:20"},{"nodeType":"YulBlock","src":"8768:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8783:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8797:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8787:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8812:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8847:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8858:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8843:3:20"},"nodeType":"YulFunctionCall","src":"8843:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8867:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8822:20:20"},"nodeType":"YulFunctionCall","src":"8822:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8812:6:20"}]}]},{"nodeType":"YulBlock","src":"8895:236:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8910:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8941:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8952:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8937:3:20"},"nodeType":"YulFunctionCall","src":"8937:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8924:12:20"},"nodeType":"YulFunctionCall","src":"8924:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8914:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9003:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9012:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9015:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9005:6:20"},"nodeType":"YulFunctionCall","src":"9005:12:20"},"nodeType":"YulExpressionStatement","src":"9005:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8975:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8983:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8972:2:20"},"nodeType":"YulFunctionCall","src":"8972:30:20"},"nodeType":"YulIf","src":"8969:2:20"},{"nodeType":"YulAssignment","src":"9033:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9093:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9104:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:20"},"nodeType":"YulFunctionCall","src":"9089:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9113:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9043:45:20"},"nodeType":"YulFunctionCall","src":"9043:78:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9033:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8658:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8669:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8681:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8689:6:20","type":""}],"src":"8588:550:20"},{"body":{"nodeType":"YulBlock","src":"9209:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9226:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9249:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9231:17:20"},"nodeType":"YulFunctionCall","src":"9231:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:20"},"nodeType":"YulFunctionCall","src":"9219:37:20"},"nodeType":"YulExpressionStatement","src":"9219:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9197:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9204:3:20","type":""}],"src":"9144:118:20"},{"body":{"nodeType":"YulBlock","src":"9327:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9344:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9364:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9349:14:20"},"nodeType":"YulFunctionCall","src":"9349:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:20"},"nodeType":"YulFunctionCall","src":"9337:34:20"},"nodeType":"YulExpressionStatement","src":"9337:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9315:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9322:3:20","type":""}],"src":"9268:109:20"},{"body":{"nodeType":"YulBlock","src":"9448:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9465:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9488:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9470:17:20"},"nodeType":"YulFunctionCall","src":"9470:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9458:6:20"},"nodeType":"YulFunctionCall","src":"9458:37:20"},"nodeType":"YulExpressionStatement","src":"9458:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9436:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9443:3:20","type":""}],"src":"9383:118:20"},{"body":{"nodeType":"YulBlock","src":"9597:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9607:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9653:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9621:31:20"},"nodeType":"YulFunctionCall","src":"9621:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9611:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9668:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9733:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9738:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9675:57:20"},"nodeType":"YulFunctionCall","src":"9675:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9668:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9780:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9787:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:20"},"nodeType":"YulFunctionCall","src":"9776:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9794:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9799:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9754:21:20"},"nodeType":"YulFunctionCall","src":"9754:52:20"},"nodeType":"YulExpressionStatement","src":"9754:52:20"},{"nodeType":"YulAssignment","src":"9815:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9826:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9853:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9831:21:20"},"nodeType":"YulFunctionCall","src":"9831:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:20"},"nodeType":"YulFunctionCall","src":"9822:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9815:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9578:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9585:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9593:3:20","type":""}],"src":"9507:360:20"},{"body":{"nodeType":"YulBlock","src":"9965:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9975:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10022:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9989:32:20"},"nodeType":"YulFunctionCall","src":"9989:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9979:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10037:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10103:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10108:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10044:58:20"},"nodeType":"YulFunctionCall","src":"10044:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10037:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10150:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"10157:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10146:3:20"},"nodeType":"YulFunctionCall","src":"10146:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10164:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10169:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10124:21:20"},"nodeType":"YulFunctionCall","src":"10124:52:20"},"nodeType":"YulExpressionStatement","src":"10124:52:20"},{"nodeType":"YulAssignment","src":"10185:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10196:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10223:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10201:21:20"},"nodeType":"YulFunctionCall","src":"10201:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10192:3:20"},"nodeType":"YulFunctionCall","src":"10192:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10185:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9946:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9953:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9961:3:20","type":""}],"src":"9873:364:20"},{"body":{"nodeType":"YulBlock","src":"10353:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10363:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10410:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10377:32:20"},"nodeType":"YulFunctionCall","src":"10377:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10367:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10425:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10509:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10514:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10432:76:20"},"nodeType":"YulFunctionCall","src":"10432:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10425:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10556:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"10563:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10552:3:20"},"nodeType":"YulFunctionCall","src":"10552:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10570:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10575:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10530:21:20"},"nodeType":"YulFunctionCall","src":"10530:52:20"},"nodeType":"YulExpressionStatement","src":"10530:52:20"},{"nodeType":"YulAssignment","src":"10591:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10602:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10607:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10598:3:20"},"nodeType":"YulFunctionCall","src":"10598:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10591:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10334:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10341:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10349:3:20","type":""}],"src":"10243:377:20"},{"body":{"nodeType":"YulBlock","src":"10772:220:20","statements":[{"nodeType":"YulAssignment","src":"10782:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10848:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10853:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10789:58:20"},"nodeType":"YulFunctionCall","src":"10789:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10782:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10954:3:20"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"10865:88:20"},"nodeType":"YulFunctionCall","src":"10865:93:20"},"nodeType":"YulExpressionStatement","src":"10865:93:20"},{"nodeType":"YulAssignment","src":"10967:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10978:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10983:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10974:3:20"},"nodeType":"YulFunctionCall","src":"10974:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10967:3:20"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10760:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10768:3:20","type":""}],"src":"10626:366:20"},{"body":{"nodeType":"YulBlock","src":"11144:220:20","statements":[{"nodeType":"YulAssignment","src":"11154:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11220:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11225:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11161:58:20"},"nodeType":"YulFunctionCall","src":"11161:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11154:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11326:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"11237:88:20"},"nodeType":"YulFunctionCall","src":"11237:93:20"},"nodeType":"YulExpressionStatement","src":"11237:93:20"},{"nodeType":"YulAssignment","src":"11339:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11350:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11355:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:20"},"nodeType":"YulFunctionCall","src":"11346:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11339:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11132:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11140:3:20","type":""}],"src":"10998:366:20"},{"body":{"nodeType":"YulBlock","src":"11516:220:20","statements":[{"nodeType":"YulAssignment","src":"11526:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11592:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11597:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11533:58:20"},"nodeType":"YulFunctionCall","src":"11533:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11526:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11698:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"11609:88:20"},"nodeType":"YulFunctionCall","src":"11609:93:20"},"nodeType":"YulExpressionStatement","src":"11609:93:20"},{"nodeType":"YulAssignment","src":"11711:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11722:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11727:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11718:3:20"},"nodeType":"YulFunctionCall","src":"11718:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11711:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11504:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11512:3:20","type":""}],"src":"11370:366:20"},{"body":{"nodeType":"YulBlock","src":"11888:220:20","statements":[{"nodeType":"YulAssignment","src":"11898:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11964:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11969:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:58:20"},"nodeType":"YulFunctionCall","src":"11905:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11898:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12070:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"11981:88:20"},"nodeType":"YulFunctionCall","src":"11981:93:20"},"nodeType":"YulExpressionStatement","src":"11981:93:20"},{"nodeType":"YulAssignment","src":"12083:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12094:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12099:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12090:3:20"},"nodeType":"YulFunctionCall","src":"12090:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12083:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11876:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11884:3:20","type":""}],"src":"11742:366:20"},{"body":{"nodeType":"YulBlock","src":"12260:220:20","statements":[{"nodeType":"YulAssignment","src":"12270:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12336:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12341:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12277:58:20"},"nodeType":"YulFunctionCall","src":"12277:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12270:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12442:3:20"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"12353:88:20"},"nodeType":"YulFunctionCall","src":"12353:93:20"},"nodeType":"YulExpressionStatement","src":"12353:93:20"},{"nodeType":"YulAssignment","src":"12455:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12466:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12471:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12462:3:20"},"nodeType":"YulFunctionCall","src":"12462:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12455:3:20"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12248:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12256:3:20","type":""}],"src":"12114:366:20"},{"body":{"nodeType":"YulBlock","src":"12650:236:20","statements":[{"nodeType":"YulAssignment","src":"12660:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12744:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12749:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12667:76:20"},"nodeType":"YulFunctionCall","src":"12667:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12660:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12849:3:20"}],"functionName":{"name":"store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","nodeType":"YulIdentifier","src":"12760:88:20"},"nodeType":"YulFunctionCall","src":"12760:93:20"},"nodeType":"YulExpressionStatement","src":"12760:93:20"},{"nodeType":"YulAssignment","src":"12862:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12873:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12878:1:20","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12869:3:20"},"nodeType":"YulFunctionCall","src":"12869:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12862:3:20"}]}]},"name":"abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12638:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12646:3:20","type":""}],"src":"12486:400:20"},{"body":{"nodeType":"YulBlock","src":"13056:238:20","statements":[{"nodeType":"YulAssignment","src":"13066:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13150:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13155:2:20","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13073:76:20"},"nodeType":"YulFunctionCall","src":"13073:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13066:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13256:3:20"}],"functionName":{"name":"store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","nodeType":"YulIdentifier","src":"13167:88:20"},"nodeType":"YulFunctionCall","src":"13167:93:20"},"nodeType":"YulExpressionStatement","src":"13167:93:20"},{"nodeType":"YulAssignment","src":"13269:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13280:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13285:2:20","type":"","value":"14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13276:3:20"},"nodeType":"YulFunctionCall","src":"13276:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13269:3:20"}]}]},"name":"abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13044:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13052:3:20","type":""}],"src":"12892:402:20"},{"body":{"nodeType":"YulBlock","src":"13446:220:20","statements":[{"nodeType":"YulAssignment","src":"13456:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13522:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13527:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13463:58:20"},"nodeType":"YulFunctionCall","src":"13463:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13456:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13628:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"13539:88:20"},"nodeType":"YulFunctionCall","src":"13539:93:20"},"nodeType":"YulExpressionStatement","src":"13539:93:20"},{"nodeType":"YulAssignment","src":"13641:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13652:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13657:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13648:3:20"},"nodeType":"YulFunctionCall","src":"13648:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13641:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13434:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13442:3:20","type":""}],"src":"13300:366:20"},{"body":{"nodeType":"YulBlock","src":"13818:220:20","statements":[{"nodeType":"YulAssignment","src":"13828:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13894:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13899:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13835:58:20"},"nodeType":"YulFunctionCall","src":"13835:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13828:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14000:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"13911:88:20"},"nodeType":"YulFunctionCall","src":"13911:93:20"},"nodeType":"YulExpressionStatement","src":"13911:93:20"},{"nodeType":"YulAssignment","src":"14013:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14024:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14029:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14020:3:20"},"nodeType":"YulFunctionCall","src":"14020:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14013:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13806:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13814:3:20","type":""}],"src":"13672:366:20"},{"body":{"nodeType":"YulBlock","src":"14208:238:20","statements":[{"nodeType":"YulAssignment","src":"14218:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14302:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14307:2:20","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14225:76:20"},"nodeType":"YulFunctionCall","src":"14225:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14218:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14408:3:20"}],"functionName":{"name":"store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","nodeType":"YulIdentifier","src":"14319:88:20"},"nodeType":"YulFunctionCall","src":"14319:93:20"},"nodeType":"YulExpressionStatement","src":"14319:93:20"},{"nodeType":"YulAssignment","src":"14421:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14432:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14437:2:20","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14428:3:20"},"nodeType":"YulFunctionCall","src":"14428:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14421:3:20"}]}]},"name":"abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14196:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14204:3:20","type":""}],"src":"14044:402:20"},{"body":{"nodeType":"YulBlock","src":"14598:220:20","statements":[{"nodeType":"YulAssignment","src":"14608:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14674:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14679:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14615:58:20"},"nodeType":"YulFunctionCall","src":"14615:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14608:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14780:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"14691:88:20"},"nodeType":"YulFunctionCall","src":"14691:93:20"},"nodeType":"YulExpressionStatement","src":"14691:93:20"},{"nodeType":"YulAssignment","src":"14793:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14804:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14809:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14800:3:20"},"nodeType":"YulFunctionCall","src":"14800:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14793:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14586:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14594:3:20","type":""}],"src":"14452:366:20"},{"body":{"nodeType":"YulBlock","src":"14988:236:20","statements":[{"nodeType":"YulAssignment","src":"14998:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15082:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15087:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15005:76:20"},"nodeType":"YulFunctionCall","src":"15005:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14998:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15187:3:20"}],"functionName":{"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulIdentifier","src":"15098:88:20"},"nodeType":"YulFunctionCall","src":"15098:93:20"},"nodeType":"YulExpressionStatement","src":"15098:93:20"},{"nodeType":"YulAssignment","src":"15200:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15211:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15216:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15207:3:20"},"nodeType":"YulFunctionCall","src":"15207:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15200:3:20"}]}]},"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14976:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14984:3:20","type":""}],"src":"14824:400:20"},{"body":{"nodeType":"YulBlock","src":"15394:238:20","statements":[{"nodeType":"YulAssignment","src":"15404:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15488:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15493:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15411:76:20"},"nodeType":"YulFunctionCall","src":"15411:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15404:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15594:3:20"}],"functionName":{"name":"store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","nodeType":"YulIdentifier","src":"15505:88:20"},"nodeType":"YulFunctionCall","src":"15505:93:20"},"nodeType":"YulExpressionStatement","src":"15505:93:20"},{"nodeType":"YulAssignment","src":"15607:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15618:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15623:2:20","type":"","value":"37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15614:3:20"},"nodeType":"YulFunctionCall","src":"15614:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15607:3:20"}]}]},"name":"abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15382:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15390:3:20","type":""}],"src":"15230:402:20"},{"body":{"nodeType":"YulBlock","src":"15802:236:20","statements":[{"nodeType":"YulAssignment","src":"15812:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15896:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15901:1:20","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15819:76:20"},"nodeType":"YulFunctionCall","src":"15819:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15812:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16001:3:20"}],"functionName":{"name":"store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","nodeType":"YulIdentifier","src":"15912:88:20"},"nodeType":"YulFunctionCall","src":"15912:93:20"},"nodeType":"YulExpressionStatement","src":"15912:93:20"},{"nodeType":"YulAssignment","src":"16014:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16025:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16030:1:20","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16021:3:20"},"nodeType":"YulFunctionCall","src":"16021:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16014:3:20"}]}]},"name":"abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15790:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15798:3:20","type":""}],"src":"15638:400:20"},{"body":{"nodeType":"YulBlock","src":"16190:220:20","statements":[{"nodeType":"YulAssignment","src":"16200:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16266:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16271:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16207:58:20"},"nodeType":"YulFunctionCall","src":"16207:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16200:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16372:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"16283:88:20"},"nodeType":"YulFunctionCall","src":"16283:93:20"},"nodeType":"YulExpressionStatement","src":"16283:93:20"},{"nodeType":"YulAssignment","src":"16385:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16396:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16401:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16392:3:20"},"nodeType":"YulFunctionCall","src":"16392:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16385:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16178:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16186:3:20","type":""}],"src":"16044:366:20"},{"body":{"nodeType":"YulBlock","src":"16562:220:20","statements":[{"nodeType":"YulAssignment","src":"16572:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16638:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16579:58:20"},"nodeType":"YulFunctionCall","src":"16579:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16572:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16744:3:20"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"16655:88:20"},"nodeType":"YulFunctionCall","src":"16655:93:20"},"nodeType":"YulExpressionStatement","src":"16655:93:20"},{"nodeType":"YulAssignment","src":"16757:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16768:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16773:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16764:3:20"},"nodeType":"YulFunctionCall","src":"16764:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16757:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16550:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16558:3:20","type":""}],"src":"16416:366:20"},{"body":{"nodeType":"YulBlock","src":"16952:236:20","statements":[{"nodeType":"YulAssignment","src":"16962:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17046:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17051:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16969:76:20"},"nodeType":"YulFunctionCall","src":"16969:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16962:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17151:3:20"}],"functionName":{"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulIdentifier","src":"17062:88:20"},"nodeType":"YulFunctionCall","src":"17062:93:20"},"nodeType":"YulExpressionStatement","src":"17062:93:20"},{"nodeType":"YulAssignment","src":"17164:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17175:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17180:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17171:3:20"},"nodeType":"YulFunctionCall","src":"17171:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17164:3:20"}]}]},"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16940:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16948:3:20","type":""}],"src":"16788:400:20"},{"body":{"nodeType":"YulBlock","src":"17358:238:20","statements":[{"nodeType":"YulAssignment","src":"17368:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17452:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17457:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17375:76:20"},"nodeType":"YulFunctionCall","src":"17375:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17368:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17558:3:20"}],"functionName":{"name":"store_literal_in_memory_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5","nodeType":"YulIdentifier","src":"17469:88:20"},"nodeType":"YulFunctionCall","src":"17469:93:20"},"nodeType":"YulExpressionStatement","src":"17469:93:20"},{"nodeType":"YulAssignment","src":"17571:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17582:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17587:2:20","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17578:3:20"},"nodeType":"YulFunctionCall","src":"17578:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17571:3:20"}]}]},"name":"abi_encode_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17346:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17354:3:20","type":""}],"src":"17194:402:20"},{"body":{"nodeType":"YulBlock","src":"17748:220:20","statements":[{"nodeType":"YulAssignment","src":"17758:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17829:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17765:58:20"},"nodeType":"YulFunctionCall","src":"17765:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17758:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17930:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"17841:88:20"},"nodeType":"YulFunctionCall","src":"17841:93:20"},"nodeType":"YulExpressionStatement","src":"17841:93:20"},{"nodeType":"YulAssignment","src":"17943:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17954:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17959:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17950:3:20"},"nodeType":"YulFunctionCall","src":"17950:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17943:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17736:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17744:3:20","type":""}],"src":"17602:366:20"},{"body":{"nodeType":"YulBlock","src":"18138:236:20","statements":[{"nodeType":"YulAssignment","src":"18148:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18232:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18237:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18155:76:20"},"nodeType":"YulFunctionCall","src":"18155:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18148:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18337:3:20"}],"functionName":{"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulIdentifier","src":"18248:88:20"},"nodeType":"YulFunctionCall","src":"18248:93:20"},"nodeType":"YulExpressionStatement","src":"18248:93:20"},{"nodeType":"YulAssignment","src":"18350:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18361:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18366:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18357:3:20"},"nodeType":"YulFunctionCall","src":"18357:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18350:3:20"}]}]},"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18126:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18134:3:20","type":""}],"src":"17974:400:20"},{"body":{"nodeType":"YulBlock","src":"18526:220:20","statements":[{"nodeType":"YulAssignment","src":"18536:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18602:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18607:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18543:58:20"},"nodeType":"YulFunctionCall","src":"18543:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18536:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18708:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18619:88:20"},"nodeType":"YulFunctionCall","src":"18619:93:20"},"nodeType":"YulExpressionStatement","src":"18619:93:20"},{"nodeType":"YulAssignment","src":"18721:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18732:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18737:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18728:3:20"},"nodeType":"YulFunctionCall","src":"18728:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18721:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18514:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18522:3:20","type":""}],"src":"18380:366:20"},{"body":{"nodeType":"YulBlock","src":"18898:220:20","statements":[{"nodeType":"YulAssignment","src":"18908:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18974:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18979:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18915:58:20"},"nodeType":"YulFunctionCall","src":"18915:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18908:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19080:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"18991:88:20"},"nodeType":"YulFunctionCall","src":"18991:93:20"},"nodeType":"YulExpressionStatement","src":"18991:93:20"},{"nodeType":"YulAssignment","src":"19093:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19104:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19109:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19100:3:20"},"nodeType":"YulFunctionCall","src":"19100:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19093:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18886:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18894:3:20","type":""}],"src":"18752:366:20"},{"body":{"nodeType":"YulBlock","src":"19288:238:20","statements":[{"nodeType":"YulAssignment","src":"19298:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19382:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19387:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19305:76:20"},"nodeType":"YulFunctionCall","src":"19305:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19298:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19488:3:20"}],"functionName":{"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulIdentifier","src":"19399:88:20"},"nodeType":"YulFunctionCall","src":"19399:93:20"},"nodeType":"YulExpressionStatement","src":"19399:93:20"},{"nodeType":"YulAssignment","src":"19501:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19512:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19517:2:20","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19508:3:20"},"nodeType":"YulFunctionCall","src":"19508:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19501:3:20"}]}]},"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19276:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19284:3:20","type":""}],"src":"19124:402:20"},{"body":{"nodeType":"YulBlock","src":"19695:235:20","statements":[{"nodeType":"YulAssignment","src":"19705:90:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19788:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19793:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19712:75:20"},"nodeType":"YulFunctionCall","src":"19712:83:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19705:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19893:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"19804:88:20"},"nodeType":"YulFunctionCall","src":"19804:93:20"},"nodeType":"YulExpressionStatement","src":"19804:93:20"},{"nodeType":"YulAssignment","src":"19906:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19917:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19922:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19913:3:20"},"nodeType":"YulFunctionCall","src":"19913:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19906:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19683:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19691:3:20","type":""}],"src":"19532:398:20"},{"body":{"nodeType":"YulBlock","src":"20082:220:20","statements":[{"nodeType":"YulAssignment","src":"20092:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20158:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20163:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20099:58:20"},"nodeType":"YulFunctionCall","src":"20099:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20092:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20264:3:20"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"20175:88:20"},"nodeType":"YulFunctionCall","src":"20175:93:20"},"nodeType":"YulExpressionStatement","src":"20175:93:20"},{"nodeType":"YulAssignment","src":"20277:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20288:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20293:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20284:3:20"},"nodeType":"YulFunctionCall","src":"20284:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20277:3:20"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20070:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20078:3:20","type":""}],"src":"19936:366:20"},{"body":{"nodeType":"YulBlock","src":"20454:220:20","statements":[{"nodeType":"YulAssignment","src":"20464:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20530:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20535:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20471:58:20"},"nodeType":"YulFunctionCall","src":"20471:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20464:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20636:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"20547:88:20"},"nodeType":"YulFunctionCall","src":"20547:93:20"},"nodeType":"YulExpressionStatement","src":"20547:93:20"},{"nodeType":"YulAssignment","src":"20649:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20660:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20665:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20656:3:20"},"nodeType":"YulFunctionCall","src":"20656:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20649:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20442:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20450:3:20","type":""}],"src":"20308:366:20"},{"body":{"nodeType":"YulBlock","src":"20743:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20760:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20782:5:20"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"20765:16:20"},"nodeType":"YulFunctionCall","src":"20765:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20753:6:20"},"nodeType":"YulFunctionCall","src":"20753:36:20"},"nodeType":"YulExpressionStatement","src":"20753:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20731:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20738:3:20","type":""}],"src":"20680:115:20"},{"body":{"nodeType":"YulBlock","src":"20866:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20883:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20906:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20888:17:20"},"nodeType":"YulFunctionCall","src":"20888:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20876:6:20"},"nodeType":"YulFunctionCall","src":"20876:37:20"},"nodeType":"YulExpressionStatement","src":"20876:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20854:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20861:3:20","type":""}],"src":"20801:118:20"},{"body":{"nodeType":"YulBlock","src":"20988:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21005:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21027:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"21010:16:20"},"nodeType":"YulFunctionCall","src":"21010:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20998:6:20"},"nodeType":"YulFunctionCall","src":"20998:36:20"},"nodeType":"YulExpressionStatement","src":"20998:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20976:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20983:3:20","type":""}],"src":"20925:115:20"},{"body":{"nodeType":"YulBlock","src":"21109:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21126:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21148:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"21131:16:20"},"nodeType":"YulFunctionCall","src":"21131:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21119:6:20"},"nodeType":"YulFunctionCall","src":"21119:36:20"},"nodeType":"YulExpressionStatement","src":"21119:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21097:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21104:3:20","type":""}],"src":"21046:115:20"},{"body":{"nodeType":"YulBlock","src":"21303:139:20","statements":[{"nodeType":"YulAssignment","src":"21314:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21403:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21412:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21321:81:20"},"nodeType":"YulFunctionCall","src":"21321:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21314:3:20"}]},{"nodeType":"YulAssignment","src":"21426:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"21433:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21426:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21282:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21288:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21299:3:20","type":""}],"src":"21167:275:20"},{"body":{"nodeType":"YulBlock","src":"21632:251:20","statements":[{"nodeType":"YulAssignment","src":"21643:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21732:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21741:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21650:81:20"},"nodeType":"YulFunctionCall","src":"21650:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21643:3:20"}]},{"nodeType":"YulAssignment","src":"21755:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21844:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21853:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21762:81:20"},"nodeType":"YulFunctionCall","src":"21762:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21755:3:20"}]},{"nodeType":"YulAssignment","src":"21867:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"21874:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21867:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21603:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21609:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21617:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21628:3:20","type":""}],"src":"21448:435:20"},{"body":{"nodeType":"YulBlock","src":"22169:475:20","statements":[{"nodeType":"YulAssignment","src":"22180:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22269:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22278:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22187:81:20"},"nodeType":"YulFunctionCall","src":"22187:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22180:3:20"}]},{"nodeType":"YulAssignment","src":"22292:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22381:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22390:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22299:81:20"},"nodeType":"YulFunctionCall","src":"22299:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22292:3:20"}]},{"nodeType":"YulAssignment","src":"22404:102:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22493:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22502:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22411:81:20"},"nodeType":"YulFunctionCall","src":"22411:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22404:3:20"}]},{"nodeType":"YulAssignment","src":"22516:102:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22605:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22614:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22523:81:20"},"nodeType":"YulFunctionCall","src":"22523:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22516:3:20"}]},{"nodeType":"YulAssignment","src":"22628:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"22635:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22628:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22124:3:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22130:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22138:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22146:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22154:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22165:3:20","type":""}],"src":"21889:755:20"},{"body":{"nodeType":"YulBlock","src":"23074:811:20","statements":[{"nodeType":"YulAssignment","src":"23085:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23174:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23183:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23092:81:20"},"nodeType":"YulFunctionCall","src":"23092:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23085:3:20"}]},{"nodeType":"YulAssignment","src":"23197:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23286:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23295:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23204:81:20"},"nodeType":"YulFunctionCall","src":"23204:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23197:3:20"}]},{"nodeType":"YulAssignment","src":"23309:102:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23398:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23407:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23316:81:20"},"nodeType":"YulFunctionCall","src":"23316:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23309:3:20"}]},{"nodeType":"YulAssignment","src":"23421:102:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23510:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23519:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23428:81:20"},"nodeType":"YulFunctionCall","src":"23428:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23421:3:20"}]},{"nodeType":"YulAssignment","src":"23533:102:20","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23622:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23631:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23540:81:20"},"nodeType":"YulFunctionCall","src":"23540:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23533:3:20"}]},{"nodeType":"YulAssignment","src":"23645:102:20","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23734:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23743:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23652:81:20"},"nodeType":"YulFunctionCall","src":"23652:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23645:3:20"}]},{"nodeType":"YulAssignment","src":"23757:102:20","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23846:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23855:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23764:81:20"},"nodeType":"YulFunctionCall","src":"23764:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23757:3:20"}]},{"nodeType":"YulAssignment","src":"23869:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"23876:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23869:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23005:3:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23011:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23019:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23027:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23035:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23043:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23051:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23059:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23070:3:20","type":""}],"src":"22650:1235:20"},{"body":{"nodeType":"YulBlock","src":"24229:469:20","statements":[{"nodeType":"YulAssignment","src":"24240:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24391:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24247:142:20"},"nodeType":"YulFunctionCall","src":"24247:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24240:3:20"}]},{"nodeType":"YulAssignment","src":"24405:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24494:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"24503:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24412:81:20"},"nodeType":"YulFunctionCall","src":"24412:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24405:3:20"}]},{"nodeType":"YulAssignment","src":"24517:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24668:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24524:142:20"},"nodeType":"YulFunctionCall","src":"24524:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24517:3:20"}]},{"nodeType":"YulAssignment","src":"24682:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"24689:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24682:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_t_string_memory_ptr_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24208:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24214:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24225:3:20","type":""}],"src":"23891:807:20"},{"body":{"nodeType":"YulBlock","src":"25547:1294:20","statements":[{"nodeType":"YulAssignment","src":"25558:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25709:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25565:142:20"},"nodeType":"YulFunctionCall","src":"25565:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25558:3:20"}]},{"nodeType":"YulAssignment","src":"25723:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25874:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25730:142:20"},"nodeType":"YulFunctionCall","src":"25730:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25723:3:20"}]},{"nodeType":"YulAssignment","src":"25888:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26039:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25895:142:20"},"nodeType":"YulFunctionCall","src":"25895:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25888:3:20"}]},{"nodeType":"YulAssignment","src":"26053:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26204:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26060:142:20"},"nodeType":"YulFunctionCall","src":"26060:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26053:3:20"}]},{"nodeType":"YulAssignment","src":"26218:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26369:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26225:142:20"},"nodeType":"YulFunctionCall","src":"26225:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26218:3:20"}]},{"nodeType":"YulAssignment","src":"26383:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26472:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"26481:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26390:81:20"},"nodeType":"YulFunctionCall","src":"26390:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26383:3:20"}]},{"nodeType":"YulAssignment","src":"26495:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26646:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26502:142:20"},"nodeType":"YulFunctionCall","src":"26502:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26495:3:20"}]},{"nodeType":"YulAssignment","src":"26660:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26811:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26667:142:20"},"nodeType":"YulFunctionCall","src":"26667:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26660:3:20"}]},{"nodeType":"YulAssignment","src":"26825:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"26832:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26825:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25526:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25532:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25543:3:20","type":""}],"src":"24704:2137:20"},{"body":{"nodeType":"YulBlock","src":"27084:304:20","statements":[{"nodeType":"YulAssignment","src":"27095:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27246:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27102:142:20"},"nodeType":"YulFunctionCall","src":"27102:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27095:3:20"}]},{"nodeType":"YulAssignment","src":"27260:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27349:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"27358:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27267:81:20"},"nodeType":"YulFunctionCall","src":"27267:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27260:3:20"}]},{"nodeType":"YulAssignment","src":"27372:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"27379:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27372:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27063:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27069:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27080:3:20","type":""}],"src":"26847:541:20"},{"body":{"nodeType":"YulBlock","src":"27582:191:20","statements":[{"nodeType":"YulAssignment","src":"27593:154:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27743:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27600:141:20"},"nodeType":"YulFunctionCall","src":"27600:147:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27593:3:20"}]},{"nodeType":"YulAssignment","src":"27757:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"27764:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27757:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27569:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27578:3:20","type":""}],"src":"27394:379:20"},{"body":{"nodeType":"YulBlock","src":"27877:124:20","statements":[{"nodeType":"YulAssignment","src":"27887:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27899:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27910:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27895:3:20"},"nodeType":"YulFunctionCall","src":"27895:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27887:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27967:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27980:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27991:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27976:3:20"},"nodeType":"YulFunctionCall","src":"27976:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27923:43:20"},"nodeType":"YulFunctionCall","src":"27923:71:20"},"nodeType":"YulExpressionStatement","src":"27923:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27849:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27861:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27872:4:20","type":""}],"src":"27779:222:20"},{"body":{"nodeType":"YulBlock","src":"28133:206:20","statements":[{"nodeType":"YulAssignment","src":"28143:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28155:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28166:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28151:3:20"},"nodeType":"YulFunctionCall","src":"28151:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28143:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28223:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28236:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28247:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28232:3:20"},"nodeType":"YulFunctionCall","src":"28232:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28179:43:20"},"nodeType":"YulFunctionCall","src":"28179:71:20"},"nodeType":"YulExpressionStatement","src":"28179:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28304:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28317:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28328:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28313:3:20"},"nodeType":"YulFunctionCall","src":"28313:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28260:43:20"},"nodeType":"YulFunctionCall","src":"28260:72:20"},"nodeType":"YulExpressionStatement","src":"28260:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28097:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28109:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28117:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28128:4:20","type":""}],"src":"28007:332:20"},{"body":{"nodeType":"YulBlock","src":"28545:440:20","statements":[{"nodeType":"YulAssignment","src":"28555:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28567:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28578:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28563:3:20"},"nodeType":"YulFunctionCall","src":"28563:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28555:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28636:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28649:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28660:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28645:3:20"},"nodeType":"YulFunctionCall","src":"28645:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28592:43:20"},"nodeType":"YulFunctionCall","src":"28592:71:20"},"nodeType":"YulExpressionStatement","src":"28592:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28717:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28730:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28741:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28726:3:20"},"nodeType":"YulFunctionCall","src":"28726:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28673:43:20"},"nodeType":"YulFunctionCall","src":"28673:72:20"},"nodeType":"YulExpressionStatement","src":"28673:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28799:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28812:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28823:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28808:3:20"},"nodeType":"YulFunctionCall","src":"28808:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28755:43:20"},"nodeType":"YulFunctionCall","src":"28755:72:20"},"nodeType":"YulExpressionStatement","src":"28755:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28848:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28859:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28844:3:20"},"nodeType":"YulFunctionCall","src":"28844:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28868:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28874:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28864:3:20"},"nodeType":"YulFunctionCall","src":"28864:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28837:6:20"},"nodeType":"YulFunctionCall","src":"28837:48:20"},"nodeType":"YulExpressionStatement","src":"28837:48:20"},{"nodeType":"YulAssignment","src":"28894:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28964:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"28973:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28902:61:20"},"nodeType":"YulFunctionCall","src":"28902:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28894:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28493:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28505:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28513:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28521:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28529:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28540:4:20","type":""}],"src":"28345:640:20"},{"body":{"nodeType":"YulBlock","src":"29083:118:20","statements":[{"nodeType":"YulAssignment","src":"29093:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29105:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29116:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29101:3:20"},"nodeType":"YulFunctionCall","src":"29101:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29093:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29167:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29180:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29191:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29176:3:20"},"nodeType":"YulFunctionCall","src":"29176:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"29129:37:20"},"nodeType":"YulFunctionCall","src":"29129:65:20"},"nodeType":"YulExpressionStatement","src":"29129:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29055:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29067:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29078:4:20","type":""}],"src":"28991:210:20"},{"body":{"nodeType":"YulBlock","src":"29345:269:20","statements":[{"nodeType":"YulAssignment","src":"29355:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29367:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29378:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29363:3:20"},"nodeType":"YulFunctionCall","src":"29363:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29355:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29429:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29442:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29453:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29438:3:20"},"nodeType":"YulFunctionCall","src":"29438:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"29391:37:20"},"nodeType":"YulFunctionCall","src":"29391:65:20"},"nodeType":"YulExpressionStatement","src":"29391:65:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29477:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29488:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29473:3:20"},"nodeType":"YulFunctionCall","src":"29473:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29497:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29503:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29493:3:20"},"nodeType":"YulFunctionCall","src":"29493:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29466:6:20"},"nodeType":"YulFunctionCall","src":"29466:48:20"},"nodeType":"YulExpressionStatement","src":"29466:48:20"},{"nodeType":"YulAssignment","src":"29523:84:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29593:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"29602:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29531:61:20"},"nodeType":"YulFunctionCall","src":"29531:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29523:4:20"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29309:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29321:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29329:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29340:4:20","type":""}],"src":"29207:407:20"},{"body":{"nodeType":"YulBlock","src":"29822:446:20","statements":[{"nodeType":"YulAssignment","src":"29832:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29844:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29855:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29840:3:20"},"nodeType":"YulFunctionCall","src":"29840:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29832:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29913:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29926:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29937:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29922:3:20"},"nodeType":"YulFunctionCall","src":"29922:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"29869:43:20"},"nodeType":"YulFunctionCall","src":"29869:71:20"},"nodeType":"YulExpressionStatement","src":"29869:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29992:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30005:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30016:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30001:3:20"},"nodeType":"YulFunctionCall","src":"30001:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"29950:41:20"},"nodeType":"YulFunctionCall","src":"29950:70:20"},"nodeType":"YulExpressionStatement","src":"29950:70:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30072:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30085:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30096:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30081:3:20"},"nodeType":"YulFunctionCall","src":"30081:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"30030:41:20"},"nodeType":"YulFunctionCall","src":"30030:70:20"},"nodeType":"YulExpressionStatement","src":"30030:70:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30152:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30165:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30176:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30161:3:20"},"nodeType":"YulFunctionCall","src":"30161:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"30110:41:20"},"nodeType":"YulFunctionCall","src":"30110:70:20"},"nodeType":"YulExpressionStatement","src":"30110:70:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30232:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30245:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30256:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30241:3:20"},"nodeType":"YulFunctionCall","src":"30241:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"30190:41:20"},"nodeType":"YulFunctionCall","src":"30190:71:20"},"nodeType":"YulExpressionStatement","src":"30190:71:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29762:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29774:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29782:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29790:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29798:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29806:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29817:4:20","type":""}],"src":"29620:648:20"},{"body":{"nodeType":"YulBlock","src":"30392:195:20","statements":[{"nodeType":"YulAssignment","src":"30402:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30414:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30425:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30410:3:20"},"nodeType":"YulFunctionCall","src":"30410:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30402:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30449:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30460:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30445:3:20"},"nodeType":"YulFunctionCall","src":"30445:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30468:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30474:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30464:3:20"},"nodeType":"YulFunctionCall","src":"30464:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30438:6:20"},"nodeType":"YulFunctionCall","src":"30438:47:20"},"nodeType":"YulExpressionStatement","src":"30438:47:20"},{"nodeType":"YulAssignment","src":"30494:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30566:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"30575:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30502:63:20"},"nodeType":"YulFunctionCall","src":"30502:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30494:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30364:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30376:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30387:4:20","type":""}],"src":"30274:313:20"},{"body":{"nodeType":"YulBlock","src":"30764:248:20","statements":[{"nodeType":"YulAssignment","src":"30774:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30786:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30797:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30782:3:20"},"nodeType":"YulFunctionCall","src":"30782:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30774:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30821:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30832:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30817:3:20"},"nodeType":"YulFunctionCall","src":"30817:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30840:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30846:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30836:3:20"},"nodeType":"YulFunctionCall","src":"30836:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30810:6:20"},"nodeType":"YulFunctionCall","src":"30810:47:20"},"nodeType":"YulExpressionStatement","src":"30810:47:20"},{"nodeType":"YulAssignment","src":"30866:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31000:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30874:124:20"},"nodeType":"YulFunctionCall","src":"30874:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30866:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30744:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30759:4:20","type":""}],"src":"30593:419:20"},{"body":{"nodeType":"YulBlock","src":"31189:248:20","statements":[{"nodeType":"YulAssignment","src":"31199:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31211:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31222:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31207:3:20"},"nodeType":"YulFunctionCall","src":"31207:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31199:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31246:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31257:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31242:3:20"},"nodeType":"YulFunctionCall","src":"31242:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31265:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31271:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31261:3:20"},"nodeType":"YulFunctionCall","src":"31261:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31235:6:20"},"nodeType":"YulFunctionCall","src":"31235:47:20"},"nodeType":"YulExpressionStatement","src":"31235:47:20"},{"nodeType":"YulAssignment","src":"31291:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31425:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31299:124:20"},"nodeType":"YulFunctionCall","src":"31299:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31291:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31169:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31184:4:20","type":""}],"src":"31018:419:20"},{"body":{"nodeType":"YulBlock","src":"31614:248:20","statements":[{"nodeType":"YulAssignment","src":"31624:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31636:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31647:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31632:3:20"},"nodeType":"YulFunctionCall","src":"31632:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31624:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31671:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31682:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31667:3:20"},"nodeType":"YulFunctionCall","src":"31667:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31690:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31696:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31686:3:20"},"nodeType":"YulFunctionCall","src":"31686:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31660:6:20"},"nodeType":"YulFunctionCall","src":"31660:47:20"},"nodeType":"YulExpressionStatement","src":"31660:47:20"},{"nodeType":"YulAssignment","src":"31716:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31850:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31724:124:20"},"nodeType":"YulFunctionCall","src":"31724:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31716:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31594:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31609:4:20","type":""}],"src":"31443:419:20"},{"body":{"nodeType":"YulBlock","src":"32039:248:20","statements":[{"nodeType":"YulAssignment","src":"32049:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32061:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32072:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32057:3:20"},"nodeType":"YulFunctionCall","src":"32057:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32049:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32096:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32107:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32092:3:20"},"nodeType":"YulFunctionCall","src":"32092:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32115:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32121:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32111:3:20"},"nodeType":"YulFunctionCall","src":"32111:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32085:6:20"},"nodeType":"YulFunctionCall","src":"32085:47:20"},"nodeType":"YulExpressionStatement","src":"32085:47:20"},{"nodeType":"YulAssignment","src":"32141:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32275:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32149:124:20"},"nodeType":"YulFunctionCall","src":"32149:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32141:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32019:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32034:4:20","type":""}],"src":"31868:419:20"},{"body":{"nodeType":"YulBlock","src":"32464:248:20","statements":[{"nodeType":"YulAssignment","src":"32474:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32486:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32497:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32482:3:20"},"nodeType":"YulFunctionCall","src":"32482:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32474:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32521:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32532:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32517:3:20"},"nodeType":"YulFunctionCall","src":"32517:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32540:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32546:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32536:3:20"},"nodeType":"YulFunctionCall","src":"32536:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32510:6:20"},"nodeType":"YulFunctionCall","src":"32510:47:20"},"nodeType":"YulExpressionStatement","src":"32510:47:20"},{"nodeType":"YulAssignment","src":"32566:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32700:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32574:124:20"},"nodeType":"YulFunctionCall","src":"32574:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32566:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32444:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32459:4:20","type":""}],"src":"32293:419:20"},{"body":{"nodeType":"YulBlock","src":"32889:248:20","statements":[{"nodeType":"YulAssignment","src":"32899:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32911:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32922:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32907:3:20"},"nodeType":"YulFunctionCall","src":"32907:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32899:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32946:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32957:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32942:3:20"},"nodeType":"YulFunctionCall","src":"32942:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32965:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32971:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32961:3:20"},"nodeType":"YulFunctionCall","src":"32961:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32935:6:20"},"nodeType":"YulFunctionCall","src":"32935:47:20"},"nodeType":"YulExpressionStatement","src":"32935:47:20"},{"nodeType":"YulAssignment","src":"32991:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33125:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32999:124:20"},"nodeType":"YulFunctionCall","src":"32999:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32991:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32869:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32884:4:20","type":""}],"src":"32718:419:20"},{"body":{"nodeType":"YulBlock","src":"33314:248:20","statements":[{"nodeType":"YulAssignment","src":"33324:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33336:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33347:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33332:3:20"},"nodeType":"YulFunctionCall","src":"33332:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33324:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33371:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33382:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33367:3:20"},"nodeType":"YulFunctionCall","src":"33367:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33390:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33396:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33386:3:20"},"nodeType":"YulFunctionCall","src":"33386:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33360:6:20"},"nodeType":"YulFunctionCall","src":"33360:47:20"},"nodeType":"YulExpressionStatement","src":"33360:47:20"},{"nodeType":"YulAssignment","src":"33416:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33550:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33424:124:20"},"nodeType":"YulFunctionCall","src":"33424:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33416:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33294:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33309:4:20","type":""}],"src":"33143:419:20"},{"body":{"nodeType":"YulBlock","src":"33739:248:20","statements":[{"nodeType":"YulAssignment","src":"33749:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33761:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33772:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33757:3:20"},"nodeType":"YulFunctionCall","src":"33757:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33749:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33796:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33807:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33792:3:20"},"nodeType":"YulFunctionCall","src":"33792:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33815:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33821:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33811:3:20"},"nodeType":"YulFunctionCall","src":"33811:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33785:6:20"},"nodeType":"YulFunctionCall","src":"33785:47:20"},"nodeType":"YulExpressionStatement","src":"33785:47:20"},{"nodeType":"YulAssignment","src":"33841:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33975:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33849:124:20"},"nodeType":"YulFunctionCall","src":"33849:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33841:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33719:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33734:4:20","type":""}],"src":"33568:419:20"},{"body":{"nodeType":"YulBlock","src":"34164:248:20","statements":[{"nodeType":"YulAssignment","src":"34174:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34186:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34197:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34182:3:20"},"nodeType":"YulFunctionCall","src":"34182:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34174:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34221:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34232:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34217:3:20"},"nodeType":"YulFunctionCall","src":"34217:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34240:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34246:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34236:3:20"},"nodeType":"YulFunctionCall","src":"34236:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34210:6:20"},"nodeType":"YulFunctionCall","src":"34210:47:20"},"nodeType":"YulExpressionStatement","src":"34210:47:20"},{"nodeType":"YulAssignment","src":"34266:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34400:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34274:124:20"},"nodeType":"YulFunctionCall","src":"34274:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34266:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34144:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34159:4:20","type":""}],"src":"33993:419:20"},{"body":{"nodeType":"YulBlock","src":"34589:248:20","statements":[{"nodeType":"YulAssignment","src":"34599:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34611:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34622:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34607:3:20"},"nodeType":"YulFunctionCall","src":"34607:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34599:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34646:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34657:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34642:3:20"},"nodeType":"YulFunctionCall","src":"34642:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34665:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34671:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34661:3:20"},"nodeType":"YulFunctionCall","src":"34661:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34635:6:20"},"nodeType":"YulFunctionCall","src":"34635:47:20"},"nodeType":"YulExpressionStatement","src":"34635:47:20"},{"nodeType":"YulAssignment","src":"34691:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34825:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34699:124:20"},"nodeType":"YulFunctionCall","src":"34699:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34691:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34569:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34584:4:20","type":""}],"src":"34418:419:20"},{"body":{"nodeType":"YulBlock","src":"35014:248:20","statements":[{"nodeType":"YulAssignment","src":"35024:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35036:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35047:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35032:3:20"},"nodeType":"YulFunctionCall","src":"35032:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35024:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35071:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35082:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35067:3:20"},"nodeType":"YulFunctionCall","src":"35067:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35090:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35096:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35086:3:20"},"nodeType":"YulFunctionCall","src":"35086:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35060:6:20"},"nodeType":"YulFunctionCall","src":"35060:47:20"},"nodeType":"YulExpressionStatement","src":"35060:47:20"},{"nodeType":"YulAssignment","src":"35116:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35250:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35124:124:20"},"nodeType":"YulFunctionCall","src":"35124:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35116:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34994:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35009:4:20","type":""}],"src":"34843:419:20"},{"body":{"nodeType":"YulBlock","src":"35439:248:20","statements":[{"nodeType":"YulAssignment","src":"35449:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35461:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35472:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35457:3:20"},"nodeType":"YulFunctionCall","src":"35457:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35449:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35496:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35507:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35492:3:20"},"nodeType":"YulFunctionCall","src":"35492:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35515:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35521:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35511:3:20"},"nodeType":"YulFunctionCall","src":"35511:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35485:6:20"},"nodeType":"YulFunctionCall","src":"35485:47:20"},"nodeType":"YulExpressionStatement","src":"35485:47:20"},{"nodeType":"YulAssignment","src":"35541:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35675:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35549:124:20"},"nodeType":"YulFunctionCall","src":"35549:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35541:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35419:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35434:4:20","type":""}],"src":"35268:419:20"},{"body":{"nodeType":"YulBlock","src":"35864:248:20","statements":[{"nodeType":"YulAssignment","src":"35874:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35886:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35897:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35882:3:20"},"nodeType":"YulFunctionCall","src":"35882:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35874:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35921:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35932:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35917:3:20"},"nodeType":"YulFunctionCall","src":"35917:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35940:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35946:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35936:3:20"},"nodeType":"YulFunctionCall","src":"35936:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35910:6:20"},"nodeType":"YulFunctionCall","src":"35910:47:20"},"nodeType":"YulExpressionStatement","src":"35910:47:20"},{"nodeType":"YulAssignment","src":"35966:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36100:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35974:124:20"},"nodeType":"YulFunctionCall","src":"35974:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35966:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35844:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35859:4:20","type":""}],"src":"35693:419:20"},{"body":{"nodeType":"YulBlock","src":"36289:248:20","statements":[{"nodeType":"YulAssignment","src":"36299:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36311:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36322:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36307:3:20"},"nodeType":"YulFunctionCall","src":"36307:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36299:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36346:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36357:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36342:3:20"},"nodeType":"YulFunctionCall","src":"36342:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36365:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36371:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36361:3:20"},"nodeType":"YulFunctionCall","src":"36361:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36335:6:20"},"nodeType":"YulFunctionCall","src":"36335:47:20"},"nodeType":"YulExpressionStatement","src":"36335:47:20"},{"nodeType":"YulAssignment","src":"36391:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36525:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36399:124:20"},"nodeType":"YulFunctionCall","src":"36399:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36391:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36269:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36284:4:20","type":""}],"src":"36118:419:20"},{"body":{"nodeType":"YulBlock","src":"36714:248:20","statements":[{"nodeType":"YulAssignment","src":"36724:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36736:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36747:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36732:3:20"},"nodeType":"YulFunctionCall","src":"36732:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36724:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36771:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36782:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36767:3:20"},"nodeType":"YulFunctionCall","src":"36767:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36790:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36796:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36786:3:20"},"nodeType":"YulFunctionCall","src":"36786:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36760:6:20"},"nodeType":"YulFunctionCall","src":"36760:47:20"},"nodeType":"YulExpressionStatement","src":"36760:47:20"},{"nodeType":"YulAssignment","src":"36816:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36950:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36824:124:20"},"nodeType":"YulFunctionCall","src":"36824:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36816:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36694:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36709:4:20","type":""}],"src":"36543:419:20"},{"body":{"nodeType":"YulBlock","src":"37066:124:20","statements":[{"nodeType":"YulAssignment","src":"37076:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37088:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37099:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37084:3:20"},"nodeType":"YulFunctionCall","src":"37084:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37076:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37156:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37169:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37180:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37165:3:20"},"nodeType":"YulFunctionCall","src":"37165:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37112:43:20"},"nodeType":"YulFunctionCall","src":"37112:71:20"},"nodeType":"YulExpressionStatement","src":"37112:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37038:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37050:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37061:4:20","type":""}],"src":"36968:222:20"},{"body":{"nodeType":"YulBlock","src":"37322:206:20","statements":[{"nodeType":"YulAssignment","src":"37332:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37344:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37355:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37340:3:20"},"nodeType":"YulFunctionCall","src":"37340:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37332:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37412:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37425:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37436:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37421:3:20"},"nodeType":"YulFunctionCall","src":"37421:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37368:43:20"},"nodeType":"YulFunctionCall","src":"37368:71:20"},"nodeType":"YulExpressionStatement","src":"37368:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37493:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37506:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37517:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37502:3:20"},"nodeType":"YulFunctionCall","src":"37502:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37449:43:20"},"nodeType":"YulFunctionCall","src":"37449:72:20"},"nodeType":"YulExpressionStatement","src":"37449:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37286:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37298:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37306:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37317:4:20","type":""}],"src":"37196:332:20"},{"body":{"nodeType":"YulBlock","src":"37575:88:20","statements":[{"nodeType":"YulAssignment","src":"37585:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"37595:18:20"},"nodeType":"YulFunctionCall","src":"37595:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37585:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37644:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"37652:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"37624:19:20"},"nodeType":"YulFunctionCall","src":"37624:33:20"},"nodeType":"YulExpressionStatement","src":"37624:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"37559:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"37568:6:20","type":""}],"src":"37534:129:20"},{"body":{"nodeType":"YulBlock","src":"37709:35:20","statements":[{"nodeType":"YulAssignment","src":"37719:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37735:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37729:5:20"},"nodeType":"YulFunctionCall","src":"37729:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37719:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"37702:6:20","type":""}],"src":"37669:75:20"},{"body":{"nodeType":"YulBlock","src":"37832:229:20","statements":[{"body":{"nodeType":"YulBlock","src":"37937:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37939:16:20"},"nodeType":"YulFunctionCall","src":"37939:18:20"},"nodeType":"YulExpressionStatement","src":"37939:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37909:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37917:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37906:2:20"},"nodeType":"YulFunctionCall","src":"37906:30:20"},"nodeType":"YulIf","src":"37903:2:20"},{"nodeType":"YulAssignment","src":"37969:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37981:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37989:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37977:3:20"},"nodeType":"YulFunctionCall","src":"37977:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37969:4:20"}]},{"nodeType":"YulAssignment","src":"38031:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"38043:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"38049:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38039:3:20"},"nodeType":"YulFunctionCall","src":"38039:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38031:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37816:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37827:4:20","type":""}],"src":"37750:311:20"},{"body":{"nodeType":"YulBlock","src":"38133:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"38238:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"38240:16:20"},"nodeType":"YulFunctionCall","src":"38240:18:20"},"nodeType":"YulExpressionStatement","src":"38240:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38210:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"38218:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38207:2:20"},"nodeType":"YulFunctionCall","src":"38207:30:20"},"nodeType":"YulIf","src":"38204:2:20"},{"nodeType":"YulAssignment","src":"38270:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38300:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38278:21:20"},"nodeType":"YulFunctionCall","src":"38278:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38270:4:20"}]},{"nodeType":"YulAssignment","src":"38344:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"38356:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"38362:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38352:3:20"},"nodeType":"YulFunctionCall","src":"38352:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38344:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"38117:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"38128:4:20","type":""}],"src":"38067:307:20"},{"body":{"nodeType":"YulBlock","src":"38447:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"38552:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"38554:16:20"},"nodeType":"YulFunctionCall","src":"38554:18:20"},"nodeType":"YulExpressionStatement","src":"38554:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38524:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"38532:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38521:2:20"},"nodeType":"YulFunctionCall","src":"38521:30:20"},"nodeType":"YulIf","src":"38518:2:20"},{"nodeType":"YulAssignment","src":"38584:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38614:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38592:21:20"},"nodeType":"YulFunctionCall","src":"38592:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38584:4:20"}]},{"nodeType":"YulAssignment","src":"38658:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"38670:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"38676:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38666:3:20"},"nodeType":"YulFunctionCall","src":"38666:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38658:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"38431:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"38442:4:20","type":""}],"src":"38380:308:20"},{"body":{"nodeType":"YulBlock","src":"38752:40:20","statements":[{"nodeType":"YulAssignment","src":"38763:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38779:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38773:5:20"},"nodeType":"YulFunctionCall","src":"38773:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38763:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38735:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38745:6:20","type":""}],"src":"38694:98:20"},{"body":{"nodeType":"YulBlock","src":"38857:40:20","statements":[{"nodeType":"YulAssignment","src":"38868:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38884:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38878:5:20"},"nodeType":"YulFunctionCall","src":"38878:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38868:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38840:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38850:6:20","type":""}],"src":"38798:99:20"},{"body":{"nodeType":"YulBlock","src":"38998:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39015:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"39020:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39008:6:20"},"nodeType":"YulFunctionCall","src":"39008:19:20"},"nodeType":"YulExpressionStatement","src":"39008:19:20"},{"nodeType":"YulAssignment","src":"39036:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39055:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"39060:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39051:3:20"},"nodeType":"YulFunctionCall","src":"39051:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39036:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38970:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38975:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38986:11:20","type":""}],"src":"38903:168:20"},{"body":{"nodeType":"YulBlock","src":"39190:34:20","statements":[{"nodeType":"YulAssignment","src":"39200:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"39215:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39200:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39162:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"39167:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39178:11:20","type":""}],"src":"39077:147:20"},{"body":{"nodeType":"YulBlock","src":"39326:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39343:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"39348:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39336:6:20"},"nodeType":"YulFunctionCall","src":"39336:19:20"},"nodeType":"YulExpressionStatement","src":"39336:19:20"},{"nodeType":"YulAssignment","src":"39364:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39383:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"39388:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39379:3:20"},"nodeType":"YulFunctionCall","src":"39379:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39364:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39298:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"39303:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39314:11:20","type":""}],"src":"39230:169:20"},{"body":{"nodeType":"YulBlock","src":"39519:34:20","statements":[{"nodeType":"YulAssignment","src":"39529:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"39544:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39529:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39491:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"39496:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39507:11:20","type":""}],"src":"39405:148:20"},{"body":{"nodeType":"YulBlock","src":"39603:261:20","statements":[{"nodeType":"YulAssignment","src":"39613:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39636:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39618:17:20"},"nodeType":"YulFunctionCall","src":"39618:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39613:1:20"}]},{"nodeType":"YulAssignment","src":"39647:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39670:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39652:17:20"},"nodeType":"YulFunctionCall","src":"39652:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39647:1:20"}]},{"body":{"nodeType":"YulBlock","src":"39810:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"39812:16:20"},"nodeType":"YulFunctionCall","src":"39812:18:20"},"nodeType":"YulExpressionStatement","src":"39812:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39731:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39738:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"39806:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39734:3:20"},"nodeType":"YulFunctionCall","src":"39734:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39728:2:20"},"nodeType":"YulFunctionCall","src":"39728:81:20"},"nodeType":"YulIf","src":"39725:2:20"},{"nodeType":"YulAssignment","src":"39842:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39853:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"39856:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39849:3:20"},"nodeType":"YulFunctionCall","src":"39849:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"39842:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39590:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39593:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"39599:3:20","type":""}],"src":"39559:305:20"},{"body":{"nodeType":"YulBlock","src":"39912:195:20","statements":[{"nodeType":"YulAssignment","src":"39922:23:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39943:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"39927:15:20"},"nodeType":"YulFunctionCall","src":"39927:18:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39922:1:20"}]},{"nodeType":"YulAssignment","src":"39954:23:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39975:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"39959:15:20"},"nodeType":"YulFunctionCall","src":"39959:18:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39954:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40053:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40055:16:20"},"nodeType":"YulFunctionCall","src":"40055:18:20"},"nodeType":"YulExpressionStatement","src":"40055:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40036:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40043:4:20","type":"","value":"0xff"},{"name":"y","nodeType":"YulIdentifier","src":"40049:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40039:3:20"},"nodeType":"YulFunctionCall","src":"40039:12:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40033:2:20"},"nodeType":"YulFunctionCall","src":"40033:19:20"},"nodeType":"YulIf","src":"40030:2:20"},{"nodeType":"YulAssignment","src":"40085:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40096:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40099:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40092:3:20"},"nodeType":"YulFunctionCall","src":"40092:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"40085:3:20"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39899:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39902:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"39908:3:20","type":""}],"src":"39870:237:20"},{"body":{"nodeType":"YulBlock","src":"40155:143:20","statements":[{"nodeType":"YulAssignment","src":"40165:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40188:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40170:17:20"},"nodeType":"YulFunctionCall","src":"40170:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40165:1:20"}]},{"nodeType":"YulAssignment","src":"40199:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40222:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40204:17:20"},"nodeType":"YulFunctionCall","src":"40204:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40199:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40246:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"40248:16:20"},"nodeType":"YulFunctionCall","src":"40248:18:20"},"nodeType":"YulExpressionStatement","src":"40248:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40243:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40236:6:20"},"nodeType":"YulFunctionCall","src":"40236:9:20"},"nodeType":"YulIf","src":"40233:2:20"},{"nodeType":"YulAssignment","src":"40278:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40287:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40290:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40283:3:20"},"nodeType":"YulFunctionCall","src":"40283:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"40278:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40144:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40147:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"40153:1:20","type":""}],"src":"40113:185:20"},{"body":{"nodeType":"YulBlock","src":"40352:300:20","statements":[{"nodeType":"YulAssignment","src":"40362:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40385:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40367:17:20"},"nodeType":"YulFunctionCall","src":"40367:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40362:1:20"}]},{"nodeType":"YulAssignment","src":"40396:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40419:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40401:17:20"},"nodeType":"YulFunctionCall","src":"40401:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40396:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40594:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40596:16:20"},"nodeType":"YulFunctionCall","src":"40596:18:20"},"nodeType":"YulExpressionStatement","src":"40596:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40506:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40499:6:20"},"nodeType":"YulFunctionCall","src":"40499:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40492:6:20"},"nodeType":"YulFunctionCall","src":"40492:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40514:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40521:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"40589:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40517:3:20"},"nodeType":"YulFunctionCall","src":"40517:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40511:2:20"},"nodeType":"YulFunctionCall","src":"40511:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40488:3:20"},"nodeType":"YulFunctionCall","src":"40488:105:20"},"nodeType":"YulIf","src":"40485:2:20"},{"nodeType":"YulAssignment","src":"40626:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40641:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40644:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40637:3:20"},"nodeType":"YulFunctionCall","src":"40637:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"40626:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40335:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40338:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"40344:7:20","type":""}],"src":"40304:348:20"},{"body":{"nodeType":"YulBlock","src":"40704:234:20","statements":[{"nodeType":"YulAssignment","src":"40714:23:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40735:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"40719:15:20"},"nodeType":"YulFunctionCall","src":"40719:18:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40714:1:20"}]},{"nodeType":"YulAssignment","src":"40746:23:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40767:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"40751:15:20"},"nodeType":"YulFunctionCall","src":"40751:18:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40746:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40880:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40882:16:20"},"nodeType":"YulFunctionCall","src":"40882:18:20"},"nodeType":"YulExpressionStatement","src":"40882:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40854:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40847:6:20"},"nodeType":"YulFunctionCall","src":"40847:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40840:6:20"},"nodeType":"YulFunctionCall","src":"40840:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40862:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40869:4:20","type":"","value":"0xff"},{"name":"x","nodeType":"YulIdentifier","src":"40875:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40865:3:20"},"nodeType":"YulFunctionCall","src":"40865:12:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40859:2:20"},"nodeType":"YulFunctionCall","src":"40859:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40836:3:20"},"nodeType":"YulFunctionCall","src":"40836:43:20"},"nodeType":"YulIf","src":"40833:2:20"},{"nodeType":"YulAssignment","src":"40912:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40927:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40930:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40923:3:20"},"nodeType":"YulFunctionCall","src":"40923:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"40912:7:20"}]}]},"name":"checked_mul_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40687:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40690:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"40696:7:20","type":""}],"src":"40658:280:20"},{"body":{"nodeType":"YulBlock","src":"40989:146:20","statements":[{"nodeType":"YulAssignment","src":"40999:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41022:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41004:17:20"},"nodeType":"YulFunctionCall","src":"41004:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40999:1:20"}]},{"nodeType":"YulAssignment","src":"41033:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41056:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41038:17:20"},"nodeType":"YulFunctionCall","src":"41038:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41033:1:20"}]},{"body":{"nodeType":"YulBlock","src":"41080:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41082:16:20"},"nodeType":"YulFunctionCall","src":"41082:18:20"},"nodeType":"YulExpressionStatement","src":"41082:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41074:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"41077:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41071:2:20"},"nodeType":"YulFunctionCall","src":"41071:8:20"},"nodeType":"YulIf","src":"41068:2:20"},{"nodeType":"YulAssignment","src":"41112:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41124:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"41127:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41120:3:20"},"nodeType":"YulFunctionCall","src":"41120:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"41112:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40975:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40978:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"40984:4:20","type":""}],"src":"40944:191:20"},{"body":{"nodeType":"YulBlock","src":"41186:51:20","statements":[{"nodeType":"YulAssignment","src":"41196:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41225:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"41207:17:20"},"nodeType":"YulFunctionCall","src":"41207:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41196:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41168:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41178:7:20","type":""}],"src":"41141:96:20"},{"body":{"nodeType":"YulBlock","src":"41285:48:20","statements":[{"nodeType":"YulAssignment","src":"41295:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41320:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41313:6:20"},"nodeType":"YulFunctionCall","src":"41313:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41306:6:20"},"nodeType":"YulFunctionCall","src":"41306:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41295:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41267:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41277:7:20","type":""}],"src":"41243:90:20"},{"body":{"nodeType":"YulBlock","src":"41384:32:20","statements":[{"nodeType":"YulAssignment","src":"41394:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"41405:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41394:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41366:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41376:7:20","type":""}],"src":"41339:77:20"},{"body":{"nodeType":"YulBlock","src":"41466:105:20","statements":[{"nodeType":"YulAssignment","src":"41476:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41491:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41498:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41487:3:20"},"nodeType":"YulFunctionCall","src":"41487:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41476:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41448:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41458:7:20","type":""}],"src":"41422:149:20"},{"body":{"nodeType":"YulBlock","src":"41621:45:20","statements":[{"nodeType":"YulAssignment","src":"41631:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41646:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41653:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41642:3:20"},"nodeType":"YulFunctionCall","src":"41642:18:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41631:7:20"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41603:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41613:7:20","type":""}],"src":"41577:89:20"},{"body":{"nodeType":"YulBlock","src":"41717:81:20","statements":[{"nodeType":"YulAssignment","src":"41727:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41742:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41749:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41738:3:20"},"nodeType":"YulFunctionCall","src":"41738:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41727:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41699:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41709:7:20","type":""}],"src":"41672:126:20"},{"body":{"nodeType":"YulBlock","src":"41849:32:20","statements":[{"nodeType":"YulAssignment","src":"41859:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"41870:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41859:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41831:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41841:7:20","type":""}],"src":"41804:77:20"},{"body":{"nodeType":"YulBlock","src":"41931:49:20","statements":[{"nodeType":"YulAssignment","src":"41941:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41956:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41963:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41952:3:20"},"nodeType":"YulFunctionCall","src":"41952:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41941:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41913:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41923:7:20","type":""}],"src":"41887:93:20"},{"body":{"nodeType":"YulBlock","src":"42030:57:20","statements":[{"nodeType":"YulAssignment","src":"42040:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42055:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"42062:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42051:3:20"},"nodeType":"YulFunctionCall","src":"42051:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"42040:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42012:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"42022:7:20","type":""}],"src":"41986:101:20"},{"body":{"nodeType":"YulBlock","src":"42136:43:20","statements":[{"nodeType":"YulAssignment","src":"42146:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42161:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"42168:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42157:3:20"},"nodeType":"YulFunctionCall","src":"42157:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"42146:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42118:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"42128:7:20","type":""}],"src":"42093:86:20"},{"body":{"nodeType":"YulBlock","src":"42236:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"42259:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"42264:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"42269:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"42246:12:20"},"nodeType":"YulFunctionCall","src":"42246:30:20"},"nodeType":"YulExpressionStatement","src":"42246:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"42317:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"42322:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42313:3:20"},"nodeType":"YulFunctionCall","src":"42313:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"42331:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42306:6:20"},"nodeType":"YulFunctionCall","src":"42306:27:20"},"nodeType":"YulExpressionStatement","src":"42306:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"42218:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"42223:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"42228:6:20","type":""}],"src":"42185:154:20"},{"body":{"nodeType":"YulBlock","src":"42394:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"42404:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"42413:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"42408:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42473:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"42498:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"42503:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42494:3:20"},"nodeType":"YulFunctionCall","src":"42494:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42517:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"42522:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42513:3:20"},"nodeType":"YulFunctionCall","src":"42513:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42507:5:20"},"nodeType":"YulFunctionCall","src":"42507:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42487:6:20"},"nodeType":"YulFunctionCall","src":"42487:39:20"},"nodeType":"YulExpressionStatement","src":"42487:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42434:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"42437:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42431:2:20"},"nodeType":"YulFunctionCall","src":"42431:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"42445:19:20","statements":[{"nodeType":"YulAssignment","src":"42447:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42456:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"42459:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42452:3:20"},"nodeType":"YulFunctionCall","src":"42452:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"42447:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"42427:3:20","statements":[]},"src":"42423:113:20"},{"body":{"nodeType":"YulBlock","src":"42570:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"42620:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"42625:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42616:3:20"},"nodeType":"YulFunctionCall","src":"42616:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"42634:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42609:6:20"},"nodeType":"YulFunctionCall","src":"42609:27:20"},"nodeType":"YulExpressionStatement","src":"42609:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42551:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"42554:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42548:2:20"},"nodeType":"YulFunctionCall","src":"42548:13:20"},"nodeType":"YulIf","src":"42545:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"42376:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"42381:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"42386:6:20","type":""}],"src":"42345:307:20"},{"body":{"nodeType":"YulBlock","src":"42709:269:20","statements":[{"nodeType":"YulAssignment","src":"42719:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42733:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"42739:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"42729:3:20"},"nodeType":"YulFunctionCall","src":"42729:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42719:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"42750:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42780:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"42786:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42776:3:20"},"nodeType":"YulFunctionCall","src":"42776:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"42754:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42827:51:20","statements":[{"nodeType":"YulAssignment","src":"42841:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42855:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42863:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42851:3:20"},"nodeType":"YulFunctionCall","src":"42851:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42841:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42807:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42800:6:20"},"nodeType":"YulFunctionCall","src":"42800:26:20"},"nodeType":"YulIf","src":"42797:2:20"},{"body":{"nodeType":"YulBlock","src":"42930:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"42944:16:20"},"nodeType":"YulFunctionCall","src":"42944:18:20"},"nodeType":"YulExpressionStatement","src":"42944:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42894:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42917:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42925:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42914:2:20"},"nodeType":"YulFunctionCall","src":"42914:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"42891:2:20"},"nodeType":"YulFunctionCall","src":"42891:38:20"},"nodeType":"YulIf","src":"42888:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42693:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42702:6:20","type":""}],"src":"42658:320:20"},{"body":{"nodeType":"YulBlock","src":"43027:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"43037:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43059:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"43089:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"43067:21:20"},"nodeType":"YulFunctionCall","src":"43067:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43055:3:20"},"nodeType":"YulFunctionCall","src":"43055:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"43041:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"43206:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"43208:16:20"},"nodeType":"YulFunctionCall","src":"43208:18:20"},"nodeType":"YulExpressionStatement","src":"43208:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"43149:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"43161:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43146:2:20"},"nodeType":"YulFunctionCall","src":"43146:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"43185:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"43197:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43182:2:20"},"nodeType":"YulFunctionCall","src":"43182:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"43143:2:20"},"nodeType":"YulFunctionCall","src":"43143:62:20"},"nodeType":"YulIf","src":"43140:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43244:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"43248:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43237:6:20"},"nodeType":"YulFunctionCall","src":"43237:22:20"},"nodeType":"YulExpressionStatement","src":"43237:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43013:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"43021:4:20","type":""}],"src":"42984:281:20"},{"body":{"nodeType":"YulBlock","src":"43314:190:20","statements":[{"nodeType":"YulAssignment","src":"43324:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43351:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43333:17:20"},"nodeType":"YulFunctionCall","src":"43333:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43324:5:20"}]},{"body":{"nodeType":"YulBlock","src":"43447:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43449:16:20"},"nodeType":"YulFunctionCall","src":"43449:18:20"},"nodeType":"YulExpressionStatement","src":"43449:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43372:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43379:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43369:2:20"},"nodeType":"YulFunctionCall","src":"43369:77:20"},"nodeType":"YulIf","src":"43366:2:20"},{"nodeType":"YulAssignment","src":"43478:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43489:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43496:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43485:3:20"},"nodeType":"YulFunctionCall","src":"43485:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"43478:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43300:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"43310:3:20","type":""}],"src":"43271:233:20"},{"body":{"nodeType":"YulBlock","src":"43551:126:20","statements":[{"nodeType":"YulAssignment","src":"43561:31:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43586:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"43570:15:20"},"nodeType":"YulFunctionCall","src":"43570:22:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43561:5:20"}]},{"body":{"nodeType":"YulBlock","src":"43620:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43622:16:20"},"nodeType":"YulFunctionCall","src":"43622:18:20"},"nodeType":"YulExpressionStatement","src":"43622:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43607:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43614:4:20","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43604:2:20"},"nodeType":"YulFunctionCall","src":"43604:15:20"},"nodeType":"YulIf","src":"43601:2:20"},{"nodeType":"YulAssignment","src":"43651:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43662:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43669:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43658:3:20"},"nodeType":"YulFunctionCall","src":"43658:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"43651:3:20"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43537:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"43547:3:20","type":""}],"src":"43510:167:20"},{"body":{"nodeType":"YulBlock","src":"43717:142:20","statements":[{"nodeType":"YulAssignment","src":"43727:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43750:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43732:17:20"},"nodeType":"YulFunctionCall","src":"43732:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43727:1:20"}]},{"nodeType":"YulAssignment","src":"43761:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43784:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43766:17:20"},"nodeType":"YulFunctionCall","src":"43766:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43761:1:20"}]},{"body":{"nodeType":"YulBlock","src":"43808:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43810:16:20"},"nodeType":"YulFunctionCall","src":"43810:18:20"},"nodeType":"YulExpressionStatement","src":"43810:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43805:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43798:6:20"},"nodeType":"YulFunctionCall","src":"43798:9:20"},"nodeType":"YulIf","src":"43795:2:20"},{"nodeType":"YulAssignment","src":"43839:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43848:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"43851:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"43844:3:20"},"nodeType":"YulFunctionCall","src":"43844:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43839:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43706:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"43709:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43715:1:20","type":""}],"src":"43683:176:20"},{"body":{"nodeType":"YulBlock","src":"43893:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43910:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43913:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43903:6:20"},"nodeType":"YulFunctionCall","src":"43903:88:20"},"nodeType":"YulExpressionStatement","src":"43903:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44007:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44010:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44000:6:20"},"nodeType":"YulFunctionCall","src":"44000:15:20"},"nodeType":"YulExpressionStatement","src":"44000:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44031:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44034:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44024:6:20"},"nodeType":"YulFunctionCall","src":"44024:15:20"},"nodeType":"YulExpressionStatement","src":"44024:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"43865:180:20"},{"body":{"nodeType":"YulBlock","src":"44079:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44096:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44099:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44089:6:20"},"nodeType":"YulFunctionCall","src":"44089:88:20"},"nodeType":"YulExpressionStatement","src":"44089:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44193:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44196:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44186:6:20"},"nodeType":"YulFunctionCall","src":"44186:15:20"},"nodeType":"YulExpressionStatement","src":"44186:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44217:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44220:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44210:6:20"},"nodeType":"YulFunctionCall","src":"44210:15:20"},"nodeType":"YulExpressionStatement","src":"44210:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"44051:180:20"},{"body":{"nodeType":"YulBlock","src":"44265:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44282:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44285:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44275:6:20"},"nodeType":"YulFunctionCall","src":"44275:88:20"},"nodeType":"YulExpressionStatement","src":"44275:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44379:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44382:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44372:6:20"},"nodeType":"YulFunctionCall","src":"44372:15:20"},"nodeType":"YulExpressionStatement","src":"44372:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44403:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44406:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44396:6:20"},"nodeType":"YulFunctionCall","src":"44396:15:20"},"nodeType":"YulExpressionStatement","src":"44396:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"44237:180:20"},{"body":{"nodeType":"YulBlock","src":"44451:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44468:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44471:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44461:6:20"},"nodeType":"YulFunctionCall","src":"44461:88:20"},"nodeType":"YulExpressionStatement","src":"44461:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44565:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44568:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44558:6:20"},"nodeType":"YulFunctionCall","src":"44558:15:20"},"nodeType":"YulExpressionStatement","src":"44558:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44589:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44592:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44582:6:20"},"nodeType":"YulFunctionCall","src":"44582:15:20"},"nodeType":"YulExpressionStatement","src":"44582:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"44423:180:20"},{"body":{"nodeType":"YulBlock","src":"44657:54:20","statements":[{"nodeType":"YulAssignment","src":"44667:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44685:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"44692:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44681:3:20"},"nodeType":"YulFunctionCall","src":"44681:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44701:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"44697:3:20"},"nodeType":"YulFunctionCall","src":"44697:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44677:3:20"},"nodeType":"YulFunctionCall","src":"44677:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"44667:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44640:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"44650:6:20","type":""}],"src":"44609:102:20"},{"body":{"nodeType":"YulBlock","src":"44823:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44845:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44853:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44841:3:20"},"nodeType":"YulFunctionCall","src":"44841:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"44857:34:20","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44834:6:20"},"nodeType":"YulFunctionCall","src":"44834:58:20"},"nodeType":"YulExpressionStatement","src":"44834:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44913:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44921:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44909:3:20"},"nodeType":"YulFunctionCall","src":"44909:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"44926:13:20","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44902:6:20"},"nodeType":"YulFunctionCall","src":"44902:38:20"},"nodeType":"YulExpressionStatement","src":"44902:38:20"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44815:6:20","type":""}],"src":"44717:230:20"},{"body":{"nodeType":"YulBlock","src":"45059:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45081:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45089:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45077:3:20"},"nodeType":"YulFunctionCall","src":"45077:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45093:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45070:6:20"},"nodeType":"YulFunctionCall","src":"45070:58:20"},"nodeType":"YulExpressionStatement","src":"45070:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45149:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45157:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45145:3:20"},"nodeType":"YulFunctionCall","src":"45145:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"45162:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45138:6:20"},"nodeType":"YulFunctionCall","src":"45138:45:20"},"nodeType":"YulExpressionStatement","src":"45138:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45051:6:20","type":""}],"src":"44953:237:20"},{"body":{"nodeType":"YulBlock","src":"45302:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45324:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45332:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45320:3:20"},"nodeType":"YulFunctionCall","src":"45320:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45336:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45313:6:20"},"nodeType":"YulFunctionCall","src":"45313:58:20"},"nodeType":"YulExpressionStatement","src":"45313:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45392:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45400:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45388:3:20"},"nodeType":"YulFunctionCall","src":"45388:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"45405:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45381:6:20"},"nodeType":"YulFunctionCall","src":"45381:33:20"},"nodeType":"YulExpressionStatement","src":"45381:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45294:6:20","type":""}],"src":"45196:225:20"},{"body":{"nodeType":"YulBlock","src":"45533:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45555:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45563:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45551:3:20"},"nodeType":"YulFunctionCall","src":"45551:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45567:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45544:6:20"},"nodeType":"YulFunctionCall","src":"45544:58:20"},"nodeType":"YulExpressionStatement","src":"45544:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45623:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45631:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45619:3:20"},"nodeType":"YulFunctionCall","src":"45619:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"45636:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45612:6:20"},"nodeType":"YulFunctionCall","src":"45612:32:20"},"nodeType":"YulExpressionStatement","src":"45612:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45525:6:20","type":""}],"src":"45427:224:20"},{"body":{"nodeType":"YulBlock","src":"45763:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45785:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45793:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45781:3:20"},"nodeType":"YulFunctionCall","src":"45781:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45797:30:20","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45774:6:20"},"nodeType":"YulFunctionCall","src":"45774:54:20"},"nodeType":"YulExpressionStatement","src":"45774:54:20"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45755:6:20","type":""}],"src":"45657:178:20"},{"body":{"nodeType":"YulBlock","src":"45947:52:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45969:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45977:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45965:3:20"},"nodeType":"YulFunctionCall","src":"45965:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45981:10:20","type":"","value":"</tspan>"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45958:6:20"},"nodeType":"YulFunctionCall","src":"45958:34:20"},"nodeType":"YulExpressionStatement","src":"45958:34:20"}]},"name":"store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45939:6:20","type":""}],"src":"45841:158:20"},{"body":{"nodeType":"YulBlock","src":"46111:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46133:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46141:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46129:3:20"},"nodeType":"YulFunctionCall","src":"46129:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"46145:66:20","type":"","value":"0x226e616d65223a224e4654222c20000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46122:6:20"},"nodeType":"YulFunctionCall","src":"46122:90:20"},"nodeType":"YulExpressionStatement","src":"46122:90:20"}]},"name":"store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46103:6:20","type":""}],"src":"46005:214:20"},{"body":{"nodeType":"YulBlock","src":"46331:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46353:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46361:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46349:3:20"},"nodeType":"YulFunctionCall","src":"46349:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46365:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46342:6:20"},"nodeType":"YulFunctionCall","src":"46342:58:20"},"nodeType":"YulExpressionStatement","src":"46342:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46421:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46429:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46417:3:20"},"nodeType":"YulFunctionCall","src":"46417:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"46434:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46410:6:20"},"nodeType":"YulFunctionCall","src":"46410:31:20"},"nodeType":"YulExpressionStatement","src":"46410:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46323:6:20","type":""}],"src":"46225:223:20"},{"body":{"nodeType":"YulBlock","src":"46560:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46582:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46590:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46578:3:20"},"nodeType":"YulFunctionCall","src":"46578:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46594:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46571:6:20"},"nodeType":"YulFunctionCall","src":"46571:51:20"},"nodeType":"YulExpressionStatement","src":"46571:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46552:6:20","type":""}],"src":"46454:175:20"},{"body":{"nodeType":"YulBlock","src":"46741:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46763:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46771:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46759:3:20"},"nodeType":"YulFunctionCall","src":"46759:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"46775:66:20","type":"","value":"0x2261747472696275746573223a22222c20000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46752:6:20"},"nodeType":"YulFunctionCall","src":"46752:90:20"},"nodeType":"YulExpressionStatement","src":"46752:90:20"}]},"name":"store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46733:6:20","type":""}],"src":"46635:214:20"},{"body":{"nodeType":"YulBlock","src":"46961:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46983:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46991:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46979:3:20"},"nodeType":"YulFunctionCall","src":"46979:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46995:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46972:6:20"},"nodeType":"YulFunctionCall","src":"46972:58:20"},"nodeType":"YulExpressionStatement","src":"46972:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47051:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47059:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47047:3:20"},"nodeType":"YulFunctionCall","src":"47047:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"47064:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47040:6:20"},"nodeType":"YulFunctionCall","src":"47040:36:20"},"nodeType":"YulExpressionStatement","src":"47040:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46953:6:20","type":""}],"src":"46855:228:20"},{"body":{"nodeType":"YulBlock","src":"47195:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47217:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47225:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47213:3:20"},"nodeType":"YulFunctionCall","src":"47213:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"47229:66:20","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47206:6:20"},"nodeType":"YulFunctionCall","src":"47206:90:20"},"nodeType":"YulExpressionStatement","src":"47206:90:20"}]},"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47187:6:20","type":""}],"src":"47089:214:20"},{"body":{"nodeType":"YulBlock","src":"47415:209:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47437:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47445:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47433:3:20"},"nodeType":"YulFunctionCall","src":"47433:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"47449:66:20","type":"","value":"0x226465736372697074696f6e223a2242617463682d72657665616c6564204e46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47426:6:20"},"nodeType":"YulFunctionCall","src":"47426:90:20"},"nodeType":"YulExpressionStatement","src":"47426:90:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47537:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47545:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47533:3:20"},"nodeType":"YulFunctionCall","src":"47533:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"47550:66:20","type":"","value":"0x5421222c20000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47526:6:20"},"nodeType":"YulFunctionCall","src":"47526:91:20"},"nodeType":"YulExpressionStatement","src":"47526:91:20"}]},"name":"store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47407:6:20","type":""}],"src":"47309:315:20"},{"body":{"nodeType":"YulBlock","src":"47736:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47758:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47766:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47754:3:20"},"nodeType":"YulFunctionCall","src":"47754:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"47770:66:20","type":"","value":"0x22696d616765223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47747:6:20"},"nodeType":"YulFunctionCall","src":"47747:90:20"},"nodeType":"YulExpressionStatement","src":"47747:90:20"}]},"name":"store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47728:6:20","type":""}],"src":"47630:214:20"},{"body":{"nodeType":"YulBlock","src":"47956:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47978:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47986:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47974:3:20"},"nodeType":"YulFunctionCall","src":"47974:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"47990:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47967:6:20"},"nodeType":"YulFunctionCall","src":"47967:58:20"},"nodeType":"YulExpressionStatement","src":"47967:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48046:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48054:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48042:3:20"},"nodeType":"YulFunctionCall","src":"48042:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"48059:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48035:6:20"},"nodeType":"YulFunctionCall","src":"48035:57:20"},"nodeType":"YulExpressionStatement","src":"48035:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47948:6:20","type":""}],"src":"47850:249:20"},{"body":{"nodeType":"YulBlock","src":"48211:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48233:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48241:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48229:3:20"},"nodeType":"YulFunctionCall","src":"48229:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48245:34:20","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48222:6:20"},"nodeType":"YulFunctionCall","src":"48222:58:20"},"nodeType":"YulExpressionStatement","src":"48222:58:20"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48203:6:20","type":""}],"src":"48105:182:20"},{"body":{"nodeType":"YulBlock","src":"48399:37:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48417:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48425:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48413:3:20"},"nodeType":"YulFunctionCall","src":"48413:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48429:3:20","type":"","value":"}"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48406:6:20"},"nodeType":"YulFunctionCall","src":"48406:27:20"},"nodeType":"YulExpressionStatement","src":"48406:27:20"}]},"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48391:6:20","type":""}],"src":"48293:143:20"},{"body":{"nodeType":"YulBlock","src":"48544:100:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48562:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48570:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48558:3:20"},"nodeType":"YulFunctionCall","src":"48558:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"48574:66:20","type":"","value":"0x3c747370616e20783d223132222064793d223438223e00000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48551:6:20"},"nodeType":"YulFunctionCall","src":"48551:90:20"},"nodeType":"YulExpressionStatement","src":"48551:90:20"}]},"name":"store_literal_in_memory_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48536:6:20","type":""}],"src":"48438:206:20"},{"body":{"nodeType":"YulBlock","src":"48752:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48770:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48778:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48766:3:20"},"nodeType":"YulFunctionCall","src":"48766:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48782:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48759:6:20"},"nodeType":"YulFunctionCall","src":"48759:58:20"},"nodeType":"YulExpressionStatement","src":"48759:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48744:6:20","type":""}],"src":"48646:174:20"},{"body":{"nodeType":"YulBlock","src":"48928:41:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48946:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48954:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48942:3:20"},"nodeType":"YulFunctionCall","src":"48942:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48958:3:20","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48935:6:20"},"nodeType":"YulFunctionCall","src":"48935:27:20"},"nodeType":"YulExpressionStatement","src":"48935:27:20"}]},"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48920:6:20","type":""}],"src":"48822:147:20"},{"body":{"nodeType":"YulBlock","src":"49081:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49103:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49111:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49099:3:20"},"nodeType":"YulFunctionCall","src":"49099:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49115:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49092:6:20"},"nodeType":"YulFunctionCall","src":"49092:50:20"},"nodeType":"YulExpressionStatement","src":"49092:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49073:6:20","type":""}],"src":"48975:174:20"},{"body":{"nodeType":"YulBlock","src":"49261:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49283:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49291:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49279:3:20"},"nodeType":"YulFunctionCall","src":"49279:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49295:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49272:6:20"},"nodeType":"YulFunctionCall","src":"49272:58:20"},"nodeType":"YulExpressionStatement","src":"49272:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49351:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49359:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49347:3:20"},"nodeType":"YulFunctionCall","src":"49347:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"49364:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49340:6:20"},"nodeType":"YulFunctionCall","src":"49340:28:20"},"nodeType":"YulExpressionStatement","src":"49340:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49253:6:20","type":""}],"src":"49155:220:20"},{"body":{"nodeType":"YulBlock","src":"49487:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49509:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49517:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49505:3:20"},"nodeType":"YulFunctionCall","src":"49505:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49521:31:20","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49498:6:20"},"nodeType":"YulFunctionCall","src":"49498:55:20"},"nodeType":"YulExpressionStatement","src":"49498:55:20"}]},"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49479:6:20","type":""}],"src":"49381:179:20"},{"body":{"nodeType":"YulBlock","src":"49672:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49664:6:20","type":""}],"src":"49566:114:20"},{"body":{"nodeType":"YulBlock","src":"49792:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49814:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49822:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49810:3:20"},"nodeType":"YulFunctionCall","src":"49810:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49826:34:20","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49803:6:20"},"nodeType":"YulFunctionCall","src":"49803:58:20"},"nodeType":"YulExpressionStatement","src":"49803:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49882:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49890:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49878:3:20"},"nodeType":"YulFunctionCall","src":"49878:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"49895:14:20","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49871:6:20"},"nodeType":"YulFunctionCall","src":"49871:39:20"},"nodeType":"YulExpressionStatement","src":"49871:39:20"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49784:6:20","type":""}],"src":"49686:231:20"},{"body":{"nodeType":"YulBlock","src":"50029:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50051:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"50059:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50047:3:20"},"nodeType":"YulFunctionCall","src":"50047:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"50063:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50040:6:20"},"nodeType":"YulFunctionCall","src":"50040:58:20"},"nodeType":"YulExpressionStatement","src":"50040:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50119:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"50127:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50115:3:20"},"nodeType":"YulFunctionCall","src":"50115:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"50132:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50108:6:20"},"nodeType":"YulFunctionCall","src":"50108:41:20"},"nodeType":"YulExpressionStatement","src":"50108:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50021:6:20","type":""}],"src":"49923:233:20"},{"body":{"nodeType":"YulBlock","src":"50205:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"50262:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50271:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50274:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50264:6:20"},"nodeType":"YulFunctionCall","src":"50264:12:20"},"nodeType":"YulExpressionStatement","src":"50264:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50228:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50253:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"50235:17:20"},"nodeType":"YulFunctionCall","src":"50235:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50225:2:20"},"nodeType":"YulFunctionCall","src":"50225:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50218:6:20"},"nodeType":"YulFunctionCall","src":"50218:43:20"},"nodeType":"YulIf","src":"50215:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50198:5:20","type":""}],"src":"50162:122:20"},{"body":{"nodeType":"YulBlock","src":"50330:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"50384:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50393:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50396:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50386:6:20"},"nodeType":"YulFunctionCall","src":"50386:12:20"},"nodeType":"YulExpressionStatement","src":"50386:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50353:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50375:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"50360:14:20"},"nodeType":"YulFunctionCall","src":"50360:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50350:2:20"},"nodeType":"YulFunctionCall","src":"50350:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50343:6:20"},"nodeType":"YulFunctionCall","src":"50343:40:20"},"nodeType":"YulIf","src":"50340:2:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50323:5:20","type":""}],"src":"50290:116:20"},{"body":{"nodeType":"YulBlock","src":"50454:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"50510:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50519:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50522:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50512:6:20"},"nodeType":"YulFunctionCall","src":"50512:12:20"},"nodeType":"YulExpressionStatement","src":"50512:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50477:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50501:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"50484:16:20"},"nodeType":"YulFunctionCall","src":"50484:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50474:2:20"},"nodeType":"YulFunctionCall","src":"50474:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50467:6:20"},"nodeType":"YulFunctionCall","src":"50467:42:20"},"nodeType":"YulIf","src":"50464:2:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50447:5:20","type":""}],"src":"50412:120:20"},{"body":{"nodeType":"YulBlock","src":"50581:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"50638:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50647:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50650:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50640:6:20"},"nodeType":"YulFunctionCall","src":"50640:12:20"},"nodeType":"YulExpressionStatement","src":"50640:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50604:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50629:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"50611:17:20"},"nodeType":"YulFunctionCall","src":"50611:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50601:2:20"},"nodeType":"YulFunctionCall","src":"50601:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50594:6:20"},"nodeType":"YulFunctionCall","src":"50594:43:20"},"nodeType":"YulIf","src":"50591:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50574:5:20","type":""}],"src":"50538:122:20"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23(pos)\n        end := add(pos, 8)\n    }\n\n    function abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 14)\n        store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45(pos)\n        end := add(pos, 14)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 37)\n        store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74(pos)\n        end := add(pos, 37)\n    }\n\n    function abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 22)\n        store_literal_in_memory_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5(pos)\n        end := add(pos, 22)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 29)\n        store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(pos)\n        end := add(pos, 29)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value6, value5, value4, value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value5,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value6,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_t_string_memory_ptr_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint8(x, y) -> product {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23(memPtr) {\n\n        mstore(add(memPtr, 0), \"</tspan>\")\n\n    }\n\n    function store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226e616d65223a224e4654222c20000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a22222c20000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226465736372697074696f6e223a2242617463682d72657665616c6564204e46)\n\n        mstore(add(memPtr, 32), 0x5421222c20000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551(memPtr) {\n\n        mstore(add(memPtr, 0), 0x22696d616765223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(memPtr) {\n\n    mstore(add(memPtr, 0), \"}\")\n\n}\n\nfunction store_literal_in_memory_939383a2668affc71c115b78be5ab625d2c6b3fbc515c067b034d0667c517da5(memPtr) {\n\n    mstore(add(memPtr, 0), 0x3c747370616e20783d223132222064793d223438223e00000000000000000000)\n\n}\n\nfunction store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n    mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n}\n\nfunction store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(memPtr) {\n\n    mstore(add(memPtr, 0), \"{\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"data:application/json;base64,\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"49":[{"length":32,"start":3131},{"length":32,"start":3215}],"2430":[{"length":32,"start":5184},{"length":32,"start":5900}],"2432":[{"length":32,"start":5286},{"length":32,"start":5595}],"2457":[{"length":32,"start":4749}],"2459":[{"length":32,"start":4842}],"2461":[{"length":32,"start":4809}],"2463":[{"length":32,"start":4877}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCF3B94CD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCF3B94CD EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0xF4DAABA1 EQ PUSH2 0x829 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xBBD78E93 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xBDB4B848 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x730 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x96634A40 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xAAAE4E23 EQ PUSH2 0x688 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B4FAB5A EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x5D6 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x247CD8AD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x5C65D81F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x52C JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x247CD8AD EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x422 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1DCD9B55 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x368 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3B6A JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x3C23 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0xE28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x4362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57E PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C0 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EB PUSH2 0x10BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x3A5B JUMP JUMPDEST PUSH2 0x1543 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71A PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x43E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x782 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AD PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x827 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83E PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP3 PUSH2 0x1852 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8DD SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x909 SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x92B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x956 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x939 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96B DUP3 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B1 DUP3 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x4587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA41 PUSH2 0x197F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA70 JUMPI POP PUSH2 0xA6F DUP2 PUSH2 0xA6A PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST JUMPDEST PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x4507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP4 DUP4 PUSH2 0x1987 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP5 DUP5 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB51 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC2C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0xC24 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB5A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCEB JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP3 SWAP2 SWAP1 PUSH2 0x42D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF5 DUP3 DUP3 PUSH2 0x1A40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xD04 PUSH2 0x197F JUMP JUMPDEST DUP3 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD40 SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD54 DUP4 DUP4 DUP4 PUSH2 0x1B23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP4 PUSH2 0xFBE JUMP JUMPDEST DUP3 LT PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA6 SWAP1 PUSH2 0x4407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE23 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x156B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE30 PUSH2 0x1204 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F PUSH2 0xABE JUMP JUMPDEST DUP3 LT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x45A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xFB5 JUMPI POP PUSH2 0xFB4 PUSH2 0x167F JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP1 PUSH2 0x44E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x107E PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x1088 PUSH1 0x0 PUSH2 0x1E08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10C5 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH2 0x1094 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA5B23000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1181 SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11AD SWAP1 PUSH2 0x49B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0CF055400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1255 PUSH2 0x167F JUMP JUMPDEST PUSH2 0x128B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E628EBC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x137C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x3BFA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D83BDD6DB199FF596CEC09EA8E4F4E50DA2DCB4020BC2A1CF072C507056B1EA DUP2 PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x45E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1401 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 DUP3 PUSH2 0x146B SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST GT ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH32 0x0 PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x47EA JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x153E JUMPI PUSH2 0x152B CALLER DUP3 DUP5 PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1536 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x150F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1555 PUSH2 0x154E PUSH2 0x197F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1EEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1561 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x157C PUSH2 0x1576 PUSH2 0x197F JUMP JUMPDEST DUP4 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B2 SWAP1 PUSH2 0x45C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15C7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2057 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x160A DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9430A17E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x164C DUP5 PUSH2 0x211F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x165C DUP4 DUP4 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1669 DUP3 PUSH2 0x28A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1674 DUP2 PUSH2 0x293C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD PUSH2 0x168D PUSH2 0xABE JUMP JUMPDEST PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD GT DUP1 ISZERO PUSH2 0x16C1 JUMPI POP PUSH1 0xC SLOAD DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x16CB JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD GT DUP1 ISZERO PUSH2 0x16EC JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x16EA SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 DUP1 PUSH2 0x16FF JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CC PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1833 SWAP1 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x1E08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x191D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x192D JUMPI POP PUSH2 0x192C DUP3 PUSH2 0x298C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193D DUP2 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1973 SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19FA DUP4 PUSH2 0xEDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A7D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A9A DUP4 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1ADC JUMPI POP PUSH2 0x1ADB DUP2 DUP6 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B1A JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B02 DUP5 PUSH2 0x960 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B43 DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B90 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP1 PUSH2 0x44A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C14 DUP4 DUP4 DUP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH2 0x1C1F PUSH1 0x0 DUP3 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D85 DUP4 DUP4 DUP4 PUSH2 0x2C08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D92 PUSH2 0x197F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB0 PUSH2 0x1094 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFD SWAP1 PUSH2 0x4547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EE6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F50 SWAP1 PUSH2 0x44C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x204A SWAP2 SWAP1 PUSH2 0x4347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2062 DUP5 DUP5 DUP5 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x206E DUP5 DUP5 DUP5 DUP5 PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0x20AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A4 SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x226D JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x216C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x21D7 JUMPI POP PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x225A JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2216 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x223A SWAP3 SWAP2 SWAP1 PUSH2 0x4602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2265 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2125 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x227D PUSH2 0x36B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x62 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5216 PUSH1 0x62 SWAP2 CODECOPY DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x22D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP3 ISZERO PUSH2 0x2636 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5189 PUSH1 0x8D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2331 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x2341 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C DUP7 PUSH2 0x2DFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 PUSH2 0x2394 DUP4 PUSH1 0xB DUP5 PUSH2 0x2370 SWAP2 SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x1 DUP7 PUSH2 0x2382 SWAP2 SWAP1 PUSH2 0x4782 JUMP JUMPDEST PUSH2 0x238C SWAP2 SWAP1 PUSH2 0x4844 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xACB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23A7 SWAP2 SWAP1 PUSH2 0x41EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP4 PUSH1 0xFF AND PUSH1 0x7 DUP2 LT PUSH2 0x23F2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x2406 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2351 JUMP JUMPDEST POP DUP2 PUSH1 0x0 PUSH1 0x7 DUP2 LT PUSH2 0x2449 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x7 DUP2 LT PUSH2 0x2488 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x2 PUSH1 0x7 DUP2 LT PUSH2 0x24C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x3 PUSH1 0x7 DUP2 LT PUSH2 0x2506 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x4 PUSH1 0x7 DUP2 LT PUSH2 0x2545 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x5 PUSH1 0x7 DUP2 LT PUSH2 0x2584 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x6 PUSH1 0x7 DUP2 LT PUSH2 0x25C3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25DE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2627 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP POP PUSH2 0x270A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x52B8 PUSH1 0x9D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2689 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2701 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3C2F746578743E3C2F7376673E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x277A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x27BC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x27FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x283A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2879 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2891 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x414C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x290F DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28FB SWAP2 SWAP1 PUSH2 0x4111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2FAC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2924 SWAP3 SWAP2 SWAP1 PUSH2 0x4128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2966 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2952 SWAP2 SWAP1 PUSH2 0x421C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2976 SWAP2 SWAP1 PUSH2 0x4280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A00 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x2A13 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2A24 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA39D9410ABE7578BFBF71501989F175C50A6950B6595718DD8092474541C889B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AE6 SWAP3 SWAP2 SWAP1 PUSH2 0x4602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x2AFF DUP4 DUP4 DUP4 PUSH2 0x3136 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B42 JUMPI PUSH2 0x2B3D DUP2 PUSH2 0x313B JUMP JUMPDEST PUSH2 0x2B81 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B80 JUMPI PUSH2 0x2B7F DUP4 DUP3 PUSH2 0x3184 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BC4 JUMPI PUSH2 0x2BBF DUP2 PUSH2 0x32F1 JUMP JUMPDEST PUSH2 0x2C03 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C02 JUMPI PUSH2 0x2C01 DUP3 DUP3 PUSH2 0x3434 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C17 DUP4 DUP4 PUSH2 0x34B3 JUMP JUMPDEST PUSH2 0x2C24 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0x2C63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5A SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C89 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x368D JUMP JUMPDEST ISZERO PUSH2 0x2DF2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2CB2 PUSH2 0x197F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2D1F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1C SWAP2 SWAP1 PUSH2 0x3AFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2DA2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D4F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D91 SWAP1 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2E47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x2E79 JUMPI DUP1 DUP1 PUSH2 0x2E62 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x2E72 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EBB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EED JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x2FA0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x2F06 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x2F15 SWAP2 SWAP1 PUSH2 0x4A88 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2F21 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F5D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2F99 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST SWAP5 POP PUSH2 0x2EF1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x3131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5278 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x2FFE SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH2 0x3008 SWAP2 SWAP1 PUSH2 0x47B9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x3014 SWAP2 SWAP1 PUSH2 0x47EA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3053 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3085 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x30F1 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x3096 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x310D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3120 JUMPI PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3191 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3280 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x3305 SWAP2 SWAP1 PUSH2 0x487F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x335B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x33A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x3418 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343F DUP4 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3523 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351A SWAP1 PUSH2 0x4527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352C DUP2 PUSH2 0x20B3 JUMP JUMPDEST ISZERO PUSH2 0x356C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3563 SWAP1 PUSH2 0x4487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3578 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x35C8 SWAP2 SWAP1 PUSH2 0x472C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3689 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2C08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x36BF JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x36E6 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3711 PUSH2 0x370C DUP5 PUSH2 0x4650 JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3760 JUMPI DUP2 PUSH2 0x3746 DUP9 DUP3 PUSH2 0x3902 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3733 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377D PUSH2 0x3778 DUP5 PUSH2 0x467C JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37A0 DUP5 DUP3 DUP6 PUSH2 0x4970 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37BB PUSH2 0x37B6 DUP5 PUSH2 0x46AD JUMP JUMPDEST PUSH2 0x462B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x37D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37DE DUP5 DUP3 DUP6 PUSH2 0x4970 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F5 DUP2 PUSH2 0x512C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x380C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x381C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x36FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3834 DUP2 PUSH2 0x5143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3849 DUP2 PUSH2 0x515A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x385E DUP2 PUSH2 0x515A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x388F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x38A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x376A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x38E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3911 DUP2 PUSH2 0x5171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3926 DUP2 PUSH2 0x5171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x394C DUP5 DUP3 DUP6 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3976 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3987 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39B4 DUP7 DUP3 DUP8 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x39C5 DUP7 DUP3 DUP8 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x39D6 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A04 DUP8 DUP3 DUP9 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A15 DUP8 DUP3 DUP9 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A26 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A4F DUP8 DUP3 DUP9 ADD PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7C DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A8D DUP6 DUP3 DUP7 ADD PUSH2 0x3825 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AB8 DUP6 DUP3 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3AC9 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AF3 DUP5 DUP3 DUP6 ADD PUSH2 0x383A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B1C DUP5 DUP3 DUP6 ADD PUSH2 0x384F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B5E DUP6 DUP3 DUP7 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BA5 DUP7 DUP3 DUP8 ADD PUSH2 0x38D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BB6 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3BC7 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BF1 DUP5 DUP3 DUP6 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C1A DUP5 DUP3 DUP6 ADD PUSH2 0x3917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C44 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C6D DUP6 DUP3 DUP7 ADD PUSH2 0x37FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C80 DUP2 PUSH2 0x48B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C8F DUP2 PUSH2 0x48C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C9E DUP2 PUSH2 0x48D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAF DUP3 PUSH2 0x46DE JUMP JUMPDEST PUSH2 0x3CB9 DUP2 DUP6 PUSH2 0x46F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST PUSH2 0x3CD2 DUP2 PUSH2 0x4B75 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE8 DUP3 PUSH2 0x46E9 JUMP JUMPDEST PUSH2 0x3CF2 DUP2 DUP6 PUSH2 0x4710 JUMP JUMPDEST SWAP4 POP PUSH2 0x3D02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST PUSH2 0x3D0B DUP2 PUSH2 0x4B75 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP3 PUSH2 0x46E9 JUMP JUMPDEST PUSH2 0x3D2B DUP2 DUP6 PUSH2 0x4721 JUMP JUMPDEST SWAP4 POP PUSH2 0x3D3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x497F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 PUSH1 0x2B DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D5F DUP3 PUSH2 0x4B86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D77 PUSH1 0x32 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D82 DUP3 PUSH2 0x4BD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D9A PUSH1 0x26 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DA5 DUP3 PUSH2 0x4C24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD PUSH1 0x25 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC8 DUP3 PUSH2 0x4C73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE0 PUSH1 0x1C DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DEB DUP3 PUSH2 0x4CC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E03 PUSH1 0x8 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E0E DUP3 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E26 PUSH1 0xE DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E31 DUP3 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E49 PUSH1 0x24 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E54 DUP3 PUSH2 0x4D3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6C PUSH1 0x19 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E77 DUP3 PUSH2 0x4D8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8F PUSH1 0x11 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E9A DUP3 PUSH2 0x4DB5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB2 PUSH1 0x29 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EBD DUP3 PUSH2 0x4DDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED5 PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE0 DUP3 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF8 PUSH1 0x25 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F03 DUP3 PUSH2 0x4E56 JUMP JUMPDEST PUSH1 0x25 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1B PUSH1 0x9 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F26 DUP3 PUSH2 0x4EA5 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3E PUSH1 0x3E DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F49 DUP3 PUSH2 0x4ECE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F61 PUSH1 0x20 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6C DUP3 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F84 PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F8F DUP3 PUSH2 0x4F46 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 PUSH1 0x16 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB2 DUP3 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FCA PUSH1 0x20 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD5 DUP3 PUSH2 0x4F98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FED PUSH1 0x1 DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FF8 DUP3 PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4010 PUSH1 0x18 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x401B DUP3 PUSH2 0x4FEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4033 PUSH1 0x21 DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x403E DUP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4056 PUSH1 0x1D DUP4 PUSH2 0x4721 JUMP JUMPDEST SWAP2 POP PUSH2 0x4061 DUP3 PUSH2 0x5062 JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4079 PUSH1 0x0 DUP4 PUSH2 0x4705 JUMP JUMPDEST SWAP2 POP PUSH2 0x4084 DUP3 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409C PUSH1 0x2C DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x40A7 DUP3 PUSH2 0x508E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40BF PUSH1 0x2E DUP4 PUSH2 0x4710 JUMP JUMPDEST SWAP2 POP PUSH2 0x40CA DUP3 PUSH2 0x50DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40DE DUP2 PUSH2 0x4907 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40ED DUP2 PUSH2 0x4935 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40FC DUP2 PUSH2 0x493F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x410B DUP2 PUSH2 0x494F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411D DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4134 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4140 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4158 DUP3 DUP8 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4164 DUP3 DUP7 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4170 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x417C DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4196 DUP3 DUP11 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41A2 DUP3 DUP10 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41AE DUP3 DUP9 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41BA DUP3 DUP8 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41C6 DUP3 DUP7 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D2 DUP3 DUP6 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x41DE DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41FA DUP3 PUSH2 0x3F9A JUMP JUMPDEST SWAP2 POP PUSH2 0x4206 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x4211 DUP3 PUSH2 0x3DF6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4227 DUP3 PUSH2 0x3FE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4232 DUP3 PUSH2 0x3E19 JUMP JUMPDEST SWAP2 POP PUSH2 0x423D DUP3 PUSH2 0x3EEB JUMP JUMPDEST SWAP2 POP PUSH2 0x4248 DUP3 PUSH2 0x3E82 JUMP JUMPDEST SWAP2 POP PUSH2 0x4253 DUP3 PUSH2 0x3F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x425F DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x426A DUP3 PUSH2 0x3EC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4275 DUP3 PUSH2 0x3F77 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428B DUP3 PUSH2 0x4049 JUMP JUMPDEST SWAP2 POP PUSH2 0x4297 DUP3 DUP5 PUSH2 0x3D16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AD DUP3 PUSH2 0x406C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42E7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x42F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4310 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x431D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3C77 JUMP JUMPDEST PUSH2 0x432A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x433C DUP2 DUP5 PUSH2 0x3CA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x435C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4377 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C86 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4389 DUP2 DUP5 PUSH2 0x3CA4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43A7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3C95 JUMP JUMPDEST PUSH2 0x43B4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4102 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x40D5 JUMP JUMPDEST PUSH2 0x43CE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40F3 JUMP JUMPDEST PUSH2 0x43DB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43FF DUP2 DUP5 PUSH2 0x3CDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4420 DUP2 PUSH2 0x3D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4440 DUP2 PUSH2 0x3D6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4460 DUP2 PUSH2 0x3D8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4480 DUP2 PUSH2 0x3DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44A0 DUP2 PUSH2 0x3DD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44C0 DUP2 PUSH2 0x3E3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44E0 DUP2 PUSH2 0x3E5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4500 DUP2 PUSH2 0x3EA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4520 DUP2 PUSH2 0x3F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4540 DUP2 PUSH2 0x3F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4560 DUP2 PUSH2 0x3FBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4580 DUP2 PUSH2 0x4003 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45A0 DUP2 PUSH2 0x4026 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C0 DUP2 PUSH2 0x408F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45E0 DUP2 PUSH2 0x40B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4617 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x4624 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4635 PUSH2 0x4646 JUMP JUMPDEST SWAP1 POP PUSH2 0x4641 DUP3 DUP3 PUSH2 0x49E4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x466B JUMPI PUSH2 0x466A PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4697 JUMPI PUSH2 0x4696 PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH2 0x46A0 DUP3 PUSH2 0x4B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x46C8 JUMPI PUSH2 0x46C7 PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST PUSH2 0x46D1 DUP3 PUSH2 0x4B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4737 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4742 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4777 JUMPI PUSH2 0x4776 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478D DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH2 0x4798 DUP4 PUSH2 0x4963 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x47AE JUMPI PUSH2 0x47AD PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C4 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x47CF DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x47DF JUMPI PUSH2 0x47DE PUSH2 0x4AE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F5 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4800 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4839 JUMPI PUSH2 0x4838 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484F DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH2 0x485A DUP4 PUSH2 0x4963 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4874 JUMPI PUSH2 0x4873 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488A DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4895 DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x48A8 JUMPI PUSH2 0x48A7 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BE DUP3 PUSH2 0x4915 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x499D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4982 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x49AC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x49CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x49DE JUMPI PUSH2 0x49DD PUSH2 0x4B17 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49ED DUP3 PUSH2 0x4B75 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4A0C JUMPI PUSH2 0x4A0B PUSH2 0x4B46 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A20 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4A53 JUMPI PUSH2 0x4A52 PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A69 DUP3 PUSH2 0x4963 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x4A7D JUMPI PUSH2 0x4A7C PUSH2 0x4AB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A93 DUP3 PUSH2 0x4935 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9E DUP4 PUSH2 0x4935 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4AAE JUMPI PUSH2 0x4AAD PUSH2 0x4AE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C2F747370616E3E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226E616D65223A224E4654222C20000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A22222C20000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2242617463682D72657665616C6564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5421222C20000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x22696D616765223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C747370616E20783D223132222064793D223438223E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5135 DUP2 PUSH2 0x48B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x514C DUP2 PUSH2 0x48C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5163 DUP2 PUSH2 0x48DB JUMP JUMPDEST DUP2 EQ PUSH2 0x516E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x517A DUP2 PUSH2 0x4935 JUMP JUMPDEST DUP2 EQ PUSH2 0x5185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID EXTCODECOPY PUSH20 0x74796C653E2E62617365207B2066696C6C3A2077 PUSH9 0x6974653B20666F6E74 0x2D PUSH7 0x616D696C793A20 PUSH20 0x657269663B20666F6E742D73697A653A20353470 PUSH25 0x3B207D3C2F7374796C653E3C726563742077696474683D2231 ADDRESS ADDRESS 0x25 0x22 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420636C6173733D2262617365223E3C737667 KECCAK256 PUSH25 0x6D6C6E733D22687474703A2F2F7777772E77332E6F72672F32 ADDRESS ADDRESS ADDRESS 0x2F PUSH20 0x7667222070726573657276654173706563745261 PUSH21 0x696F3D22784D696E594D696E206D65657422207669 PUSH6 0x77426F783D22 ADDRESS KECCAK256 ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS 0x22 RETURNDATACOPY COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x2E PUSH3 0x617365 KECCAK256 PUSH28 0x2066696C6C3A2077686974653B20666F6E742D66616D696C793A2073 PUSH6 0x7269663B2066 PUSH16 0x6E742D73697A653A2033353070783B20 PUSH30 0x3C2F7374796C653E3C726563742077696474683D22313030252220686569 PUSH8 0x68743D2231303025 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420783D2239302220793D223239352220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH3 0x617365 0x22 RETURNDATACOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xEF RETURNDATASIZE LOG1 DELEGATECALL 0x49 MLOAD SWAP16 SSTORE 0xBB PC MLOAD LOG3 0xF 0x2A DUP15 EXP DUP2 0x4A PUSH26 0x6239050EA9D5C3D0B5ADDD6C64736F6C63430008040033000000 ","sourceMap":"527:10606:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:222:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:111:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8028:406:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4251:107:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1291:253:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10684:97:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:230:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10972:159:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10471:207:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1929:204:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:5;;;;;;;;;;;;;:::i;:::-;;4033:103:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3215:220:19;;;;;;;;;;;;;:::i;:::-;;2632:102:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9099:585:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2719:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4169:153:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10803:163:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:105:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4364:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3457:459;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8455:638;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4462:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:103:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990:222:9;1092:4;1130:35;1115:50;;;:11;:50;;;;:90;;;;1169:36;1193:11;1169:23;:36::i;:::-;1115:90;1108:97;;990:222;;;:::o;2470:98:6:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3467:407;;;:::o;1615:111:9:-;1676:7;1702:10;:17;;;;1695:24;;1615:111;:::o;8028:406:19:-;8155:13;8180:21;8210:3;8180:34;;8224:19;8267:10;8256:8;:21;;;;:::i;:::-;8246:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8224:54;;8293:9;8305:10;8293:22;;8288:109;8321:8;8317:1;:12;8288:109;;;8375:8;8384:1;8375:11;;;;;;;;;;;;;;;;;;;;;;;;8350:6;8361:10;8357:1;:14;;;;:::i;:::-;8350:22;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;8331:3;;;;;:::i;:::-;;;;8288:109;;;;8420:6;8406:21;;;;8028:406;;;;;:::o;6618:256:2:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:327:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;4251:107:19:-;4309:7;4335:16;;4328:23;;4251:107;:::o;1291:253:9:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:12;:19;1524:5;1511:19;;;;;;;;;;;;;;;:26;1531:5;1511:26;;;;;;;;;;;;1504:33;;1291:253;;;;:::o;5005:179:6:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;10684:97:19:-;10751:23;:21;:23::i;:::-;;10684:97;;:::o;1798:230:9:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:10;2015:5;2004:17;;;;;;;;;;;;;;;;;;;;;;;;1997:24;;1798:230;;;:::o;10972:159:19:-;1094:13:5;:11;:13::i;:::-;11109:15:19::1;11090:16;:34;;;;10972:159:::0;:::o;2190:218:6:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;10471:207:19:-;10572:17;10591:12;10635:18;;;;;;;;;;;10634:19;:37;;;;;10657:14;:12;:14::i;:::-;10634:37;10619:52;;10471:207;;;;;:::o;1929:204:6:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:5:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4033:103:19:-;4089:7;4115:14;;4108:21;;4033:103;:::o;1201:85:5:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3215:220:19:-;1094:13:5;:11;:13::i;:::-;3282:9:19::1;3305:7;:5;:7::i;:::-;3297:21;;3326;3297:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3281:71;;;3367:4;3362:67;;3394:24;;;;;;;;;;;;;;3362:67;1117:1:5;3215:220:19:o:0;2632:102:6:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;9099:585:19:-;9181:17;9213:18;;;;;;;;;;;9209:74;;;9254:18;;;;;;;;;;;;;;9209:74;9297:14;:12;:14::i;:::-;9292:75;;9334:22;;;;;;;;;;;;;;9292:75;9388:18;:37;;;9439:12;9465:19;1253:1;9537:22;1300:1;9388:208;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9376:220;;9627:4;9606:18;;:25;;;;;;;;;;;;;;;;;;9646:31;9667:9;9646:31;;;;;;:::i;:::-;;;;;;;;9099:585;:::o;2719:490::-;2786:19;2808:13;:11;:13::i;:::-;2786:35;;2846:1;2835:7;:12;2831:65;;;2870:15;;;;;;;;;;;;;;2831:65;2933:10;2923:7;2909:11;:21;;;;:::i;:::-;:34;2905:90;;;2966:18;;;;;;;;;;;;;;2905:90;3032:7;3020:9;:19;;;;:::i;:::-;3008:9;:31;3004:88;;;3062:19;;;;;;;;;;;;;;3004:88;3106:9;3118:1;3106:13;;3101:102;3126:7;3121:1;:12;3101:102;;3154:38;3164:10;3190:1;3176:11;:15;;;;:::i;:::-;3154:9;:38::i;:::-;3135:3;;;;;:::i;:::-;;;;3101:102;;;;2719:490;;:::o;4169:153:6:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;10803:163:19:-;1094:13:5;:11;:13::i;:::-;10943:16:19::1;10923:17;:36;;;;10803:163:::0;:::o;5250:315:6:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;3922:105:19:-;3979:7;4005:15;;3998:22;;3922:105;:::o;4364:92::-;4414:7;4440:9;4433:16;;4364:92;:::o;3457:459::-;3554:13;3588:16;3596:7;3588;:16::i;:::-;3583:73;;3627:18;;;;;;;;;;;;;;3583:73;3666:18;3686:20;3710:28;3730:7;3710:19;:28::i;:::-;3665:73;;;;3748:17;3768:41;3781:10;3793:15;3768:12;:41::i;:::-;3748:61;;3819:24;3846:19;3861:3;3846:14;:19::i;:::-;3819:46;;3882:27;3898:10;3882:15;:27::i;:::-;3875:34;;;;;;3457:459;;;:::o;8455:638::-;8509:4;8525:23;8567:15;;8551:13;:11;:13::i;:::-;:31;;;;:::i;:::-;8525:57;;8615:1;8596:15;:20;8592:63;;;8639:5;8632:12;;;;;8592:63;8664:22;8728:1;8708:17;;:21;:61;;;;;8752:17;;8733:15;:36;;8708:61;8704:116;;;8805:4;8785:24;;8704:116;8829:21;8904:1;8885:16;;:20;:87;;;;;8956:16;;8939:14;;8921:15;:32;;;;:::i;:::-;:51;8885:87;8868:163;;;9016:4;8997:23;;8868:163;9048:17;:37;;;;9069:16;9048:37;9040:46;;;;;8455:638;;:::o;4462:94::-;4513:7;4539:10;4532:17;;4462:94;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:5:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;4142:103:19:-;4195:7;4221:17;;4214:24;;4142:103;:::o;1570:300:6:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;11657:133::-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;10282:167:19:-;10397:45;10427:11;10439:1;10427:14;;;;;;;;;;;;;;;;;;;;;;10397:29;:45::i;:::-;10282:167;;:::o;7317:261:6:-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:5:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7908:108:6:-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;4578:540:19:-;4671:18;4691:20;4732:9;4727:385;4751:11;:18;;;;4747:1;:22;4727:385;;;4822:11;4834:1;4822:14;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;4811:7;:36;;:89;;;;;4877:11;4889:1;4877:14;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;4867:7;:33;4811:89;4790:312;;;4996:11;5008:1;4996:14;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;5020:7;4985:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4975:54;;;;;;4946:101;;4933:114;;5083:4;5065:22;;4790:312;4771:3;;;;;:::i;:::-;;;;4727:385;;;;4578:540;;;:::o;5922:1754::-;6035:13;6064:22;;:::i;:::-;6096:111;;;;;;;;;;;;;;;;;:5;6102:1;6096:8;;;;;;;;;;;;;;;;;;:111;;;;6221:16;6217:1334;;;6253:154;;;;;;;;;;;;;;;;;:5;6259:1;6253:8;;;;;;;;;;;;;;;;;;:154;;;;6421:33;;:::i;:::-;6468:30;6501:29;6518:11;6501:16;:29::i;:::-;6468:62;;6550:7;6545:383;6567:1;6563;:5;;;6545:383;;;6593:27;6623:41;6633:16;6652:2;6650:1;:4;;;;:::i;:::-;6623:41;;6661:2;6658:1;6656;:3;;;;:::i;:::-;6655:8;;;;:::i;:::-;6623:41;;:9;:41::i;:::-;6593:71;;6824:13;6732:163;;;;;;;;:::i;:::-;;;;;;;;;;;;;6682:16;6699:1;6682:19;;;;;;;;;;;;;;;;;;;;:231;;;;6545:383;6570:3;;;;;:::i;:::-;;;;6545:383;;;;7014:16;7031:1;7014:19;;;;;;;;;;;;;;;;;;;7055:16;7072:1;7055:19;;;;;;;;;;;;;;;;;;;7096:16;7113:1;7096:19;;;;;;;;;;;;;;;;;;;7137:16;7154:1;7137:19;;;;;;;;;;;;;;;;;;;7178:16;7195:1;7178:19;;;;;;;;;;;;;;;;;;;7219:16;7236:1;7219:19;;;;;;;;;;;;;;;;;;;7260:16;7277:1;7260:19;;;;;;;;;;;;;;;;;;;6976:321;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6941:5;6947:1;6941:8;;;;;;;;;;;;;;;;;;:370;;;;6217:1334;;;;;7342:170;;;;;;;;;;;;;;;;;:5;7348:1;7342:8;;;;;;;;;;;;;;;;;;:170;;;;7526:14;;;;;;;;;;;;;;;;;:5;7532:1;7526:8;;;;;;;;;;;;;;;;;;:14;;;;6217:1334;7561:26;;;;;;;;;;;;;;;;;:5;7567:1;7561:8;;;;;;;;;;;;;;;;;;:26;;;;7629:5;7635:1;7629:8;;;;;;;;;;;;;;;;;;;7639:5;7645:1;7639:8;;;;;;;;;;;;;;;;;;;7649:5;7655:1;7649:8;;;;;;;;;;;;;;;;;;;7659:5;7665:1;7659:8;;;;;;;;;;;;;;;;;;;7612:56;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7598:71;;;5922:1754;;;;:::o;7682:340::-;7772:13;7801:21;:52;;;;;;;;;;;;;;;;;;;7863:30;7896:51;7940:3;7923:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;7896:13;:51::i;:::-;7863:84;;7988:7;7997:16;7971:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7957:58;;;;7682:340;;;:::o;5124:792::-;5220:13;5383:494;5749:8;5457:372;;;;;;;;:::i;:::-;;;;;;;;;;;;;5383:13;:494::i;:::-;5292:603;;;;;;;;:::i;:::-;;;;;;;;;;;;;5249:660;;5124:792;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;9690:574:19:-;9768:19;9790:13;:11;:13::i;:::-;9768:35;;9813:18;9852:1;9834:15;;:19;;;;:::i;:::-;9813:40;;9863:16;9896:1;9882:11;:15;;;;:::i;:::-;9863:34;;9907:11;9937:137;;;;;;;;9976:10;9937:137;;;;10014:8;9937:137;;;;10049:10;9937:137;;;9907:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:11;10094:15;:29;;;;10150:15;10133:14;:32;;;;10196:5;10175:18;;:26;;;;;;;;;;;;;;;;;;10216:41;10236:10;10248:8;10216:41;;;;;;;:::i;:::-;;;;;;;;9690:574;;;;:::o;2624:572:9:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;2839:1;2823:18;;:4;:18;;;2819:183;;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;2918:10;;:4;:10;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;2914:88;2819:183;3029:1;3015:16;;:2;:16;;;3011:179;;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;3113:10;;:2;:10;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3109:81;3011:179;2624:572;;;:::o;14223:121:6:-;;;;:::o;8237:309::-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;392:703:15:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;505:3026:13:-;563:13;810:1;795:4;:11;:16;791:31;;;813:9;;;;;;;;;;;;;;;;791:31;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1357;1343:4;:11;:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:1;:27;;;;:::i;:::-;1326:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;3087:1;3076:9;3072:17;3059:30;;1857:1257;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;;1428:2073;;3518:6;3511:13;;;;505:3026;;;;:::o;13729:122:6:-;;;;:::o;3902:161:9:-;4005:10;:17;;;;3978:15;:24;3994:7;3978:24;;;;;;;;;;;:44;;;;4032:10;4048:7;4032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:161;:::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;4942:51;;5003:18;5024:17;:26;5042:7;5024:26;;;;;;;;;;;;5003:47;;5168:14;5154:10;:28;5150:323;;5198:19;5220:12;:18;5233:4;5220:18;;;;;;;;;;;;;;;:34;5239:14;5220:34;;;;;;;;;;;;5198:56;;5302:11;5269:12;:18;5282:4;5269:18;;;;;;;;;;;;;;;:30;5288:10;5269:30;;;;;;;;;;;:44;;;;5418:10;5385:17;:30;5403:11;5385:30;;;;;;;;;;;:43;;;;5150:323;;5566:17;:26;5584:7;5566:26;;;;;;;;;;;5559:33;;;5609:12;:18;5622:4;5609:18;;;;;;;;;;;;;;;:34;5628:14;5609:34;;;;;;;;;;;5602:41;;;4680:970;;;;:::o;5938:1061::-;6187:22;6232:1;6212:10;:17;;;;:21;;;;:::i;:::-;6187:46;;6243:18;6264:15;:24;6280:7;6264:24;;;;;;;;;;;;6243:45;;6610:19;6632:10;6643:14;6632:26;;;;;;;;;;;;;;;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;;;;;;;;;;;;;;;;:36;;;;6804:10;6773:15;:28;6789:11;6773:28;;;;;;;;;;;:41;;;;6942:15;:24;6958:7;6942:24;;;;;;;;;;;6935:31;;;6976:10;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1061;;;;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;3574:37;;3648:7;3621:12;:16;3634:2;3621:16;;;;;;;;;;;;;;;:24;3638:6;3621:24;;;;;;;;;;;:34;;;;3694:6;3665:17;:26;3683:7;3665:26;;;;;;;;;;;:35;;;;3490:217;;;:::o;8868:427:6:-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;1175:320:12:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24:655:20:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;414:1;411;404:12;350:2;450:1;435:238;460:6;457:1;454:13;435:238;;;528:3;557:37;590:3;578:10;557:37;:::i;:::-;552:3;545:50;624:4;619:3;615:14;608:21;;658:4;653:3;649:14;642:21;;495:178;482:1;479;475:9;470:14;;435:238;;;439:14;126:553;;;;;;;:::o;685:343::-;762:5;787:65;803:48;844:6;803:48;:::i;:::-;787:65;:::i;:::-;778:74;;875:6;868:5;861:21;913:4;906:5;902:16;951:3;942:6;937:3;933:16;930:25;927:2;;;968:1;965;958:12;927:2;981:41;1015:6;1010:3;1005;981:41;:::i;:::-;768:260;;;;;;:::o;1034:345::-;1112:5;1137:66;1153:49;1195:6;1153:49;:::i;:::-;1137:66;:::i;:::-;1128:75;;1226:6;1219:5;1212:21;1264:4;1257:5;1253:16;1302:3;1293:6;1288:3;1284:16;1281:25;1278:2;;;1319:1;1316;1309:12;1278:2;1332:41;1366:6;1361:3;1356;1332:41;:::i;:::-;1118:261;;;;;;:::o;1385:139::-;1431:5;1469:6;1456:20;1447:29;;1485:33;1512:5;1485:33;:::i;:::-;1437:87;;;;:::o;1547:303::-;1618:5;1667:3;1660:4;1652:6;1648:17;1644:27;1634:2;;1685:1;1682;1675:12;1634:2;1725:6;1712:20;1750:94;1840:3;1832:6;1825:4;1817:6;1813:17;1750:94;:::i;:::-;1741:103;;1624:226;;;;;:::o;1856:133::-;1899:5;1937:6;1924:20;1915:29;;1953:30;1977:5;1953:30;:::i;:::-;1905:84;;;;:::o;1995:137::-;2040:5;2078:6;2065:20;2056:29;;2094:32;2120:5;2094:32;:::i;:::-;2046:86;;;;:::o;2138:141::-;2194:5;2225:6;2219:13;2210:22;;2241:32;2267:5;2241:32;:::i;:::-;2200:79;;;;:::o;2298:351::-;2355:8;2365:6;2415:3;2408:4;2400:6;2396:17;2392:27;2382:2;;2433:1;2430;2423:12;2382:2;2469:6;2456:20;2446:30;;2499:18;2491:6;2488:30;2485:2;;;2531:1;2528;2521:12;2485:2;2568:4;2560:6;2556:17;2544:29;;2622:3;2614:4;2606:6;2602:17;2592:8;2588:32;2585:41;2582:2;;;2639:1;2636;2629:12;2582:2;2372:277;;;;;:::o;2668:271::-;2723:5;2772:3;2765:4;2757:6;2753:17;2749:27;2739:2;;2790:1;2787;2780:12;2739:2;2830:6;2817:20;2855:78;2929:3;2921:6;2914:4;2906:6;2902:17;2855:78;:::i;:::-;2846:87;;2729:210;;;;;:::o;2959:273::-;3015:5;3064:3;3057:4;3049:6;3045:17;3041:27;3031:2;;3082:1;3079;3072:12;3031:2;3122:6;3109:20;3147:79;3222:3;3214:6;3207:4;3199:6;3195:17;3147:79;:::i;:::-;3138:88;;3021:211;;;;;:::o;3238:139::-;3284:5;3322:6;3309:20;3300:29;;3338:33;3365:5;3338:33;:::i;:::-;3290:87;;;;:::o;3383:143::-;3440:5;3471:6;3465:13;3456:22;;3487:33;3514:5;3487:33;:::i;:::-;3446:80;;;;:::o;3532:262::-;3591:6;3640:2;3628:9;3619:7;3615:23;3611:32;3608:2;;;3656:1;3653;3646:12;3608:2;3699:1;3724:53;3769:7;3760:6;3749:9;3745:22;3724:53;:::i;:::-;3714:63;;3670:117;3598:196;;;;:::o;3800:407::-;3868:6;3876;3925:2;3913:9;3904:7;3900:23;3896:32;3893:2;;;3941:1;3938;3931:12;3893:2;3984:1;4009:53;4054:7;4045:6;4034:9;4030:22;4009:53;:::i;:::-;3999:63;;3955:117;4111:2;4137:53;4182:7;4173:6;4162:9;4158:22;4137:53;:::i;:::-;4127:63;;4082:118;3883:324;;;;;:::o;4213:552::-;4290:6;4298;4306;4355:2;4343:9;4334:7;4330:23;4326:32;4323:2;;;4371:1;4368;4361:12;4323:2;4414:1;4439:53;4484:7;4475:6;4464:9;4460:22;4439:53;:::i;:::-;4429:63;;4385:117;4541:2;4567:53;4612:7;4603:6;4592:9;4588:22;4567:53;:::i;:::-;4557:63;;4512:118;4669:2;4695:53;4740:7;4731:6;4720:9;4716:22;4695:53;:::i;:::-;4685:63;;4640:118;4313:452;;;;;:::o;4771:809::-;4866:6;4874;4882;4890;4939:3;4927:9;4918:7;4914:23;4910:33;4907:2;;;4956:1;4953;4946:12;4907:2;4999:1;5024:53;5069:7;5060:6;5049:9;5045:22;5024:53;:::i;:::-;5014:63;;4970:117;5126:2;5152:53;5197:7;5188:6;5177:9;5173:22;5152:53;:::i;:::-;5142:63;;5097:118;5254:2;5280:53;5325:7;5316:6;5305:9;5301:22;5280:53;:::i;:::-;5270:63;;5225:118;5410:2;5399:9;5395:18;5382:32;5441:18;5433:6;5430:30;5427:2;;;5473:1;5470;5463:12;5427:2;5501:62;5555:7;5546:6;5535:9;5531:22;5501:62;:::i;:::-;5491:72;;5353:220;4897:683;;;;;;;:::o;5586:401::-;5651:6;5659;5708:2;5696:9;5687:7;5683:23;5679:32;5676:2;;;5724:1;5721;5714:12;5676:2;5767:1;5792:53;5837:7;5828:6;5817:9;5813:22;5792:53;:::i;:::-;5782:63;;5738:117;5894:2;5920:50;5962:7;5953:6;5942:9;5938:22;5920:50;:::i;:::-;5910:60;;5865:115;5666:321;;;;;:::o;5993:407::-;6061:6;6069;6118:2;6106:9;6097:7;6093:23;6089:32;6086:2;;;6134:1;6131;6124:12;6086:2;6177:1;6202:53;6247:7;6238:6;6227:9;6223:22;6202:53;:::i;:::-;6192:63;;6148:117;6304:2;6330:53;6375:7;6366:6;6355:9;6351:22;6330:53;:::i;:::-;6320:63;;6275:118;6076:324;;;;;:::o;6406:260::-;6464:6;6513:2;6501:9;6492:7;6488:23;6484:32;6481:2;;;6529:1;6526;6519:12;6481:2;6572:1;6597:52;6641:7;6632:6;6621:9;6617:22;6597:52;:::i;:::-;6587:62;;6543:116;6471:195;;;;:::o;6672:282::-;6741:6;6790:2;6778:9;6769:7;6765:23;6761:32;6758:2;;;6806:1;6803;6796:12;6758:2;6849:1;6874:63;6929:7;6920:6;6909:9;6905:22;6874:63;:::i;:::-;6864:73;;6820:127;6748:206;;;;:::o;6960:393::-;7030:6;7038;7087:2;7075:9;7066:7;7062:23;7058:32;7055:2;;;7103:1;7100;7093:12;7055:2;7174:1;7163:9;7159:17;7146:31;7204:18;7196:6;7193:30;7190:2;;;7236:1;7233;7226:12;7190:2;7272:64;7328:7;7319:6;7308:9;7304:22;7272:64;:::i;:::-;7254:82;;;;7117:229;7045:308;;;;;:::o;7359:665::-;7446:6;7454;7462;7511:2;7499:9;7490:7;7486:23;7482:32;7479:2;;;7527:1;7524;7517:12;7479:2;7598:1;7587:9;7583:17;7570:31;7628:18;7620:6;7617:30;7614:2;;;7660:1;7657;7650:12;7614:2;7688:63;7743:7;7734:6;7723:9;7719:22;7688:63;:::i;:::-;7678:73;;7541:220;7800:2;7826:53;7871:7;7862:6;7851:9;7847:22;7826:53;:::i;:::-;7816:63;;7771:118;7928:2;7954:53;7999:7;7990:6;7979:9;7975:22;7954:53;:::i;:::-;7944:63;;7899:118;7469:555;;;;;:::o;8030:262::-;8089:6;8138:2;8126:9;8117:7;8113:23;8109:32;8106:2;;;8154:1;8151;8144:12;8106:2;8197:1;8222:53;8267:7;8258:6;8247:9;8243:22;8222:53;:::i;:::-;8212:63;;8168:117;8096:196;;;;:::o;8298:284::-;8368:6;8417:2;8405:9;8396:7;8392:23;8388:32;8385:2;;;8433:1;8430;8423:12;8385:2;8476:1;8501:64;8557:7;8548:6;8537:9;8533:22;8501:64;:::i;:::-;8491:74;;8447:128;8375:207;;;;:::o;8588:550::-;8681:6;8689;8738:2;8726:9;8717:7;8713:23;8709:32;8706:2;;;8754:1;8751;8744:12;8706:2;8797:1;8822:53;8867:7;8858:6;8847:9;8843:22;8822:53;:::i;:::-;8812:63;;8768:117;8952:2;8941:9;8937:18;8924:32;8983:18;8975:6;8972:30;8969:2;;;9015:1;9012;9005:12;8969:2;9043:78;9113:7;9104:6;9093:9;9089:22;9043:78;:::i;:::-;9033:88;;8895:236;8696:442;;;;;:::o;9144:118::-;9231:24;9249:5;9231:24;:::i;:::-;9226:3;9219:37;9209:53;;:::o;9268:109::-;9349:21;9364:5;9349:21;:::i;:::-;9344:3;9337:34;9327:50;;:::o;9383:118::-;9470:24;9488:5;9470:24;:::i;:::-;9465:3;9458:37;9448:53;;:::o;9507:360::-;9593:3;9621:38;9653:5;9621:38;:::i;:::-;9675:70;9738:6;9733:3;9675:70;:::i;:::-;9668:77;;9754:52;9799:6;9794:3;9787:4;9780:5;9776:16;9754:52;:::i;:::-;9831:29;9853:6;9831:29;:::i;:::-;9826:3;9822:39;9815:46;;9597:270;;;;;:::o;9873:364::-;9961:3;9989:39;10022:5;9989:39;:::i;:::-;10044:71;10108:6;10103:3;10044:71;:::i;:::-;10037:78;;10124:52;10169:6;10164:3;10157:4;10150:5;10146:16;10124:52;:::i;:::-;10201:29;10223:6;10201:29;:::i;:::-;10196:3;10192:39;10185:46;;9965:272;;;;;:::o;10243:377::-;10349:3;10377:39;10410:5;10377:39;:::i;:::-;10432:89;10514:6;10509:3;10432:89;:::i;:::-;10425:96;;10530:52;10575:6;10570:3;10563:4;10556:5;10552:16;10530:52;:::i;:::-;10607:6;10602:3;10598:16;10591:23;;10353:267;;;;;:::o;10626:366::-;10768:3;10789:67;10853:2;10848:3;10789:67;:::i;:::-;10782:74;;10865:93;10954:3;10865:93;:::i;:::-;10983:2;10978:3;10974:12;10967:19;;10772:220;;;:::o;10998:366::-;11140:3;11161:67;11225:2;11220:3;11161:67;:::i;:::-;11154:74;;11237:93;11326:3;11237:93;:::i;:::-;11355:2;11350:3;11346:12;11339:19;;11144:220;;;:::o;11370:366::-;11512:3;11533:67;11597:2;11592:3;11533:67;:::i;:::-;11526:74;;11609:93;11698:3;11609:93;:::i;:::-;11727:2;11722:3;11718:12;11711:19;;11516:220;;;:::o;11742:366::-;11884:3;11905:67;11969:2;11964:3;11905:67;:::i;:::-;11898:74;;11981:93;12070:3;11981:93;:::i;:::-;12099:2;12094:3;12090:12;12083:19;;11888:220;;;:::o;12114:366::-;12256:3;12277:67;12341:2;12336:3;12277:67;:::i;:::-;12270:74;;12353:93;12442:3;12353:93;:::i;:::-;12471:2;12466:3;12462:12;12455:19;;12260:220;;;:::o;12486:400::-;12646:3;12667:84;12749:1;12744:3;12667:84;:::i;:::-;12660:91;;12760:93;12849:3;12760:93;:::i;:::-;12878:1;12873:3;12869:11;12862:18;;12650:236;;;:::o;12892:402::-;13052:3;13073:85;13155:2;13150:3;13073:85;:::i;:::-;13066:92;;13167:93;13256:3;13167:93;:::i;:::-;13285:2;13280:3;13276:12;13269:19;;13056:238;;;:::o;13300:366::-;13442:3;13463:67;13527:2;13522:3;13463:67;:::i;:::-;13456:74;;13539:93;13628:3;13539:93;:::i;:::-;13657:2;13652:3;13648:12;13641:19;;13446:220;;;:::o;13672:366::-;13814:3;13835:67;13899:2;13894:3;13835:67;:::i;:::-;13828:74;;13911:93;14000:3;13911:93;:::i;:::-;14029:2;14024:3;14020:12;14013:19;;13818:220;;;:::o;14044:402::-;14204:3;14225:85;14307:2;14302:3;14225:85;:::i;:::-;14218:92;;14319:93;14408:3;14319:93;:::i;:::-;14437:2;14432:3;14428:12;14421:19;;14208:238;;;:::o;14452:366::-;14594:3;14615:67;14679:2;14674:3;14615:67;:::i;:::-;14608:74;;14691:93;14780:3;14691:93;:::i;:::-;14809:2;14804:3;14800:12;14793:19;;14598:220;;;:::o;14824:400::-;14984:3;15005:84;15087:1;15082:3;15005:84;:::i;:::-;14998:91;;15098:93;15187:3;15098:93;:::i;:::-;15216:1;15211:3;15207:11;15200:18;;14988:236;;;:::o;15230:402::-;15390:3;15411:85;15493:2;15488:3;15411:85;:::i;:::-;15404:92;;15505:93;15594:3;15505:93;:::i;:::-;15623:2;15618:3;15614:12;15607:19;;15394:238;;;:::o;15638:400::-;15798:3;15819:84;15901:1;15896:3;15819:84;:::i;:::-;15812:91;;15912:93;16001:3;15912:93;:::i;:::-;16030:1;16025:3;16021:11;16014:18;;15802:236;;;:::o;16044:366::-;16186:3;16207:67;16271:2;16266:3;16207:67;:::i;:::-;16200:74;;16283:93;16372:3;16283:93;:::i;:::-;16401:2;16396:3;16392:12;16385:19;;16190:220;;;:::o;16416:366::-;16558:3;16579:67;16643:2;16638:3;16579:67;:::i;:::-;16572:74;;16655:93;16744:3;16655:93;:::i;:::-;16773:2;16768:3;16764:12;16757:19;;16562:220;;;:::o;16788:400::-;16948:3;16969:84;17051:1;17046:3;16969:84;:::i;:::-;16962:91;;17062:93;17151:3;17062:93;:::i;:::-;17180:1;17175:3;17171:11;17164:18;;16952:236;;;:::o;17194:402::-;17354:3;17375:85;17457:2;17452:3;17375:85;:::i;:::-;17368:92;;17469:93;17558:3;17469:93;:::i;:::-;17587:2;17582:3;17578:12;17571:19;;17358:238;;;:::o;17602:366::-;17744:3;17765:67;17829:2;17824:3;17765:67;:::i;:::-;17758:74;;17841:93;17930:3;17841:93;:::i;:::-;17959:2;17954:3;17950:12;17943:19;;17748:220;;;:::o;17974:400::-;18134:3;18155:84;18237:1;18232:3;18155:84;:::i;:::-;18148:91;;18248:93;18337:3;18248:93;:::i;:::-;18366:1;18361:3;18357:11;18350:18;;18138:236;;;:::o;18380:366::-;18522:3;18543:67;18607:2;18602:3;18543:67;:::i;:::-;18536:74;;18619:93;18708:3;18619:93;:::i;:::-;18737:2;18732:3;18728:12;18721:19;;18526:220;;;:::o;18752:366::-;18894:3;18915:67;18979:2;18974:3;18915:67;:::i;:::-;18908:74;;18991:93;19080:3;18991:93;:::i;:::-;19109:2;19104:3;19100:12;19093:19;;18898:220;;;:::o;19124:402::-;19284:3;19305:85;19387:2;19382:3;19305:85;:::i;:::-;19298:92;;19399:93;19488:3;19399:93;:::i;:::-;19517:2;19512:3;19508:12;19501:19;;19288:238;;;:::o;19532:398::-;19691:3;19712:83;19793:1;19788:3;19712:83;:::i;:::-;19705:90;;19804:93;19893:3;19804:93;:::i;:::-;19922:1;19917:3;19913:11;19906:18;;19695:235;;;:::o;19936:366::-;20078:3;20099:67;20163:2;20158:3;20099:67;:::i;:::-;20092:74;;20175:93;20264:3;20175:93;:::i;:::-;20293:2;20288:3;20284:12;20277:19;;20082:220;;;:::o;20308:366::-;20450:3;20471:67;20535:2;20530:3;20471:67;:::i;:::-;20464:74;;20547:93;20636:3;20547:93;:::i;:::-;20665:2;20660:3;20656:12;20649:19;;20454:220;;;:::o;20680:115::-;20765:23;20782:5;20765:23;:::i;:::-;20760:3;20753:36;20743:52;;:::o;20801:118::-;20888:24;20906:5;20888:24;:::i;:::-;20883:3;20876:37;20866:53;;:::o;20925:115::-;21010:23;21027:5;21010:23;:::i;:::-;21005:3;20998:36;20988:52;;:::o;21046:115::-;21131:23;21148:5;21131:23;:::i;:::-;21126:3;21119:36;21109:52;;:::o;21167:275::-;21299:3;21321:95;21412:3;21403:6;21321:95;:::i;:::-;21314:102;;21433:3;21426:10;;21303:139;;;;:::o;21448:435::-;21628:3;21650:95;21741:3;21732:6;21650:95;:::i;:::-;21643:102;;21762:95;21853:3;21844:6;21762:95;:::i;:::-;21755:102;;21874:3;21867:10;;21632:251;;;;;:::o;21889:755::-;22165:3;22187:95;22278:3;22269:6;22187:95;:::i;:::-;22180:102;;22299:95;22390:3;22381:6;22299:95;:::i;:::-;22292:102;;22411:95;22502:3;22493:6;22411:95;:::i;:::-;22404:102;;22523:95;22614:3;22605:6;22523:95;:::i;:::-;22516:102;;22635:3;22628:10;;22169:475;;;;;;;:::o;22650:1235::-;23070:3;23092:95;23183:3;23174:6;23092:95;:::i;:::-;23085:102;;23204:95;23295:3;23286:6;23204:95;:::i;:::-;23197:102;;23316:95;23407:3;23398:6;23316:95;:::i;:::-;23309:102;;23428:95;23519:3;23510:6;23428:95;:::i;:::-;23421:102;;23540:95;23631:3;23622:6;23540:95;:::i;:::-;23533:102;;23652:95;23743:3;23734:6;23652:95;:::i;:::-;23645:102;;23764:95;23855:3;23846:6;23764:95;:::i;:::-;23757:102;;23876:3;23869:10;;23074:811;;;;;;;;;;:::o;23891:807::-;24225:3;24247:148;24391:3;24247:148;:::i;:::-;24240:155;;24412:95;24503:3;24494:6;24412:95;:::i;:::-;24405:102;;24524:148;24668:3;24524:148;:::i;:::-;24517:155;;24689:3;24682:10;;24229:469;;;;:::o;24704:2137::-;25543:3;25565:148;25709:3;25565:148;:::i;:::-;25558:155;;25730:148;25874:3;25730:148;:::i;:::-;25723:155;;25895:148;26039:3;25895:148;:::i;:::-;25888:155;;26060:148;26204:3;26060:148;:::i;:::-;26053:155;;26225:148;26369:3;26225:148;:::i;:::-;26218:155;;26390:95;26481:3;26472:6;26390:95;:::i;:::-;26383:102;;26502:148;26646:3;26502:148;:::i;:::-;26495:155;;26667:148;26811:3;26667:148;:::i;:::-;26660:155;;26832:3;26825:10;;25547:1294;;;;:::o;26847:541::-;27080:3;27102:148;27246:3;27102:148;:::i;:::-;27095:155;;27267:95;27358:3;27349:6;27267:95;:::i;:::-;27260:102;;27379:3;27372:10;;27084:304;;;;:::o;27394:379::-;27578:3;27600:147;27743:3;27600:147;:::i;:::-;27593:154;;27764:3;27757:10;;27582:191;;;:::o;27779:222::-;27872:4;27910:2;27899:9;27895:18;27887:26;;27923:71;27991:1;27980:9;27976:17;27967:6;27923:71;:::i;:::-;27877:124;;;;:::o;28007:332::-;28128:4;28166:2;28155:9;28151:18;28143:26;;28179:71;28247:1;28236:9;28232:17;28223:6;28179:71;:::i;:::-;28260:72;28328:2;28317:9;28313:18;28304:6;28260:72;:::i;:::-;28133:206;;;;;:::o;28345:640::-;28540:4;28578:3;28567:9;28563:19;28555:27;;28592:71;28660:1;28649:9;28645:17;28636:6;28592:71;:::i;:::-;28673:72;28741:2;28730:9;28726:18;28717:6;28673:72;:::i;:::-;28755;28823:2;28812:9;28808:18;28799:6;28755:72;:::i;:::-;28874:9;28868:4;28864:20;28859:2;28848:9;28844:18;28837:48;28902:76;28973:4;28964:6;28902:76;:::i;:::-;28894:84;;28545:440;;;;;;;:::o;28991:210::-;29078:4;29116:2;29105:9;29101:18;29093:26;;29129:65;29191:1;29180:9;29176:17;29167:6;29129:65;:::i;:::-;29083:118;;;;:::o;29207:407::-;29340:4;29378:2;29367:9;29363:18;29355:26;;29391:65;29453:1;29442:9;29438:17;29429:6;29391:65;:::i;:::-;29503:9;29497:4;29493:20;29488:2;29477:9;29473:18;29466:48;29531:76;29602:4;29593:6;29531:76;:::i;:::-;29523:84;;29345:269;;;;;:::o;29620:648::-;29817:4;29855:3;29844:9;29840:19;29832:27;;29869:71;29937:1;29926:9;29922:17;29913:6;29869:71;:::i;:::-;29950:70;30016:2;30005:9;30001:18;29992:6;29950:70;:::i;:::-;30030;30096:2;30085:9;30081:18;30072:6;30030:70;:::i;:::-;30110;30176:2;30165:9;30161:18;30152:6;30110:70;:::i;:::-;30190:71;30256:3;30245:9;30241:19;30232:6;30190:71;:::i;:::-;29822:446;;;;;;;;:::o;30274:313::-;30387:4;30425:2;30414:9;30410:18;30402:26;;30474:9;30468:4;30464:20;30460:1;30449:9;30445:17;30438:47;30502:78;30575:4;30566:6;30502:78;:::i;:::-;30494:86;;30392:195;;;;:::o;30593:419::-;30759:4;30797:2;30786:9;30782:18;30774:26;;30846:9;30840:4;30836:20;30832:1;30821:9;30817:17;30810:47;30874:131;31000:4;30874:131;:::i;:::-;30866:139;;30764:248;;;:::o;31018:419::-;31184:4;31222:2;31211:9;31207:18;31199:26;;31271:9;31265:4;31261:20;31257:1;31246:9;31242:17;31235:47;31299:131;31425:4;31299:131;:::i;:::-;31291:139;;31189:248;;;:::o;31443:419::-;31609:4;31647:2;31636:9;31632:18;31624:26;;31696:9;31690:4;31686:20;31682:1;31671:9;31667:17;31660:47;31724:131;31850:4;31724:131;:::i;:::-;31716:139;;31614:248;;;:::o;31868:419::-;32034:4;32072:2;32061:9;32057:18;32049:26;;32121:9;32115:4;32111:20;32107:1;32096:9;32092:17;32085:47;32149:131;32275:4;32149:131;:::i;:::-;32141:139;;32039:248;;;:::o;32293:419::-;32459:4;32497:2;32486:9;32482:18;32474:26;;32546:9;32540:4;32536:20;32532:1;32521:9;32517:17;32510:47;32574:131;32700:4;32574:131;:::i;:::-;32566:139;;32464:248;;;:::o;32718:419::-;32884:4;32922:2;32911:9;32907:18;32899:26;;32971:9;32965:4;32961:20;32957:1;32946:9;32942:17;32935:47;32999:131;33125:4;32999:131;:::i;:::-;32991:139;;32889:248;;;:::o;33143:419::-;33309:4;33347:2;33336:9;33332:18;33324:26;;33396:9;33390:4;33386:20;33382:1;33371:9;33367:17;33360:47;33424:131;33550:4;33424:131;:::i;:::-;33416:139;;33314:248;;;:::o;33568:419::-;33734:4;33772:2;33761:9;33757:18;33749:26;;33821:9;33815:4;33811:20;33807:1;33796:9;33792:17;33785:47;33849:131;33975:4;33849:131;:::i;:::-;33841:139;;33739:248;;;:::o;33993:419::-;34159:4;34197:2;34186:9;34182:18;34174:26;;34246:9;34240:4;34236:20;34232:1;34221:9;34217:17;34210:47;34274:131;34400:4;34274:131;:::i;:::-;34266:139;;34164:248;;;:::o;34418:419::-;34584:4;34622:2;34611:9;34607:18;34599:26;;34671:9;34665:4;34661:20;34657:1;34646:9;34642:17;34635:47;34699:131;34825:4;34699:131;:::i;:::-;34691:139;;34589:248;;;:::o;34843:419::-;35009:4;35047:2;35036:9;35032:18;35024:26;;35096:9;35090:4;35086:20;35082:1;35071:9;35067:17;35060:47;35124:131;35250:4;35124:131;:::i;:::-;35116:139;;35014:248;;;:::o;35268:419::-;35434:4;35472:2;35461:9;35457:18;35449:26;;35521:9;35515:4;35511:20;35507:1;35496:9;35492:17;35485:47;35549:131;35675:4;35549:131;:::i;:::-;35541:139;;35439:248;;;:::o;35693:419::-;35859:4;35897:2;35886:9;35882:18;35874:26;;35946:9;35940:4;35936:20;35932:1;35921:9;35917:17;35910:47;35974:131;36100:4;35974:131;:::i;:::-;35966:139;;35864:248;;;:::o;36118:419::-;36284:4;36322:2;36311:9;36307:18;36299:26;;36371:9;36365:4;36361:20;36357:1;36346:9;36342:17;36335:47;36399:131;36525:4;36399:131;:::i;:::-;36391:139;;36289:248;;;:::o;36543:419::-;36709:4;36747:2;36736:9;36732:18;36724:26;;36796:9;36790:4;36786:20;36782:1;36771:9;36767:17;36760:47;36824:131;36950:4;36824:131;:::i;:::-;36816:139;;36714:248;;;:::o;36968:222::-;37061:4;37099:2;37088:9;37084:18;37076:26;;37112:71;37180:1;37169:9;37165:17;37156:6;37112:71;:::i;:::-;37066:124;;;;:::o;37196:332::-;37317:4;37355:2;37344:9;37340:18;37332:26;;37368:71;37436:1;37425:9;37421:17;37412:6;37368:71;:::i;:::-;37449:72;37517:2;37506:9;37502:18;37493:6;37449:72;:::i;:::-;37322:206;;;;;:::o;37534:129::-;37568:6;37595:20;;:::i;:::-;37585:30;;37624:33;37652:4;37644:6;37624:33;:::i;:::-;37575:88;;;:::o;37669:75::-;37702:6;37735:2;37729:9;37719:19;;37709:35;:::o;37750:311::-;37827:4;37917:18;37909:6;37906:30;37903:2;;;37939:18;;:::i;:::-;37903:2;37989:4;37981:6;37977:17;37969:25;;38049:4;38043;38039:15;38031:23;;37832:229;;;:::o;38067:307::-;38128:4;38218:18;38210:6;38207:30;38204:2;;;38240:18;;:::i;:::-;38204:2;38278:29;38300:6;38278:29;:::i;:::-;38270:37;;38362:4;38356;38352:15;38344:23;;38133:241;;;:::o;38380:308::-;38442:4;38532:18;38524:6;38521:30;38518:2;;;38554:18;;:::i;:::-;38518:2;38592:29;38614:6;38592:29;:::i;:::-;38584:37;;38676:4;38670;38666:15;38658:23;;38447:241;;;:::o;38694:98::-;38745:6;38779:5;38773:12;38763:22;;38752:40;;;:::o;38798:99::-;38850:6;38884:5;38878:12;38868:22;;38857:40;;;:::o;38903:168::-;38986:11;39020:6;39015:3;39008:19;39060:4;39055:3;39051:14;39036:29;;38998:73;;;;:::o;39077:147::-;39178:11;39215:3;39200:18;;39190:34;;;;:::o;39230:169::-;39314:11;39348:6;39343:3;39336:19;39388:4;39383:3;39379:14;39364:29;;39326:73;;;;:::o;39405:148::-;39507:11;39544:3;39529:18;;39519:34;;;;:::o;39559:305::-;39599:3;39618:20;39636:1;39618:20;:::i;:::-;39613:25;;39652:20;39670:1;39652:20;:::i;:::-;39647:25;;39806:1;39738:66;39734:74;39731:1;39728:81;39725:2;;;39812:18;;:::i;:::-;39725:2;39856:1;39853;39849:9;39842:16;;39603:261;;;;:::o;39870:237::-;39908:3;39927:18;39943:1;39927:18;:::i;:::-;39922:23;;39959:18;39975:1;39959:18;:::i;:::-;39954:23;;40049:1;40043:4;40039:12;40036:1;40033:19;40030:2;;;40055:18;;:::i;:::-;40030:2;40099:1;40096;40092:9;40085:16;;39912:195;;;;:::o;40113:185::-;40153:1;40170:20;40188:1;40170:20;:::i;:::-;40165:25;;40204:20;40222:1;40204:20;:::i;:::-;40199:25;;40243:1;40233:2;;40248:18;;:::i;:::-;40233:2;40290:1;40287;40283:9;40278:14;;40155:143;;;;:::o;40304:348::-;40344:7;40367:20;40385:1;40367:20;:::i;:::-;40362:25;;40401:20;40419:1;40401:20;:::i;:::-;40396:25;;40589:1;40521:66;40517:74;40514:1;40511:81;40506:1;40499:9;40492:17;40488:105;40485:2;;;40596:18;;:::i;:::-;40485:2;40644:1;40641;40637:9;40626:20;;40352:300;;;;:::o;40658:280::-;40696:7;40719:18;40735:1;40719:18;:::i;:::-;40714:23;;40751:18;40767:1;40751:18;:::i;:::-;40746:23;;40875:1;40869:4;40865:12;40862:1;40859:19;40854:1;40847:9;40840:17;40836:43;40833:2;;;40882:18;;:::i;:::-;40833:2;40930:1;40927;40923:9;40912:20;;40704:234;;;;:::o;40944:191::-;40984:4;41004:20;41022:1;41004:20;:::i;:::-;40999:25;;41038:20;41056:1;41038:20;:::i;:::-;41033:25;;41077:1;41074;41071:8;41068:2;;;41082:18;;:::i;:::-;41068:2;41127:1;41124;41120:9;41112:17;;40989:146;;;;:::o;41141:96::-;41178:7;41207:24;41225:5;41207:24;:::i;:::-;41196:35;;41186:51;;;:::o;41243:90::-;41277:7;41320:5;41313:13;41306:21;41295:32;;41285:48;;;:::o;41339:77::-;41376:7;41405:5;41394:16;;41384:32;;;:::o;41422:149::-;41458:7;41498:66;41491:5;41487:78;41476:89;;41466:105;;;:::o;41577:89::-;41613:7;41653:6;41646:5;41642:18;41631:29;;41621:45;;;:::o;41672:126::-;41709:7;41749:42;41742:5;41738:54;41727:65;;41717:81;;;:::o;41804:77::-;41841:7;41870:5;41859:16;;41849:32;;;:::o;41887:93::-;41923:7;41963:10;41956:5;41952:22;41941:33;;41931:49;;;:::o;41986:101::-;42022:7;42062:18;42055:5;42051:30;42040:41;;42030:57;;;:::o;42093:86::-;42128:7;42168:4;42161:5;42157:16;42146:27;;42136:43;;;:::o;42185:154::-;42269:6;42264:3;42259;42246:30;42331:1;42322:6;42317:3;42313:16;42306:27;42236:103;;;:::o;42345:307::-;42413:1;42423:113;42437:6;42434:1;42431:13;42423:113;;;42522:1;42517:3;42513:11;42507:18;42503:1;42498:3;42494:11;42487:39;42459:2;42456:1;42452:10;42447:15;;42423:113;;;42554:6;42551:1;42548:13;42545:2;;;42634:1;42625:6;42620:3;42616:16;42609:27;42545:2;42394:258;;;;:::o;42658:320::-;42702:6;42739:1;42733:4;42729:12;42719:22;;42786:1;42780:4;42776:12;42807:18;42797:2;;42863:4;42855:6;42851:17;42841:27;;42797:2;42925;42917:6;42914:14;42894:18;42891:38;42888:2;;;42944:18;;:::i;:::-;42888:2;42709:269;;;;:::o;42984:281::-;43067:27;43089:4;43067:27;:::i;:::-;43059:6;43055:40;43197:6;43185:10;43182:22;43161:18;43149:10;43146:34;43143:62;43140:2;;;43208:18;;:::i;:::-;43140:2;43248:10;43244:2;43237:22;43027:238;;;:::o;43271:233::-;43310:3;43333:24;43351:5;43333:24;:::i;:::-;43324:33;;43379:66;43372:5;43369:77;43366:2;;;43449:18;;:::i;:::-;43366:2;43496:1;43489:5;43485:13;43478:20;;43314:190;;;:::o;43510:167::-;43547:3;43570:22;43586:5;43570:22;:::i;:::-;43561:31;;43614:4;43607:5;43604:15;43601:2;;;43622:18;;:::i;:::-;43601:2;43669:1;43662:5;43658:13;43651:20;;43551:126;;;:::o;43683:176::-;43715:1;43732:20;43750:1;43732:20;:::i;:::-;43727:25;;43766:20;43784:1;43766:20;:::i;:::-;43761:25;;43805:1;43795:2;;43810:18;;:::i;:::-;43795:2;43851:1;43848;43844:9;43839:14;;43717:142;;;;:::o;43865:180::-;43913:77;43910:1;43903:88;44010:4;44007:1;44000:15;44034:4;44031:1;44024:15;44051:180;44099:77;44096:1;44089:88;44196:4;44193:1;44186:15;44220:4;44217:1;44210:15;44237:180;44285:77;44282:1;44275:88;44382:4;44379:1;44372:15;44406:4;44403:1;44396:15;44423:180;44471:77;44468:1;44461:88;44568:4;44565:1;44558:15;44592:4;44589:1;44582:15;44609:102;44650:6;44701:2;44697:7;44692:2;44685:5;44681:14;44677:28;44667:38;;44657:54;;;:::o;44717:230::-;44857:34;44853:1;44845:6;44841:14;44834:58;44926:13;44921:2;44913:6;44909:15;44902:38;44823:124;:::o;44953:237::-;45093:34;45089:1;45081:6;45077:14;45070:58;45162:20;45157:2;45149:6;45145:15;45138:45;45059:131;:::o;45196:225::-;45336:34;45332:1;45324:6;45320:14;45313:58;45405:8;45400:2;45392:6;45388:15;45381:33;45302:119;:::o;45427:224::-;45567:34;45563:1;45555:6;45551:14;45544:58;45636:7;45631:2;45623:6;45619:15;45612:32;45533:118;:::o;45657:178::-;45797:30;45793:1;45785:6;45781:14;45774:54;45763:72;:::o;45841:158::-;45981:10;45977:1;45969:6;45965:14;45958:34;45947:52;:::o;46005:214::-;46145:66;46141:1;46133:6;46129:14;46122:90;46111:108;:::o;46225:223::-;46365:34;46361:1;46353:6;46349:14;46342:58;46434:6;46429:2;46421:6;46417:15;46410:31;46331:117;:::o;46454:175::-;46594:27;46590:1;46582:6;46578:14;46571:51;46560:69;:::o;46635:214::-;46775:66;46771:1;46763:6;46759:14;46752:90;46741:108;:::o;46855:228::-;46995:34;46991:1;46983:6;46979:14;46972:58;47064:11;47059:2;47051:6;47047:15;47040:36;46961:122;:::o;47089:214::-;47229:66;47225:1;47217:6;47213:14;47206:90;47195:108;:::o;47309:315::-;47449:66;47445:1;47437:6;47433:14;47426:90;47550:66;47545:2;47537:6;47533:15;47526:91;47415:209;:::o;47630:214::-;47770:66;47766:1;47758:6;47754:14;47747:90;47736:108;:::o;47850:249::-;47990:34;47986:1;47978:6;47974:14;47967:58;48059:32;48054:2;48046:6;48042:15;48035:57;47956:143;:::o;48105:182::-;48245:34;48241:1;48233:6;48229:14;48222:58;48211:76;:::o;48293:143::-;48429:3;48425:1;48417:6;48413:14;48406:27;48399:37;:::o;48438:206::-;48574:66;48570:1;48562:6;48558:14;48551:90;48544:100;:::o;48646:174::-;48782:34;48778:1;48770:6;48766:14;48759:58;48752:68;:::o;48822:147::-;48958:3;48954:1;48946:6;48942:14;48935:27;48928:41;:::o;48975:174::-;49115:26;49111:1;49103:6;49099:14;49092:50;49081:68;:::o;49155:220::-;49295:34;49291:1;49283:6;49279:14;49272:58;49364:3;49359:2;49351:6;49347:15;49340:28;49261:114;:::o;49381:179::-;49521:31;49517:1;49509:6;49505:14;49498:55;49487:73;:::o;49566:114::-;49672:8;:::o;49686:231::-;49826:34;49822:1;49814:6;49810:14;49803:58;49895:14;49890:2;49882:6;49878:15;49871:39;49792:125;:::o;49923:233::-;50063:34;50059:1;50051:6;50047:14;50040:58;50132:16;50127:2;50119:6;50115:15;50108:41;50029:127;:::o;50162:122::-;50235:24;50253:5;50235:24;:::i;:::-;50228:5;50225:35;50215:2;;50274:1;50271;50264:12;50215:2;50205:79;:::o;50290:116::-;50360:21;50375:5;50360:21;:::i;:::-;50353:5;50350:32;50340:2;;50396:1;50393;50386:12;50340:2;50330:76;:::o;50412:120::-;50484:23;50501:5;50484:23;:::i;:::-;50477:5;50474:34;50464:2;;50522:1;50519;50512:12;50464:2;50454:78;:::o;50538:122::-;50611:24;50629:5;50611:24;:::i;:::-;50604:5;50601:35;50591:2;;50650:1;50647;50640:12;50591:2;50581:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4277200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1712","batchSize()":"1269","checkUpkeep(bytes)":"infinite","getApproved(uint256)":"2680","isApprovedForAll(address,address)":"infinite","lastRevealed()":"1205","maxSupply()":"infinite","mint(uint256)":"infinite","mintCost()":"infinite","name()":"infinite","owner()":"1312","ownerOf(uint256)":"1748","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"24444","revealInterval()":"1183","revealPendingMetadata()":"infinite","revealedCount()":"1204","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","setRevealBatchSize(uint256)":"21517","setRevealInterval(uint256)":"21451","shouldReveal()":"infinite","substring(string,uint256,uint256)":"infinite","supportsInterface(bytes4)":"909","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"1191","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"24857","withdrawProceeds()":"infinite"},"internal":{"_formatTokenURI(string memory)":"infinite","_fulfillRandomnessForMetadata(uint256)":"infinite","_generateSVG(uint256,bool)":"infinite","_getTokenRandomness(uint256)":"infinite","_svgToImageURI(string memory)":"infinite","fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchSize()":"f4daaba1","checkUpkeep(bytes)":"6e04ff0d","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","lastRevealed()":"7b4fab5a","maxSupply()":"d5abeb01","mint(uint256)":"a0712d68","mintCost()":"bdb4b848","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","revealInterval()":"247cd8ad","revealPendingMetadata()":"96634a40","revealedCount()":"bbd78e93","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setRevealBatchSize(uint256)":"aaae4e23","setRevealInterval(uint256)":"5c65d81f","shouldReveal()":"cf3b94cd","substring(string,uint256,uint256)":"1dcd9b55","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_vrfSubscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_vrfGasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"_vrfCallbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLINK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RevealCriteriaNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RevealInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawProceedsFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"BatchRevealFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"BatchRevealRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRevealed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealPendingMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"}],\"name\":\"setRevealBatchSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"}],\"name\":\"setRevealInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReveal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"substring\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCollection.sol\":\"NFTCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/INFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface INFTCollection {\\n    function mint(uint256 _amount) external payable;\\n\\n    function withdrawProceeds() external;\\n\\n    function revealedCount() external view returns(uint256);\\n\\n    function lastRevealed() external view returns(uint256);\\n\\n    function batchSize() external view returns(uint256);\\n\\n    function revealInterval() external view returns(uint256);\\n\\n    function mintCost() external view returns (uint256);\\n\\n    function maxSupply() external view returns (uint256);\\n\\n    function shouldReveal() external view returns (bool);\\n\\n    function revealPendingMetadata() external returns (uint256 requestId);\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\\n\\n    function setRevealInterval(uint256 _revealInterval) external;\\n}\\n\",\"keccak256\":\"0x7d1a0ec803647708dfc18e7e377c954e6fbd106c7da7d0da0904d0fb475bb157\",\"license\":\"MIT\"},\"contracts/NFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\\\";\\nimport \\\"./INFTCollection.sol\\\";\\n\\ncontract NFTCollection is\\n    INFTCollection,\\n    Ownable,\\n    ERC721Enumerable,\\n    VRFConsumerBaseV2,\\n    KeeperCompatibleInterface\\n{\\n    // STRUCTS\\n\\n    struct Metadata {\\n        uint256 startIndex;\\n        uint256 endIndex;\\n        uint256 entropy;\\n    }\\n\\n    // IMMUTABLE STORAGE\\n\\n    uint256 private immutable MAX_SUPPLY;\\n    uint256 private immutable MINT_COST;\\n\\n    // MUTABLE STORAGE\\n\\n    uint256 private s_revealedCount;\\n    uint256 private s_revealBatchSize;\\n    uint256 private s_revealInterval;\\n    uint256 private s_lastRevealed = block.timestamp;\\n    bool private s_revealInProgress;\\n    Metadata[] private s_metadatas;\\n\\n    // VRF CONSTANTS & IMMUTABLE\\n\\n    uint16 private constant VRF_REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant VRF_NUM_WORDS = 1;\\n\\n    VRFCoordinatorV2Interface private immutable VRF_COORDINATOR_V2;\\n    uint64 private immutable VRF_SUBSCRIPTION_ID;\\n    bytes32 private immutable VRF_GAS_LANE;\\n    uint32 private immutable VRF_CALLBACK_GAS_LIMIT;\\n\\n    // EVENTS\\n\\n    event BatchRevealRequested(uint256 requestId);\\n    event BatchRevealFinished(uint256 startIndex, uint256 endIndex);\\n\\n    // ERRORS\\n\\n    error InvalidAmount();\\n    error MaxSupplyReached();\\n    error InsufficientFunds();\\n    error RevealCriteriaNotMet();\\n    error RevealInProgress();\\n    error InsufficientLINK();\\n    error WithdrawProceedsFailed();\\n    error NonExistentToken();\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _maxSupply,\\n        uint256 _mintCost,\\n        uint256 _revealBatchSize,\\n        uint256 _revealInterval,\\n        address _vrfCoordinatorV2,\\n        uint64 _vrfSubscriptionId,\\n        bytes32 _vrfGasLane,\\n        uint32 _vrfCallbackGasLimit\\n    ) ERC721(_name, _symbol) VRFConsumerBaseV2(_vrfCoordinatorV2) {\\n        MAX_SUPPLY = _maxSupply;\\n        MINT_COST = _mintCost;\\n        VRF_COORDINATOR_V2 = VRFCoordinatorV2Interface(_vrfCoordinatorV2);\\n        VRF_SUBSCRIPTION_ID = _vrfSubscriptionId;\\n        VRF_GAS_LANE = _vrfGasLane;\\n        VRF_CALLBACK_GAS_LIMIT = _vrfCallbackGasLimit;\\n        s_revealBatchSize = _revealBatchSize;\\n        s_revealInterval = _revealInterval;\\n    }\\n\\n    // ACTIONS\\n\\n    function mint(uint256 _amount) external payable override {\\n        uint256 totalSupply = totalSupply();\\n        if (_amount == 0) {\\n            revert InvalidAmount();\\n        }\\n        if (totalSupply + _amount > MAX_SUPPLY) {\\n            revert MaxSupplyReached();\\n        }\\n        if (msg.value < MINT_COST * _amount) {\\n            revert InsufficientFunds();\\n        }\\n        for (uint256 i = 1; i <= _amount; i++) {\\n            _safeMint(msg.sender, totalSupply + i);\\n        }\\n    }\\n\\n    function withdrawProceeds() external override onlyOwner {\\n        (bool sent, ) = payable(owner()).call{value: address(this).balance}(\\\"\\\");\\n        if (!sent) {\\n            revert WithdrawProceedsFailed();\\n        }\\n    }\\n\\n    // GETTERS\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override\\n        returns (string memory)\\n    {\\n        if (!_exists(tokenId)) {\\n            revert NonExistentToken();\\n        }\\n        (uint256 randomness, bool metadataCleared) = _getTokenRandomness(tokenId);\\n        string memory svg = _generateSVG(randomness, metadataCleared);\\n        string memory svgEncoded = _svgToImageURI(svg);\\n        return _formatTokenURI(svgEncoded);\\n    }\\n\\n    function revealedCount() external view override returns (uint256) {\\n        return s_revealedCount;\\n    }\\n\\n    function lastRevealed() external view override returns (uint256) {\\n        return s_lastRevealed;\\n    }\\n\\n    function batchSize() external view override returns (uint256) {\\n        return s_revealBatchSize;\\n    }\\n\\n    function revealInterval() external view override returns (uint256) {\\n        return s_revealInterval;\\n    }\\n\\n    function mintCost() public view override returns (uint256) {\\n        return MINT_COST;\\n    }\\n\\n    function maxSupply() public view override returns (uint256) {\\n        return MAX_SUPPLY;\\n    }\\n\\n    // HELPERS\\n\\n    function _getTokenRandomness(uint256 tokenId)\\n        internal\\n        view\\n        returns (uint256 randomness, bool metadataCleared)\\n    {\\n        for (uint256 i = 0; i < s_metadatas.length; i++) {\\n            if (\\n                tokenId >= s_metadatas[i].startIndex &&\\n                tokenId < s_metadatas[i].endIndex\\n            ) {\\n                randomness = uint256(\\n                    keccak256(abi.encode(s_metadatas[i].entropy, tokenId))\\n                );\\n                metadataCleared = true;\\n            }\\n        }\\n    }\\n\\n    function _formatTokenURI(string memory imageURI)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"data:application/json;base64,\\\",\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{',\\n                                    '\\\"name\\\":\\\"NFT\\\", ',\\n                                    '\\\"description\\\":\\\"Batch-revealed NFT!\\\", ',\\n                                    '\\\"attributes\\\":\\\"\\\", ',\\n                                    '\\\"image\\\":\\\"', imageURI, '\\\"',\\n                                '}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function _generateSVG(uint256 _randomness, bool _metadataCleared)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        string[4] memory parts;\\n        parts[0] = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 350 350\\\">';\\n        if (_metadataCleared) {\\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 54px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"black\\\" /><text class=\\\"base\\\">';\\n            string[7] memory slicedRandomness;\\n            string memory randomnessString = Strings.toString(_randomness);\\n\\n            for (uint8 i = 0; i < 7; i++) {\\n                string memory partialNumber = substring(randomnessString,i*11,(i+1)*11);\\n                slicedRandomness[i] = string(\\n                    abi.encodePacked(\\n                        '<tspan x=\\\"12\\\" dy=\\\"48\\\">',\\n                        partialNumber,\\n                        \\\"</tspan>\\\"\\n                    )\\n                );\\n            }\\n            parts[2] = string(\\n                abi.encodePacked(\\n                    slicedRandomness[0],\\n                    slicedRandomness[1],\\n                    slicedRandomness[2],\\n                    slicedRandomness[3],\\n                    slicedRandomness[4],\\n                    slicedRandomness[5],\\n                    slicedRandomness[6]\\n                )\\n            );\\n        } else {\\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"black\\\" /><text x=\\\"90\\\" y=\\\"295\\\" class=\\\"base\\\">';\\n            parts[2] = \\\"?\\\";\\n        }\\n\\n        parts[3] = \\\"</text></svg>\\\";\\n\\n        return string(abi.encodePacked(parts[0], parts[1], parts[2], parts[3]));\\n    }\\n\\n    function _svgToImageURI(string memory svg)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        string memory baseURL = \\\"data:image/svg+xml;base64,\\\";\\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\\n    }\\n\\n    function substring(\\n        string memory str,\\n        uint256 startIndex,\\n        uint256 endIndex\\n    ) public pure returns (string memory) {\\n        bytes memory strBytes = bytes(str);\\n        bytes memory result = new bytes(endIndex - startIndex);\\n        for (uint256 i = startIndex; i < endIndex; i++) {\\n            result[i - startIndex] = strBytes[i];\\n        }\\n        return string(result);\\n    }\\n\\n    // REVEAL\\n\\n    function shouldReveal() public view override returns (bool) {\\n        uint256 unrevealedCount = totalSupply() - s_revealedCount;\\n        if (unrevealedCount == 0) {\\n            return false;\\n        }\\n        bool batchSizeCriteria = false;\\n        if (s_revealBatchSize > 0 && unrevealedCount >= s_revealBatchSize) {\\n            batchSizeCriteria = true;\\n        }\\n        bool intervalCriteria = false;\\n        if (\\n            s_revealInterval > 0 &&\\n            block.timestamp - s_lastRevealed > s_revealInterval\\n        ) {\\n            intervalCriteria = true;\\n        }\\n        return (batchSizeCriteria || intervalCriteria);\\n    }\\n\\n    function revealPendingMetadata()\\n        public\\n        override\\n        returns (uint256 requestId){\\n        if (s_revealInProgress) {\\n            revert RevealInProgress();\\n        }\\n        if (!shouldReveal()) {\\n            revert RevealCriteriaNotMet();\\n        }\\n        requestId = VRF_COORDINATOR_V2.requestRandomWords(\\n            VRF_GAS_LANE,\\n            VRF_SUBSCRIPTION_ID,\\n            VRF_REQUEST_CONFIRMATIONS,\\n            VRF_CALLBACK_GAS_LIMIT,\\n            VRF_NUM_WORDS\\n        );\\n        s_revealInProgress = true;\\n        emit BatchRevealRequested(requestId);\\n    }\\n\\n    function _fulfillRandomnessForMetadata(uint256 randomness) internal {\\n        uint256 totalSupply = totalSupply();\\n        uint256 startIndex = s_revealedCount + 1;\\n        uint256 endIndex = totalSupply + 1;\\n        s_metadatas.push(\\n            Metadata({\\n                startIndex: startIndex,\\n                endIndex: endIndex,\\n                entropy: randomness\\n            })\\n        );\\n        s_revealedCount = totalSupply;\\n        s_lastRevealed = block.timestamp;\\n        s_revealInProgress = false;\\n        emit BatchRevealFinished(startIndex, endIndex);\\n    }\\n\\n    // VRF\\n\\n    function fulfillRandomWords(uint256, uint256[] memory randomWords)\\n        internal\\n        override\\n    {\\n        _fulfillRandomnessForMetadata(randomWords[0]);\\n    }\\n\\n    // KEEPERS\\n\\n    function checkUpkeep(bytes calldata)\\n        external\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory)\\n    {\\n        upkeepNeeded = !s_revealInProgress && shouldReveal();\\n    }\\n\\n    function performUpkeep(bytes calldata) external override {\\n        revealPendingMetadata();\\n    }\\n\\n    // SETTERS\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        s_revealBatchSize = _revealBatchSize;\\n    }\\n\\n    function setRevealInterval(uint256 _revealInterval)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        s_revealInterval = _revealInterval;\\n    }\\n}\\n\",\"keccak256\":\"0x3a412f843d7fa76853751592d6f25f3f1cdaaebd2fead8a2692b441c915743db\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":212,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":343,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":345,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":349,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_balances","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_tokenApprovals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_operatorApprovals","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1333,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_ownedTokens","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1337,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_ownedTokensIndex","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1340,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_allTokens","offset":0,"slot":"9","type":"t_array(t_uint256)dyn_storage"},{"astId":1344,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_allTokensIndex","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2434,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealedCount","offset":0,"slot":"11","type":"t_uint256"},{"astId":2436,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealBatchSize","offset":0,"slot":"12","type":"t_uint256"},{"astId":2438,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealInterval","offset":0,"slot":"13","type":"t_uint256"},{"astId":2442,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_lastRevealed","offset":0,"slot":"14","type":"t_uint256"},{"astId":2444,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealInProgress","offset":0,"slot":"15","type":"t_bool"},{"astId":2448,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_metadatas","offset":0,"slot":"16","type":"t_array(t_struct(Metadata)2428_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Metadata)2428_storage)dyn_storage":{"base":"t_struct(Metadata)2428_storage","encoding":"dynamic_array","label":"struct NFTCollection.Metadata[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Metadata)2428_storage":{"encoding":"inplace","label":"struct NFTCollection.Metadata","members":[{"astId":2423,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"startIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":2425,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"endIndex","offset":0,"slot":"1","type":"t_uint256"},{"astId":2427,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"entropy","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}