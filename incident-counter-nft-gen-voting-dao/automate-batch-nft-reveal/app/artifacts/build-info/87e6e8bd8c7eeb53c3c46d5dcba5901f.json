{"id":"87e6e8bd8c7eeb53c3c46d5dcba5901f","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"contracts/NFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\";\nimport \"./INFTCollection.sol\";\n\ncontract NFTCollection is\n    INFTCollection,\n    Ownable,\n    ERC721Enumerable,\n    VRFConsumerBaseV2,\n    KeeperCompatibleInterface\n{\n    // STRUCTS\n\n    struct Metadata {\n        uint256 startIndex;\n        uint256 endIndex;\n        uint256 entropy;\n    }\n\n    // IMMUTABLE STORAGE\n\n    uint256 private immutable MAX_SUPPLY;\n    uint256 private immutable MINT_COST;\n\n    // MUTABLE STORAGE\n\n    uint256 private s_revealedCount;\n    uint256 private s_revealBatchSize;\n    uint256 private s_revealInterval;\n    uint256 private s_lastRevealed = block.timestamp;\n    bool private s_revealInProgress;\n    Metadata[] private s_metadatas;\n\n    // VRF CONSTANTS & IMMUTABLE\n\n    uint16 private constant VRF_REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant VRF_NUM_WORDS = 1;\n\n    VRFCoordinatorV2Interface private immutable VRF_COORDINATOR_V2;\n    uint64 private immutable VRF_SUBSCRIPTION_ID;\n    bytes32 private immutable VRF_GAS_LANE;\n    uint32 private immutable VRF_CALLBACK_GAS_LIMIT;\n\n    // EVENTS\n\n    event BatchRevealRequested(uint256 requestId);\n    event BatchRevealFinished(uint256 startIndex, uint256 endIndex);\n\n    // ERRORS\n\n    error InvalidAmount();\n    error MaxSupplyReached();\n    error InsufficientFunds();\n    error RevealCriteriaNotMet();\n    error RevealInProgress();\n    error InsufficientLINK();\n    error WithdrawProceedsFailed();\n    error NonExistentToken();\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _maxSupply,\n        uint256 _mintCost,\n        uint256 _revealBatchSize,\n        uint256 _revealInterval,\n        address _vrfCoordinatorV2,\n        uint64 _vrfSubscriptionId,\n        bytes32 _vrfGasLane,\n        uint32 _vrfCallbackGasLimit\n    ) ERC721(_name, _symbol) VRFConsumerBaseV2(_vrfCoordinatorV2) {\n        MAX_SUPPLY = _maxSupply;\n        MINT_COST = _mintCost;\n        VRF_COORDINATOR_V2 = VRFCoordinatorV2Interface(_vrfCoordinatorV2);\n        VRF_SUBSCRIPTION_ID = _vrfSubscriptionId;\n        VRF_GAS_LANE = _vrfGasLane;\n        VRF_CALLBACK_GAS_LIMIT = _vrfCallbackGasLimit;\n        s_revealBatchSize = _revealBatchSize;\n        s_revealInterval = _revealInterval;\n    }\n\n    // ACTIONS\n\n    function mint(uint256 _amount) external payable override {\n        uint256 totalSupply = totalSupply();\n        if (_amount == 0) {\n            revert InvalidAmount();\n        }\n        if (totalSupply + _amount > MAX_SUPPLY) {\n            revert MaxSupplyReached();\n        }\n        if (msg.value < MINT_COST * _amount) {\n            revert InsufficientFunds();\n        }\n        for (uint256 i = 1; i <= _amount; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n    }\n\n    function withdrawProceeds() external override onlyOwner {\n        (bool sent, ) = payable(owner()).call{value: address(this).balance}(\"\");\n        if (!sent) {\n            revert WithdrawProceedsFailed();\n        }\n    }\n\n    // GETTERS\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        if (!_exists(tokenId)) {\n            revert NonExistentToken();\n        }\n        (uint256 randomness, bool metadataCleared) = _getTokenRandomness(tokenId);\n        string memory svg = _generateSVG(randomness, metadataCleared);\n        string memory svgEncoded = _svgToImageURI(svg);\n        return _formatTokenURI(svgEncoded);\n    }\n\n    function revealedCount() external view override returns (uint256) {\n        return s_revealedCount;\n    }\n\n    function lastRevealed() external view override returns (uint256) {\n        return s_lastRevealed;\n    }\n\n    function batchSize() external view override returns (uint256) {\n        return s_revealBatchSize;\n    }\n\n    function revealInterval() external view override returns (uint256) {\n        return s_revealInterval;\n    }\n\n    function batchCount() external view returns (uint256) {\n        return s_metadatas.length;\n    }\n\n    function batchDetails(uint256 index)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        Metadata memory batch = s_metadatas[index];\n        return (batch.startIndex, batch.endIndex, batch.entropy);\n    }\n\n    function mintCost() public view override returns (uint256) {\n        return MINT_COST;\n    }\n\n    function maxSupply() external view override returns (uint256) {\n        return MAX_SUPPLY;\n    }\n\n    // HELPERS\n\n    function _getTokenRandomness(uint256 tokenId)\n        internal\n        view\n        returns (uint256 randomness, bool metadataCleared)\n    {\n        for (uint256 i = 0; i < s_metadatas.length; i++) {\n            if (\n                tokenId >= s_metadatas[i].startIndex &&\n                tokenId < s_metadatas[i].endIndex\n            ) {\n                randomness = uint256(\n                    keccak256(abi.encode(s_metadatas[i].entropy, tokenId))\n                );\n                metadataCleared = true;\n            }\n        }\n    }\n\n    function _formatTokenURI(string memory imageURI)\n        internal\n        pure\n        returns (string memory)\n    {\n        return\n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(\n                        bytes(\n                            abi.encodePacked(\n                                '{',\n                                    '\"name\":\"NFT\", ',\n                                    '\"description\":\"Batch-revealed NFT!\", ',\n                                    '\"attributes\":\"\", ',\n                                    '\"image\":\"', imageURI, '\"',\n                                '}'\n                            )\n                        )\n                    )\n                )\n            );\n    }\n\n    function _generateSVG(uint256 _randomness, bool _metadataCleared)\n        internal\n        pure\n        returns (string memory)\n    {\n        string[4] memory parts;\n        parts[0] = '<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">';\n        if (_metadataCleared) {\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 59px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">';\n            string[6] memory svgRows;\n            string memory randomnessString = Strings.toHexString(_randomness, 32);\n            for (uint8 i = 0; i < 6; i++) {\n                string memory partialString = _substring(randomnessString, i * 11, (i + 1) * 11);\n                svgRows[i] = string(\n                    abi.encodePacked(\n                        '<tspan x=\"16\" dy=\"56\">',\n                        partialString,\n                        \"</tspan>\"\n                    )\n                );\n            }\n            parts[2] = string(\n                abi.encodePacked(\n                    svgRows[0],\n                    svgRows[1],\n                    svgRows[2],\n                    svgRows[3],\n                    svgRows[4],\n                    svgRows[5]\n                )\n            );\n        } else {\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">';\n            parts[2] = \"?\";\n        }\n        parts[3] = \"</text></svg>\";\n        return string(abi.encodePacked(parts[0], parts[1], parts[2], parts[3]));\n    }\n\n    function _svgToImageURI(string memory svg)\n        internal\n        pure\n        returns (string memory)\n    {\n        string memory baseURL = \"data:image/svg+xml;base64,\";\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\n    }\n\n    function _substring(\n        string memory str,\n        uint256 startIndex,\n        uint256 endIndex\n    ) internal pure returns (string memory) {\n        bytes memory strBytes = bytes(str);\n        bytes memory result = new bytes(endIndex - startIndex);\n        for (uint256 i = startIndex; i < endIndex; i++) {\n            result[i - startIndex] = strBytes[i];\n        }\n        return string(result);\n    }\n\n    // REVEAL\n\n    function shouldReveal() public view override returns (bool) {\n        uint256 unrevealedCount = totalSupply() - s_revealedCount;\n        if (unrevealedCount == 0) {\n            return false;\n        }\n        bool batchSizeCriteria = false;\n        if (s_revealBatchSize > 0 && unrevealedCount >= s_revealBatchSize) {\n            batchSizeCriteria = true;\n        }\n        bool intervalCriteria = false;\n        if (\n            s_revealInterval > 0 &&\n            block.timestamp - s_lastRevealed > s_revealInterval\n        ) {\n            intervalCriteria = true;\n        }\n        return (batchSizeCriteria || intervalCriteria);\n    }\n\n    function revealPendingMetadata()\n        public\n        override\n        returns (uint256 requestId){\n        if (s_revealInProgress) {\n            revert RevealInProgress();\n        }\n        if (!shouldReveal()) {\n            revert RevealCriteriaNotMet();\n        }\n        requestId = VRF_COORDINATOR_V2.requestRandomWords(\n            VRF_GAS_LANE,\n            VRF_SUBSCRIPTION_ID,\n            VRF_REQUEST_CONFIRMATIONS,\n            VRF_CALLBACK_GAS_LIMIT,\n            VRF_NUM_WORDS\n        );\n        s_revealInProgress = true;\n        emit BatchRevealRequested(requestId);\n    }\n\n    function _fulfillRandomnessForMetadata(uint256 randomness) internal {\n        uint256 totalSupply = totalSupply();\n        uint256 startIndex = s_revealedCount + 1;\n        uint256 endIndex = totalSupply + 1;\n        s_metadatas.push(\n            Metadata({\n                startIndex: startIndex,\n                endIndex: endIndex,\n                entropy: randomness\n            })\n        );\n        s_revealedCount = totalSupply;\n        s_lastRevealed = block.timestamp;\n        s_revealInProgress = false;\n        emit BatchRevealFinished(startIndex, endIndex);\n    }\n\n    // VRF\n\n    function fulfillRandomWords(uint256, uint256[] memory randomWords)\n        internal\n        override\n    {\n        _fulfillRandomnessForMetadata(randomWords[0]);\n    }\n\n    // KEEPERS\n\n    function checkUpkeep(bytes calldata)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory)\n    {\n        upkeepNeeded = !s_revealInProgress && shouldReveal();\n    }\n\n    function performUpkeep(bytes calldata) external override {\n        revealPendingMetadata();\n    }\n\n    // SETTERS\n\n    function setRevealBatchSize(uint256 _revealBatchSize)\n        external\n        override\n        onlyOwner\n    {\n        s_revealBatchSize = _revealBatchSize;\n    }\n\n    function setRevealInterval(uint256 _revealInterval)\n        external\n        override\n        onlyOwner\n    {\n        s_revealInterval = _revealInterval;\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override\n        returns (bool)\n    {\n        return\n            super.supportsInterface(interfaceId) ||\n            interfaceId == type(INFTCollection).interfaceId;\n    }\n}\n"},"contracts/INFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\ninterface INFTCollection {\n    function mint(uint256 _amount) external payable;\n\n    function withdrawProceeds() external;\n\n    function revealedCount() external view returns(uint256);\n\n    function lastRevealed() external view returns(uint256);\n\n    function batchSize() external view returns(uint256);\n\n    function revealInterval() external view returns(uint256);\n\n    function mintCost() external view returns (uint256);\n\n    function maxSupply() external view returns (uint256);\n\n    function shouldReveal() external view returns (bool);\n\n    function revealPendingMetadata() external returns (uint256 requestId);\n\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\n\n    function setRevealInterval(uint256 _revealInterval) external;\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n *\n * _Available since v4.5._\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./KeeperBase.sol\";\nimport \"./interfaces/KeeperCompatibleInterface.sol\";\n\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract KeeperBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/NFTCollection.sol:354:37:\n    |\n354 |         returns (bool upkeepNeeded, bytes memory)\n    |                                     ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":10902,"file":"contracts/NFTCollection.sol","start":10890},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","exportedSymbols":{"KeeperBase":[29]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":29,"linearizedBaseContracts":[29],"name":"KeeperBase","nameLocation":"66:10:0","nodeType":"ContractDefinition","nodes":[{"id":3,"name":"OnlySimulatedBackend","nameLocation":"87:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"107:2:0"},"src":"81:29:0"},{"body":{"id":19,"nodeType":"Block","src":"286:83:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"296:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"296:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"309:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"309:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"296:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18,"nodeType":"IfStatement","src":"292:73:0","trueBody":{"id":17,"nodeType":"Block","src":"321:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":14,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"336:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"336:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16,"nodeType":"RevertStatement","src":"329:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"114:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"preventExecution","nameLocation":"253:16:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"269:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"286:0:0"},"scope":29,"src":"244:125:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":27,"nodeType":"Block","src":"530:36:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"536:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"536:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"536:18:0"},{"id":26,"nodeType":"PlaceholderStatement","src":"560:1:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"373:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":28,"name":"cannotExecute","nameLocation":"514:13:0","nodeType":"ModifierDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"527:2:0"},"src":"505:61:0","virtual":false,"visibility":"internal"}],"scope":30,"src":"57:511:0","usedErrors":[3]}],"src":"32:537:0"},"id":0},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","exportedSymbols":{"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115]},"id":39,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","file":"./KeeperBase.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":30,"src":"57:26:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","file":"./interfaces/KeeperCompatibleInterface.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":116,"src":"84:52:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":34,"name":"KeeperBase","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"176:10:1"},"id":35,"nodeType":"InheritanceSpecifier","src":"176:10:1"},{"baseName":{"id":36,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"188:25:1"},"id":37,"nodeType":"InheritanceSpecifier","src":"188:25:1"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":38,"linearizedBaseContracts":[38,115,29],"name":"KeeperCompatible","nameLocation":"156:16:1","nodeType":"ContractDefinition","nodes":[],"scope":39,"src":"138:78:1","usedErrors":[3]}],"src":"32:185:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[96]},"id":97,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":40,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":96,"linearizedBaseContracts":[96],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"id":47,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":49,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":96,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":59,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":55,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":58,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":60,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":60,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":96,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":69,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":69,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":69,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":96,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":94,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":77,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":79,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":88,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":87,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":82,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":84,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":81,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":90,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":91,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":89,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":95,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":95,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":95,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":96,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":97,"src":"5333:1543:2","usedErrors":[47]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":98,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":115,"linearizedBaseContracts":[115],"name":"KeeperCompatibleInterface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"97:985:3","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1094:11:3","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"checkData","nameLocation":"1121:9:3","nodeType":"VariableDeclaration","scope":108,"src":"1106:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":100,"name":"bytes","nodeType":"ElementaryTypeName","src":"1106:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1105:26:3"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1155:12:3","nodeType":"VariableDeclaration","scope":108,"src":"1150:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103,"name":"bool","nodeType":"ElementaryTypeName","src":"1150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"performData","nameLocation":"1182:11:3","nodeType":"VariableDeclaration","scope":108,"src":"1169:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":105,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1149:45:3"},"scope":115,"src":"1085:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1199:1003:3","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2214:13:3","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"performData","nameLocation":"2243:11:3","nodeType":"VariableDeclaration","scope":114,"src":"2228:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2228:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2227:28:3"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2264:0:3"},"scope":115,"src":"2205:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":116,"src":"57:2210:3","usedErrors":[]}],"src":"32:2236:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[204]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":204,"linearizedBaseContracts":[204],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"97:267:4","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:4","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"392:2:4"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"437:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":120,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"451:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":122,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"465:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":125,"nodeType":"ArrayTypeName","src":"465:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:4"},"scope":204,"src":"367:121:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"492:1511:4","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:4","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:4","nodeType":"VariableDeclaration","scope":144,"src":"2039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"subId","nameLocation":"2067:5:4","nodeType":"VariableDeclaration","scope":144,"src":"2060:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":132,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:4","nodeType":"VariableDeclaration","scope":144,"src":"2078:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:4","nodeType":"VariableDeclaration","scope":144,"src":"2118:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":136,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:4","nodeType":"VariableDeclaration","scope":144,"src":"2147:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":138,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:4"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:4","nodeType":"VariableDeclaration","scope":144,"src":"2185:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:4"},"scope":204,"src":"2006:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2208:384:4","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:4","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"2622:2:4"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"subId","nameLocation":"2650:5:4","nodeType":"VariableDeclaration","scope":150,"src":"2643:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":147,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:4"},"scope":204,"src":"2595:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"2661:381:4","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"subId","nameLocation":"3077:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3070:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":152,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:4"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"balance","nameLocation":"3133:7:4","nodeType":"VariableDeclaration","scope":165,"src":"3126:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":155,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:4","nodeType":"VariableDeclaration","scope":165,"src":"3148:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":157,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"3179:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:4","nodeType":"VariableDeclaration","scope":165,"src":"3192:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":162,"nodeType":"ArrayTypeName","src":"3192:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:4"},"scope":204,"src":"3045:180:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"3229:164:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:4","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"subId","nameLocation":"3445:5:4","nodeType":"VariableDeclaration","scope":173,"src":"3438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":167,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:4","nodeType":"VariableDeclaration","scope":173,"src":"3452:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:4"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"3478:0:4"},"scope":204,"src":"3396:83:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"3483:212:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":179,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:4","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"subId","nameLocation":"3746:5:4","nodeType":"VariableDeclaration","scope":179,"src":"3739:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":175,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:4"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"3761:0:4"},"scope":204,"src":"3698:64:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"3766:170:4","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:4","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"subId","nameLocation":"3967:5:4","nodeType":"VariableDeclaration","scope":187,"src":"3960:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":181,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:4","nodeType":"VariableDeclaration","scope":187,"src":"3974:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:4"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"4000:0:4"},"scope":204,"src":"3939:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"4005:172:4","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:4","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"subId","nameLocation":"4211:5:4","nodeType":"VariableDeclaration","scope":195,"src":"4204:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":189,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:4","nodeType":"VariableDeclaration","scope":195,"src":"4218:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:4"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"4244:0:4"},"scope":204,"src":"4180:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4249:140:4","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:4","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"subId","nameLocation":"4427:5:4","nodeType":"VariableDeclaration","scope":203,"src":"4420:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"to","nameLocation":"4442:2:4","nodeType":"VariableDeclaration","scope":203,"src":"4434:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:4"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"4454:0:4"},"scope":204,"src":"4392:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":205,"src":"57:4400:4","usedErrors":[]}],"src":"32:4426:4"},"id":4},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2078],"Ownable":[317]},"id":318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":2079,"src":"127:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":209,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"683:7:5"},"id":210,"nodeType":"InheritanceSpecifier","src":"683:7:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"159:494:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":317,"linearizedBaseContracts":[317,2078],"name":"Ownable","nameLocation":"672:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":212,"mutability":"mutable","name":"_owner","nameLocation":"713:6:5","nodeType":"VariableDeclaration","scope":317,"src":"697:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":218,"name":"OwnershipTransferred","nameLocation":"732:20:5","nodeType":"EventDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:5","nodeType":"VariableDeclaration","scope":218,"src":"753:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:5","nodeType":"VariableDeclaration","scope":218,"src":"784:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:5"},"src":"726:84:5"},{"body":{"id":227,"nodeType":"Block","src":"926:49:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"955:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":222,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"936:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"936:32:5"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"816:91:5","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":228,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"923:2:5"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"926:0:5"},"scope":317,"src":"912:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"1084:41:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1094:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"ExpressionStatement","src":"1094:13:5"},{"id":234,"nodeType":"PlaceholderStatement","src":"1117:1:5"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"981:77:5","text":" @dev Throws if called by any account other than the owner."},"id":236,"name":"onlyOwner","nameLocation":"1072:9:5","nodeType":"ModifierDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"1081:2:5"},"src":"1063:62:5","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"1256:30:5","statements":[{"expression":{"id":242,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1273:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":241,"id":243,"nodeType":"Return","src":"1266:13:5"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"1131:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":245,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:5","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"1215:2:5"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"1247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:5"},"scope":317,"src":"1201:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":258,"nodeType":"Block","src":"1404:85:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1422:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":252,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1433:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"1414:68:5"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"1292:62:5","text":" @dev Throws if the sender is not the owner."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:5","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"1379:2:5"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1404:0:5"},"scope":317,"src":"1359:130:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":272,"nodeType":"Block","src":"1885:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:5","typeDescriptions":{}}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":265,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1895:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"1895:30:5"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1495:331:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":273,"implemented":true,"kind":"function","modifiers":[{"id":263,"kind":"modifierInvocation","modifierName":{"id":262,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"1875:9:5"},"nodeType":"ModifierInvocation","src":"1875:9:5"}],"name":"renounceOwnership","nameLocation":"1840:17:5","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"1857:2:5"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"1885:0:5"},"scope":317,"src":"1831:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":295,"nodeType":"Block","src":"2151:128:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":282,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2169:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:5","typeDescriptions":{}}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"2161:73:5"},{"expression":{"arguments":[{"id":292,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2263:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2244:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"2244:28:5"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1938:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":296,"implemented":true,"kind":"function","modifiers":[{"id":279,"kind":"modifierInvocation","modifierName":{"id":278,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"2141:9:5"},"nodeType":"ModifierInvocation","src":"2141:9:5"}],"name":"transferOwnership","nameLocation":"2090:17:5","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:5","nodeType":"VariableDeclaration","scope":296,"src":"2108:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:5"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2151:0:5"},"scope":317,"src":"2081:198:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":315,"nodeType":"Block","src":"2496:124:5","statements":[{"assignments":[303],"declarations":[{"constant":false,"id":303,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:5","nodeType":"VariableDeclaration","scope":315,"src":"2506:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":305,"initialValue":{"id":304,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:5"},{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":306,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"2541:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":307,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2550:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":309,"nodeType":"ExpressionStatement","src":"2541:17:5"},{"eventCall":{"arguments":[{"id":311,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2594:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":312,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2604:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":310,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2573:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"2568:45:5"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"2285:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":316,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:5","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:5","nodeType":"VariableDeclaration","scope":316,"src":"2461:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:5"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"2496:0:5"},"scope":317,"src":"2433:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":318,"src":"654:1968:5","usedErrors":[]}],"src":"102:2521:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2009],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"IERC165":[2340],"IERC721":[1300],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"Strings":[2304]},"id":1185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":319,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1301,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1319,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":1715,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2010,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2079,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2305,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":2329,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":328,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"647:7:6"},"id":329,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":330,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"656:6:6"},"id":331,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":332,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"664:7:6"},"id":333,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":334,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"673:15:6"},"id":335,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1184,"linearizedBaseContracts":[1184,1714,1300,2328,2340,2078],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"id":338,"libraryName":{"id":336,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":341,"libraryName":{"id":339,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2304,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":343,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":1184,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":342,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":345,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":349,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":348,"keyType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":353,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":1184,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":352,"keyType":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":357,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":1184,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":356,"keyType":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":363,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":1184,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":362,"keyType":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":361,"keyType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":360,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":379,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":371,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":372,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":374,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":375,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":376,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":378,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":380,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":380,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":365,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":380,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":1184,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2327,2339],"body":{"id":410,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":393,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1300_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1300_$","typeString":"type(contract IERC721)"}],"id":392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1300","typeString":"type(contract IERC721)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":399,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1714_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1714_$","typeString":"type(contract IERC721Metadata)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1714","typeString":"type(contract IERC721Metadata)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":406,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":404,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1184_$","typeString":"type(contract super ERC721)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":390,"id":409,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":411,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":387,"nodeType":"OverrideSpecifier","overrides":[{"id":385,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"1646:6:6"},{"id":386,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":411,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":382,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":1184,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1225],"body":{"id":434,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":430,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":432,"indexExpression":{"id":431,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":419,"id":433,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":416,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":435,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":1184,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1233],"body":{"id":462,"nodeType":"Block","src":"2271:137:6","statements":[{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":462,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":449,"initialValue":{"baseExpression":{"id":446,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2297:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":448,"indexExpression":{"id":447,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2305:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2331:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:6","typeDescriptions":{}}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"2323:56:6"},{"expression":{"id":460,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2396:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":461,"nodeType":"Return","src":"2389:12:6"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":440,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":463,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":1184,"src":"2190:218:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1699],"body":{"id":472,"nodeType":"Block","src":"2539:29:6","statements":[{"expression":{"id":470,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2556:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":469,"id":471,"nodeType":"Return","src":"2549:12:6"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2414:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":473,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:6","nodeType":"FunctionDefinition","overrides":{"id":466,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:6"},"parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2483:2:6"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"2524:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":467,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:6"},"scope":1184,"src":"2470:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1705],"body":{"id":482,"nodeType":"Block","src":"2703:31:6","statements":[{"expression":{"id":480,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2720:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":479,"id":481,"nodeType":"Return","src":"2713:14:6"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"2574:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:6","nodeType":"FunctionDefinition","overrides":{"id":476,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:6"},"parameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"2647:2:6"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2688:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:6"},"scope":1184,"src":"2632:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1713],"body":{"id":521,"nodeType":"Block","src":"2888:188:6","statements":[{"expression":{"arguments":[{"id":493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2898:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"2898:23:6"},{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:6","nodeType":"VariableDeclaration","scope":521,"src":"2932:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":500,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":498,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":503,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2989:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":501,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:6","typeDescriptions":{}}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:6","trueExpression":{"arguments":[{"arguments":[{"id":512,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3035:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3044:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2166,"src":"3044:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":510,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:6","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":491,"id":520,"nodeType":"Return","src":"2976:93:6"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2740:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:6","nodeType":"FunctionDefinition","overrides":{"id":488,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:6"},"parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:6","nodeType":"VariableDeclaration","scope":522,"src":"2818:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:6"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"2873:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":489,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:6"},"scope":1184,"src":"2800:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":530,"nodeType":"Block","src":"3384:26:6","statements":[{"expression":{"hexValue":"","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":527,"id":529,"nodeType":"Return","src":"3394:9:6"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3082:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:6","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"3335:2:6"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":531,"src":"3369:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:6"},"scope":1184,"src":"3318:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1273],"body":{"id":573,"nodeType":"Block","src":"3537:337:6","statements":[{"assignments":[541],"declarations":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3555:5:6","nodeType":"VariableDeclaration","scope":573,"src":"3547:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":546,"initialValue":{"arguments":[{"id":544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":542,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3563:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"3563:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3604:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3610:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"3596:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":555,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3685:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3701:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3727:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3734:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":559,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"3710:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"3664:171:6"},{"expression":{"arguments":[{"id":569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":568,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"3416:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:6","nodeType":"FunctionDefinition","overrides":{"id":538,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:6"},"parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"3492:2:6","nodeType":"VariableDeclaration","scope":574,"src":"3484:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:6","nodeType":"VariableDeclaration","scope":574,"src":"3496:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:6"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"3537:0:6"},"scope":1184,"src":"3467:407:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1289],"body":{"id":591,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":587,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":589,"indexExpression":{"id":588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":582,"id":590,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":592,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":592,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":1184,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1281],"body":{"id":608,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":602,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":604,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":601,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":599,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":609,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":609,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":596,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":1184,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1299],"body":{"id":626,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":620,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":622,"indexExpression":{"id":621,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":624,"indexExpression":{"id":623,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":619,"id":625,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":627,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":616,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":627,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":627,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":1184,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1265],"body":{"id":653,"nodeType":"Block","src":"4731:208:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4820:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":639,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4801:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"4793:100:6"},{"expression":{"arguments":[{"id":648,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4914:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4920:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4904:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"4904:28:6"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":636,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:6"},"parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"from","nameLocation":"4651:4:6","nodeType":"VariableDeclaration","scope":654,"src":"4643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"to","nameLocation":"4673:2:6","nodeType":"VariableDeclaration","scope":654,"src":"4665:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:6","nodeType":"VariableDeclaration","scope":654,"src":"4685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:6"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"4731:0:6"},"scope":1184,"src":"4612:327:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1255],"body":{"id":672,"nodeType":"Block","src":"5128:56:6","statements":[{"expression":{"arguments":[{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5155:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5161:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"5165:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":665,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[673,703],"referencedDeclaration":703,"src":"5138:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"5138:39:6"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"4945:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":673,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:6","nodeType":"FunctionDefinition","overrides":{"id":663,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:6"},"parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"from","nameLocation":"5048:4:6","nodeType":"VariableDeclaration","scope":673,"src":"5040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"5070:2:6","nodeType":"VariableDeclaration","scope":673,"src":"5062:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:6","nodeType":"VariableDeclaration","scope":673,"src":"5082:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:6"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"5128:0:6"},"scope":1184,"src":"5005:179:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1245],"body":{"id":702,"nodeType":"Block","src":"5400:165:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":688,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5437:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5451:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5418:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"5410:100:6"},{"expression":{"arguments":[{"id":696,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5553:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":695,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5520:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"5520:38:6"}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"5190:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:6","nodeType":"FunctionDefinition","overrides":{"id":684,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:6"},"parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"from","nameLocation":"5293:4:6","nodeType":"VariableDeclaration","scope":703,"src":"5285:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"to","nameLocation":"5315:2:6","nodeType":"VariableDeclaration","scope":703,"src":"5307:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:6","nodeType":"VariableDeclaration","scope":703,"src":"5327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"data","nameLocation":"5365:4:6","nodeType":"VariableDeclaration","scope":703,"src":"5352:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:6"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"5400:0:6"},"scope":1184,"src":"5250:315:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"6566:165:6","statements":[{"expression":{"arguments":[{"id":716,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6586:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"6592:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":715,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6576:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"6576:28:6"},{"expression":{"arguments":[{"arguments":[{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6645:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"6651:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":726,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6664:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":722,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6622:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"6614:110:6"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"5571:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:6","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"from","nameLocation":"6466:4:6","nodeType":"VariableDeclaration","scope":732,"src":"6458:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"to","nameLocation":"6488:2:6","nodeType":"VariableDeclaration","scope":732,"src":"6480:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:6","nodeType":"VariableDeclaration","scope":732,"src":"6500:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6538:4:6","nodeType":"VariableDeclaration","scope":732,"src":"6525:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:6"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"6566:0:6"},"scope":1184,"src":"6426:305:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"7105:54:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":740,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"7122:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":742,"indexExpression":{"id":741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"7130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:6","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":739,"id":748,"nodeType":"Return","src":"7115:37:6"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"6737:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:6","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:6","nodeType":"VariableDeclaration","scope":750,"src":"7051:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:6"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"7099:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:6"},"scope":1184,"src":"7034:125:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"7416:162:6","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"owner","nameLocation":"7434:5:6","nodeType":"VariableDeclaration","scope":783,"src":"7426:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":764,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":762,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"7442:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7483:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7494:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":771,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7520:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"7503:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":776,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":775,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7539:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7563:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":759,"id":782,"nodeType":"Return","src":"7475:96:6"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"7165:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:6","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"spender","nameLocation":"7353:7:6","nodeType":"VariableDeclaration","scope":784,"src":"7345:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:6","nodeType":"VariableDeclaration","scope":784,"src":"7362:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:6"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"7410:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:6"},"scope":1184,"src":"7317:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"7973:43:6","statements":[{"expression":{"arguments":[{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7993:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":792,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[799,828],"referencedDeclaration":828,"src":"7983:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"7983:26:6"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"7584:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:6","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"7935:2:6","nodeType":"VariableDeclaration","scope":799,"src":"7927:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:6","nodeType":"VariableDeclaration","scope":799,"src":"7939:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:6"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"7973:0:6"},"scope":1184,"src":"7908:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"8351:195:6","statements":[{"expression":{"arguments":[{"id":810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8367:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8361:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"8361:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:6","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8445:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8449:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8458:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":815,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"8410:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"8389:150:6"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"8022:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:6","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"to","nameLocation":"8273:2:6","nodeType":"VariableDeclaration","scope":828,"src":"8265:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:6","nodeType":"VariableDeclaration","scope":828,"src":"8285:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"data","nameLocation":"8323:4:6","nodeType":"VariableDeclaration","scope":828,"src":"8310:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:6"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"8351:0:6"},"scope":1184,"src":"8237:309:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"8929:366:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8947:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:6","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"8939:61:6"},{"expression":{"arguments":[{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:6","subExpression":{"arguments":[{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9019:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"9010:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:6","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9112:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":854,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"9079:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"9079:45:6"},{"expression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":863,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"9135:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":865,"indexExpression":{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9145:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ExpressionStatement","src":"9135:18:6"},{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":869,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9163:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":871,"indexExpression":{"id":870,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9182:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":874,"nodeType":"ExpressionStatement","src":"9163:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:6","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9221:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9225:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":875,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"9200:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"EmitStatement","src":"9195:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:6","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9276:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":884,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"9244:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"9244:44:6"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"8552:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"8891:2:6","nodeType":"VariableDeclaration","scope":894,"src":"8883:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:6","nodeType":"VariableDeclaration","scope":894,"src":"8895:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:6"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"8929:0:6"},"scope":1184,"src":"8868:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"9561:357:6","statements":[{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"owner","nameLocation":"9579:5:6","nodeType":"VariableDeclaration","scope":953,"src":"9571:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"id":904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":902,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"9587:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"9587:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:6"},{"expression":{"arguments":[{"id":908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9642:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:6","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9661:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"9621:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"9621:48:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:6","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"9707:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"9707:29:6"},{"expression":{"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":924,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"9747:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":926,"indexExpression":{"id":925,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9757:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ExpressionStatement","src":"9747:21:6"},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:6","subExpression":{"baseExpression":{"id":930,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9785:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":932,"indexExpression":{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9793:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"9778:23:6"},{"eventCall":{"arguments":[{"id":936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9826:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:6","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9845:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":935,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"9817:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"EmitStatement","src":"9812:41:6"},{"expression":{"arguments":[{"id":945,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9884:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:6","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"9864:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"9864:47:6"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"9301:206:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:6","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:6","nodeType":"VariableDeclaration","scope":954,"src":"9527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"9561:0:6"},"scope":1184,"src":"9512:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"10351:496:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10384:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":965,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"10369:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"10369:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10396:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"10361:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10460:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:6","typeDescriptions":{}}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"10452:65:6"},{"expression":{"arguments":[{"id":985,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10549:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10555:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10559:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":984,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"10528:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"10528:39:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:6","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10650:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":990,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"10629:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"10629:29:6"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":998,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"10669:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1000,"indexExpression":{"id":999,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10679:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1003,"nodeType":"ExpressionStatement","src":"10669:20:6"},{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1004,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"10699:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1006,"indexExpression":{"id":1005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10709:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ExpressionStatement","src":"10699:18:6"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1010,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1012,"indexExpression":{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10735:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10746:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1015,"nodeType":"ExpressionStatement","src":"10727:21:6"},{"eventCall":{"arguments":[{"id":1017,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10773:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10779:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"10764:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"EmitStatement","src":"10759:32:6"},{"expression":{"arguments":[{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10822:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10828:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10832:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1022,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"10802:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"ExpressionStatement","src":"10802:38:6"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"9924:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"10278:4:6","nodeType":"VariableDeclaration","scope":1029,"src":"10270:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"10300:2:6","nodeType":"VariableDeclaration","scope":1029,"src":"10292:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:6","nodeType":"VariableDeclaration","scope":1029,"src":"10312:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:6"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"10351:0:6"},"scope":1184,"src":"10242:605:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1052,"nodeType":"Block","src":"11023:107:6","statements":[{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1037,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"11033:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1039,"indexExpression":{"id":1038,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11049:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1040,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11060:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1042,"nodeType":"ExpressionStatement","src":"11033:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1044,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11086:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":463,"src":"11086:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11111:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11077:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"EmitStatement","src":"11072:51:6"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"10853:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:6","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"to","nameLocation":"10985:2:6","nodeType":"VariableDeclaration","scope":1053,"src":"10977:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:6","nodeType":"VariableDeclaration","scope":1053,"src":"10989:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:6"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"11023:0:6"},"scope":1184,"src":"10959:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"11389:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11407:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1065,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11416:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"11399:55:6"},{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1070,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"11464:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1073,"indexExpression":{"id":1071,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11483:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1074,"indexExpression":{"id":1072,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11490:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1075,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11502:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1077,"nodeType":"ExpressionStatement","src":"11464:46:6"},{"eventCall":{"arguments":[{"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11540:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11547:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11557:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1078,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"11525:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"EmitStatement","src":"11520:46:6"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"11136:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:6","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"owner","nameLocation":"11311:5:6","nodeType":"VariableDeclaration","scope":1085,"src":"11303:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"operator","nameLocation":"11334:8:6","nodeType":"VariableDeclaration","scope":1085,"src":"11326:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"approved","nameLocation":"11357:8:6","nodeType":"VariableDeclaration","scope":1085,"src":"11352:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:6"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"11389:0:6"},"scope":1184,"src":"11266:307:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"11720:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"11746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11738:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"11730:53:6"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"11579:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:6","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:6","nodeType":"VariableDeclaration","scope":1099,"src":"11681:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:6"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"11720:0:6"},"scope":1184,"src":"11657:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1160,"nodeType":"Block","src":"12497:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12511:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1732,"src":"12511:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1158,"nodeType":"Block","src":"13131:36:6","statements":[{"expression":{"hexValue":"74727565","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1112,"id":1157,"nodeType":"Return","src":"13145:11:6"}]},"id":1159,"nodeType":"IfStatement","src":"12507:660:6","trueBody":{"id":1155,"nodeType":"Block","src":"12528:597:6","statements":[{"clauses":[{"block":{"id":1135,"nodeType":"Block","src":"12642:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"12667:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1130,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12677:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1318_$","typeString":"type(contract IERC721Receiver)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"12677:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1112,"id":1134,"nodeType":"Return","src":"12660:58:6"}]},"errorName":"","id":1136,"nodeType":"TryCatchClause","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"retval","nameLocation":"12634:6:6","nodeType":"VariableDeclaration","scope":1136,"src":"12627:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1126,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:6"},"src":"12618:115:6"},{"block":{"id":1152,"nodeType":"Block","src":"12762:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1140,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"12784:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1150,"nodeType":"Block","src":"12911:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:6"},"nodeType":"YulFunctionCall","src":"13030:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:6"},"nodeType":"YulFunctionCall","src":"13047:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:6"},"nodeType":"YulFunctionCall","src":"13023:38:6"},"nodeType":"YulExpressionStatement","src":"13023:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1138,"isOffset":false,"isSlot":false,"src":"13038:6:6","valueSize":1},{"declaration":1138,"isOffset":false,"isSlot":false,"src":"13053:6:6","valueSize":1}],"id":1149,"nodeType":"InlineAssembly","src":"12988:95:6"}]},"id":1151,"nodeType":"IfStatement","src":"12780:321:6","trueBody":{"id":1148,"nodeType":"Block","src":"12804:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1144,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"12826:60:6"}]}}]},"errorName":"","id":1153,"nodeType":"TryCatchClause","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"reason","nameLocation":"12754:6:6","nodeType":"VariableDeclaration","scope":1153,"src":"12741:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:6"},"src":"12734:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1120,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"12583:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12597:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"12603:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1124,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12612:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12562:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12546:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1318_$","typeString":"type(contract IERC721Receiver)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1318","typeString":"contract IERC721Receiver"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"12546:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1154,"nodeType":"TryStatement","src":"12542:573:6"}]}}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"11796:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1161,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:6","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"12391:4:6","nodeType":"VariableDeclaration","scope":1161,"src":"12383:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"12413:2:6","nodeType":"VariableDeclaration","scope":1161,"src":"12405:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:6","nodeType":"VariableDeclaration","scope":1161,"src":"12425:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"data","nameLocation":"12463:4:6","nodeType":"VariableDeclaration","scope":1161,"src":"12450:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:6"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"12491:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:6"},"scope":1184,"src":"12342:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1171,"nodeType":"Block","src":"13849:2:6","statements":[]},"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"13179:545:6","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:6","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"from","nameLocation":"13776:4:6","nodeType":"VariableDeclaration","scope":1172,"src":"13768:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"13798:2:6","nodeType":"VariableDeclaration","scope":1172,"src":"13790:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:6","nodeType":"VariableDeclaration","scope":1172,"src":"13810:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:6"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"13849:0:6"},"scope":1184,"src":"13729:122:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"14342:2:6","statements":[]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"13857:361:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:6","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"from","nameLocation":"14269:4:6","nodeType":"VariableDeclaration","scope":1183,"src":"14261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"to","nameLocation":"14291:2:6","nodeType":"VariableDeclaration","scope":1183,"src":"14283:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:6","nodeType":"VariableDeclaration","scope":1183,"src":"14303:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:6"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"14342:0:6"},"scope":1184,"src":"14223:121:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1185,"src":"628:13718:6","usedErrors":[]}],"src":"107:14240:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300]},"id":1301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":2341,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1189,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"271:7:7"},"id":1190,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1300,"linearizedBaseContracts":[1300,2340],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1199,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":1199,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":1199,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":1199,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1208,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":1208,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":1208,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":1208,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1217,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":1217,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":1217,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":1217,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1225,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":1225,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":1225,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":1300,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1233,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":1233,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":1233,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":1300,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1245,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":1245,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":1245,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":1245,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":1245,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":1300,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":1255,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":1255,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":1255,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":1300,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"2758:504:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"from","nameLocation":"3306:4:7","nodeType":"VariableDeclaration","scope":1265,"src":"3298:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"to","nameLocation":"3328:2:7","nodeType":"VariableDeclaration","scope":1265,"src":"3320:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:7","nodeType":"VariableDeclaration","scope":1265,"src":"3340:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:7"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"3370:0:7"},"scope":1300,"src":"3267:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"3377:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1273,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:7","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"to","nameLocation":"3859:2:7","nodeType":"VariableDeclaration","scope":1273,"src":"3851:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:7","nodeType":"VariableDeclaration","scope":1273,"src":"3863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:7"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"3888:0:7"},"scope":1300,"src":"3834:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"3895:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1281,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:7","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"operator","nameLocation":"4244:8:7","nodeType":"VariableDeclaration","scope":1281,"src":"4236:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:7","nodeType":"VariableDeclaration","scope":1281,"src":"4254:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:7"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"4278:0:7"},"scope":1300,"src":"4209:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"4285:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1289,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:7","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:7","nodeType":"VariableDeclaration","scope":1289,"src":"4450:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:7"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"operator","nameLocation":"4498:8:7","nodeType":"VariableDeclaration","scope":1289,"src":"4490:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:7"},"scope":1300,"src":"4429:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"4514:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1299,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:7","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"owner","nameLocation":"4691:5:7","nodeType":"VariableDeclaration","scope":1299,"src":"4683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"operator","nameLocation":"4706:8:7","nodeType":"VariableDeclaration","scope":1299,"src":"4698:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:7"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1299,"src":"4739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:7"},"scope":1300,"src":"4657:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1301,"src":"250:4497:7","usedErrors":[]}],"src":"108:4640:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1318]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1302,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":1317,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":1317,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":1317,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":1317,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1311,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1314,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":1318,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1319,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[2009],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"ERC721Enumerable":[1656],"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"Strings":[2304]},"id":1657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1657,"sourceUnit":1185,"src":"138:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1657,"sourceUnit":1688,"src":"162:33:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1324,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"435:6:9"},"id":1325,"nodeType":"InheritanceSpecifier","src":"435:6:9"},{"baseName":{"id":1326,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"443:17:9"},"id":1327,"nodeType":"InheritanceSpecifier","src":"443:17:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"197:199:9","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":1656,"linearizedBaseContracts":[1656,1687,1184,1714,1300,2328,2340,2078],"name":"ERC721Enumerable","nameLocation":"415:16:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1333,"mutability":"mutable","name":"_ownedTokens","nameLocation":"576:12:9","nodeType":"VariableDeclaration","scope":1656,"src":"520:68:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1332,"keyType":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"520:47:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":1331,"keyType":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"539:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1337,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"694:17:9","nodeType":"VariableDeclaration","scope":1656,"src":"658:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1336,"keyType":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"658:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1340,"mutability":"mutable","name":"_allTokens","nameLocation":"790:10:9","nodeType":"VariableDeclaration","scope":1656,"src":"772:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ArrayTypeName","src":"772:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1344,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"907:15:9","nodeType":"VariableDeclaration","scope":1656,"src":"871:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1343,"keyType":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[411,2339],"body":{"id":1367,"nodeType":"Block","src":"1098:114:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1115:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1357,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1135:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1687_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1687_$","typeString":"type(contract IERC721Enumerable)"}],"id":1356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1130:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1687","typeString":"type(contract IERC721Enumerable)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1130:35:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1115:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1363,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1193:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1361,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1169:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1656_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":411,"src":"1169:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1169:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1115:90:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1354,"id":1366,"nodeType":"Return","src":"1108:97:9"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"929:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"999:17:9","nodeType":"FunctionDefinition","overrides":{"id":1351,"nodeType":"OverrideSpecifier","overrides":[{"id":1349,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"1066:7:9"},{"id":1350,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"1075:6:9"}],"src":"1057:25:9"},"parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"interfaceId","nameLocation":"1024:11:9","nodeType":"VariableDeclaration","scope":1368,"src":"1017:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1017:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1016:20:9"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"1092:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"1092:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1091:6:9"},"scope":1656,"src":"990:222:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1395,"nodeType":"Block","src":"1397:147:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":1383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1440:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1381,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"1423:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"1423:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1423:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1415:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":1379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1388,"nodeType":"ExpressionStatement","src":"1407:87:9"},{"expression":{"baseExpression":{"baseExpression":{"id":1389,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"1511:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1391,"indexExpression":{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1524:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1393,"indexExpression":{"id":1392,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1531:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1394,"nodeType":"Return","src":"1504:33:9"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"1218:68:9","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1300:19:9","nodeType":"FunctionDefinition","overrides":{"id":1375,"nodeType":"OverrideSpecifier","overrides":[],"src":"1370:8:9"},"parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"owner","nameLocation":"1328:5:9","nodeType":"VariableDeclaration","scope":1396,"src":"1320:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"index","nameLocation":"1343:5:9","nodeType":"VariableDeclaration","scope":1396,"src":"1335:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:30:9"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1388:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:9:9"},"scope":1656,"src":"1291:253:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1668],"body":{"id":1406,"nodeType":"Block","src":"1685:41:9","statements":[{"expression":{"expression":{"id":1403,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1702:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1402,"id":1405,"nodeType":"Return","src":"1695:24:9"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1550:60:9","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1624:11:9","nodeType":"FunctionDefinition","overrides":{"id":1399,"nodeType":"OverrideSpecifier","overrides":[],"src":"1658:8:9"},"parameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"1635:2:9"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"1676:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1675:9:9"},"scope":1656,"src":"1615:111:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1429,"nodeType":"Block","src":"1882:146:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1900:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1418,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"1908:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$1656_$","typeString":"type(contract ERC721Enumerable)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1908:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1908:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1900:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1892:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"1892:95:9"},{"expression":{"baseExpression":{"id":1425,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2004:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1427,"indexExpression":{"id":1426,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2015:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2004:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1415,"id":1428,"nodeType":"Return","src":"1997:24:9"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"1732:61:9","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1807:12:9","nodeType":"FunctionDefinition","overrides":{"id":1412,"nodeType":"OverrideSpecifier","overrides":[],"src":"1855:8:9"},"parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"index","nameLocation":"1828:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"1820:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1819:15:9"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1430,"src":"1873:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1872:9:9"},"scope":1656,"src":"1798:230:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1172],"body":{"id":1493,"nodeType":"Block","src":"2753:443:9","statements":[{"expression":{"arguments":[{"id":1444,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2790:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2796:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2800:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1441,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2763:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1656_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"2763:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2763:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"2763:45:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2823:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:9","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2823:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2918:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2926:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2918:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1469,"nodeType":"IfStatement","src":"2914:88:9","trueBody":{"id":1468,"nodeType":"Block","src":"2930:72:9","statements":[{"expression":{"arguments":[{"id":1464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2977:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2944:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2944:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"2944:47:9"}]}},"id":1470,"nodeType":"IfStatement","src":"2819:183:9","trueBody":{"id":1459,"nodeType":"Block","src":"2843:65:9","statements":[{"expression":{"arguments":[{"id":1456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2889:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1455,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2857:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"2857:40:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3015:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3021:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:9","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3021:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3015:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3113:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1483,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3119:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3113:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"3109:81:9","trueBody":{"id":1490,"nodeType":"Block","src":"3125:65:9","statements":[{"expression":{"arguments":[{"id":1486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3167:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1485,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"3139:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"3139:40:9"}]}},"id":1492,"nodeType":"IfStatement","src":"3011:179:9","trueBody":{"id":1481,"nodeType":"Block","src":"3033:70:9","statements":[{"expression":{"arguments":[{"id":1478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3084:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1477,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3047:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3047:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"3047:45:9"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"2034:585:9","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2633:20:9","nodeType":"FunctionDefinition","overrides":{"id":1439,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:9"},"parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"from","nameLocation":"2671:4:9","nodeType":"VariableDeclaration","scope":1494,"src":"2663:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"to","nameLocation":"2693:2:9","nodeType":"VariableDeclaration","scope":1494,"src":"2685:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"tokenId","nameLocation":"2713:7:9","nodeType":"VariableDeclaration","scope":1494,"src":"2705:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2653:73:9"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"2753:0:9"},"scope":1656,"src":"2624:572:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"3564:143:9","statements":[{"assignments":[1503],"declarations":[{"constant":false,"id":1503,"mutability":"mutable","name":"length","nameLocation":"3582:6:9","nodeType":"VariableDeclaration","scope":1523,"src":"3574:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"arguments":[{"id":1506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3608:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1504,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3591:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"3591:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3591:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3574:37:9"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1509,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"3621:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1512,"indexExpression":{"id":1510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3634:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1513,"indexExpression":{"id":1511,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3638:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3621:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"3621:34:9"},{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1517,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3665:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1519,"indexExpression":{"id":1518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3665:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1520,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3694:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"3665:35:9"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"3202:283:9","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3499:27:9","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"to","nameLocation":"3535:2:9","nodeType":"VariableDeclaration","scope":1524,"src":"3527:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"tokenId","nameLocation":"3547:7:9","nodeType":"VariableDeclaration","scope":1524,"src":"3539:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3526:29:9"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"3564:0:9"},"scope":1656,"src":"3490:217:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1543,"nodeType":"Block","src":"3968:95:9","statements":[{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1530,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"3978:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1532,"indexExpression":{"id":1531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3994:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3978:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1533,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4005:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4005:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3978:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"3978:44:9"},{"expression":{"arguments":[{"id":1540,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4048:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1537,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4032:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4032:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4032:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"4032:24:9"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"3713:184:9","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3911:31:9","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"tokenId","nameLocation":"3951:7:9","nodeType":"VariableDeclaration","scope":1544,"src":"3943:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3943:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3942:17:9"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3968:0:9"},"scope":1656,"src":"3902:161:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1606,"nodeType":"Block","src":"4761:889:9","statements":[{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4950:14:9","nodeType":"VariableDeclaration","scope":1606,"src":"4942:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4984:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1554,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4967:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1184_$","typeString":"type(contract ERC721)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":435,"src":"4967:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4967:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4967:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4942:51:9"},{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"tokenIndex","nameLocation":"5011:10:9","nodeType":"VariableDeclaration","scope":1606,"src":"5003:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1566,"initialValue":{"baseExpression":{"id":1563,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5024:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1565,"indexExpression":{"id":1564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5042:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5003:47:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5154:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1568,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5168:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1593,"nodeType":"IfStatement","src":"5150:323:9","trueBody":{"id":1592,"nodeType":"Block","src":"5184:289:9","statements":[{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"lastTokenId","nameLocation":"5206:11:9","nodeType":"VariableDeclaration","scope":1592,"src":"5198:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1577,"initialValue":{"baseExpression":{"baseExpression":{"id":1572,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5220:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1574,"indexExpression":{"id":1573,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5233:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1576,"indexExpression":{"id":1575,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5239:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5198:56:9"},{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1578,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5269:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1581,"indexExpression":{"id":1579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5282:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5269:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1582,"indexExpression":{"id":1580,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5288:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5269:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1583,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5302:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5269:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ExpressionStatement","src":"5269:44:9"},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1586,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5385:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1588,"indexExpression":{"id":1587,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5403:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5385:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5418:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5385:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"5385:43:9"}]}},{"expression":{"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5559:33:9","subExpression":{"baseExpression":{"id":1594,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5566:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1596,"indexExpression":{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5566:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"5559:33:9"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5602:41:9","subExpression":{"baseExpression":{"baseExpression":{"id":1599,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"5609:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1601,"indexExpression":{"id":1600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5622:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5609:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1603,"indexExpression":{"id":1602,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5628:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5609:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"ExpressionStatement","src":"5602:41:9"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"4069:606:9","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4689:32:9","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"from","nameLocation":"4730:4:9","nodeType":"VariableDeclaration","scope":1607,"src":"4722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"tokenId","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1607,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4721:31:9"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"4761:0:9"},"scope":1656,"src":"4680:970:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1654,"nodeType":"Block","src":"6009:990:9","statements":[{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6195:14:9","nodeType":"VariableDeclaration","scope":1654,"src":"6187:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1615,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6212:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6212:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6232:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6212:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6187:46:9"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"tokenIndex","nameLocation":"6251:10:9","nodeType":"VariableDeclaration","scope":1654,"src":"6243:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1625,"initialValue":{"baseExpression":{"id":1622,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6264:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1624,"indexExpression":{"id":1623,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6243:45:9"},{"assignments":[1627],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"lastTokenId","nameLocation":"6618:11:9","nodeType":"VariableDeclaration","scope":1654,"src":"6610:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"6610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"baseExpression":{"id":1628,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6632:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1630,"indexExpression":{"id":1629,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"6643:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6610:48:9"},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1632,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6669:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1634,"indexExpression":{"id":1633,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6680:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6669:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1635,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"6694:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6669:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ExpressionStatement","src":"6669:36:9"},{"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1638,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6773:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1640,"indexExpression":{"id":1639,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"6789:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6773:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1641,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6804:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6773:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ExpressionStatement","src":"6773:41:9"},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6935:31:9","subExpression":{"baseExpression":{"id":1644,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6942:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1646,"indexExpression":{"id":1645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6958:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6942:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"ExpressionStatement","src":"6935:31:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1649,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6976:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6976:14:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6976:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"6976:16:9"}]},"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"5656:277:9","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5947:36:9","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"tokenId","nameLocation":"5992:7:9","nodeType":"VariableDeclaration","scope":1655,"src":"5984:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:17:9"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"6009:0:9"},"scope":1656,"src":"5938:1061:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1657,"src":"397:6604:9","usedErrors":[]}],"src":"113:6889:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687]},"id":1688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1658,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":1301,"src":"154:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1661,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"348:7:10"},"id":1662,"nodeType":"InheritanceSpecifier","src":"348:7:10"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"180:136:10","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1687,"linearizedBaseContracts":[1687,1300,2340],"name":"IERC721Enumerable","nameLocation":"327:17:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"362:82:10","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1668,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:10","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"469:2:10"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"495:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:10"},"scope":1687,"src":"449:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"510:171:10","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:10","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"owner","nameLocation":"723:5:10","nodeType":"VariableDeclaration","scope":1678,"src":"715:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"index","nameLocation":"738:5:10","nodeType":"VariableDeclaration","scope":1678,"src":"730:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:10"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"768:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:10"},"scope":1687,"src":"686:91:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"783:164:10","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:10","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"index","nameLocation":"982:5:10","nodeType":"VariableDeclaration","scope":1686,"src":"974:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:10"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"1012:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:10"},"scope":1687,"src":"952:69:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1688,"src":"317:706:10","usedErrors":[]}],"src":"129:895:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2340],"IERC721":[1300],"IERC721Metadata":[1714]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1689,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1715,"sourceUnit":1301,"src":"137:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1692,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"326:7:11"},"id":1693,"nodeType":"InheritanceSpecifier","src":"326:7:11"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"163:133:11","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1714,"linearizedBaseContracts":[1714,1300,2340],"name":"IERC721Metadata","nameLocation":"307:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"340:58:11","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1699,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:11","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[],"src":"416:2:11"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"442:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1696,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:11"},"scope":1714,"src":"403:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"463:60:11","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1705,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:11","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"543:2:11"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"569:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1702,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:11"},"scope":1714,"src":"528:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"590:90:11","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1713,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:11","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:11","nodeType":"VariableDeclaration","scope":1713,"src":"703:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:11"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"743:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:11"},"scope":1714,"src":"685:73:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1715,"src":"297:463:11","usedErrors":[]}],"src":"112:649:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2009]},"id":2010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"126:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2009,"linearizedBaseContracts":[2009],"name":"Address","nameLocation":"202:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1731,"nodeType":"Block","src":"1241:254:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1725,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1465:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1724,"id":1730,"nodeType":"Return","src":"1458:30:12"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"216:954:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:12","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"account","nameLocation":"1203:7:12","nodeType":"VariableDeclaration","scope":1732,"src":"1195:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:12"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"1235:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:12"},"scope":2009,"src":"1175:320:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"2483:241:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1743,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}],"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:12","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2526:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"ExpressionStatement","src":"2493:73:12"},{"assignments":[1752,null],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"success","nameLocation":"2583:7:12","nodeType":"VariableDeclaration","scope":1765,"src":"2578:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1759,"initialValue":{"arguments":[{"hexValue":"","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1753,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2596:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2618:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:12"},{"expression":{"arguments":[{"id":1761,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2647:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"2639:78:12"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"1501:906:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:12","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:12","nodeType":"VariableDeclaration","scope":1766,"src":"2431:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"amount","nameLocation":"2466:6:12","nodeType":"VariableDeclaration","scope":1766,"src":"2458:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:12"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"2483:0:12"},"scope":2009,"src":"2412:312:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"3555:84:12","statements":[{"expression":{"arguments":[{"id":1777,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3585:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3593:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1776,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1783,1803],"referencedDeclaration":1803,"src":"3572:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"3565:67:12"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"2730:731:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:12","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"target","nameLocation":"3496:6:12","nodeType":"VariableDeclaration","scope":1783,"src":"3488:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"data","nameLocation":"3517:4:12","nodeType":"VariableDeclaration","scope":1783,"src":"3504:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:12"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1783,"src":"3541:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:12"},"scope":2009,"src":"3466:173:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1802,"nodeType":"Block","src":"4008:76:12","statements":[{"expression":{"arguments":[{"id":1796,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4047:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4055:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1799,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4064:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1795,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1823,1873],"referencedDeclaration":1873,"src":"4025:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1794,"id":1801,"nodeType":"Return","src":"4018:59:12"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"3645:211:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:12","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"target","nameLocation":"3900:6:12","nodeType":"VariableDeclaration","scope":1803,"src":"3892:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"data","nameLocation":"3929:4:12","nodeType":"VariableDeclaration","scope":1803,"src":"3916:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:12","nodeType":"VariableDeclaration","scope":1803,"src":"3943:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1789,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:12"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"3994:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:12"},"scope":2009,"src":"3861:223:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"4589:111:12","statements":[{"expression":{"arguments":[{"id":1816,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4628:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"4636:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4642:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1815,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1823,1873],"referencedDeclaration":1873,"src":"4606:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1814,"id":1821,"nodeType":"Return","src":"4599:94:12"}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"4090:351:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:12","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"target","nameLocation":"4494:6:12","nodeType":"VariableDeclaration","scope":1823,"src":"4486:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"data","nameLocation":"4523:4:12","nodeType":"VariableDeclaration","scope":1823,"src":"4510:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"value","nameLocation":"4545:5:12","nodeType":"VariableDeclaration","scope":1823,"src":"4537:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:12"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"4575:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1812,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:12"},"scope":2009,"src":"4446:254:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"5127:320:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1840,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2009","typeString":"library Address"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:12","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"ExpressionStatement","src":"5137:81:12"},{"expression":{"arguments":[{"arguments":[{"id":1850,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5247:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1849,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"5236:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"5228:60:12"},{"assignments":[1856,1858],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"success","nameLocation":"5305:7:12","nodeType":"VariableDeclaration","scope":1872,"src":"5300:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:12","nodeType":"VariableDeclaration","scope":1872,"src":"5314:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1865,"initialValue":{"arguments":[{"id":1863,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"5367:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1859,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5341:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:12"},{"expression":{"arguments":[{"id":1867,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5406:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1868,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5415:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1869,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5427:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1866,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1836,"id":1871,"nodeType":"Return","src":"5382:58:12"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"4706:237:12","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:12","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"target","nameLocation":"4996:6:12","nodeType":"VariableDeclaration","scope":1873,"src":"4988:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"data","nameLocation":"5025:4:12","nodeType":"VariableDeclaration","scope":1873,"src":"5012:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"5047:5:12","nodeType":"VariableDeclaration","scope":1873,"src":"5039:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:12","nodeType":"VariableDeclaration","scope":1873,"src":"5062:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:12"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"5113:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:12"},"scope":2009,"src":"4948:499:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"5724:97:12","statements":[{"expression":{"arguments":[{"id":1884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5760:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5768:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1883,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1890,1925],"referencedDeclaration":1925,"src":"5741:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1882,"id":1888,"nodeType":"Return","src":"5734:80:12"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"5453:166:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:12","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"target","nameLocation":"5660:6:12","nodeType":"VariableDeclaration","scope":1890,"src":"5652:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"data","nameLocation":"5681:4:12","nodeType":"VariableDeclaration","scope":1890,"src":"5668:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:12"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"5710:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:12"},"scope":2009,"src":"5624:197:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"6163:228:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6192:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1903,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6181:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"6173:67:12"},{"assignments":[1910,1912],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"success","nameLocation":"6257:7:12","nodeType":"VariableDeclaration","scope":1924,"src":"6252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1909,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:12","nodeType":"VariableDeclaration","scope":1924,"src":"6266:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[{"id":1915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6311:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1913,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6293:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:12"},{"expression":{"arguments":[{"id":1919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"6350:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1920,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6359:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1921,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6371:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1918,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6333:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1901,"id":1923,"nodeType":"Return","src":"6326:58:12"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"5827:173:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:12","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"target","nameLocation":"6050:6:12","nodeType":"VariableDeclaration","scope":1925,"src":"6042:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"data","nameLocation":"6079:4:12","nodeType":"VariableDeclaration","scope":1925,"src":"6066:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:12","nodeType":"VariableDeclaration","scope":1925,"src":"6093:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1896,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:12"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"6149:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:12"},"scope":2009,"src":"6005:386:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"6667:101:12","statements":[{"expression":{"arguments":[{"id":1936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6705:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6713:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1935,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1942,1977],"referencedDeclaration":1977,"src":"6684:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1934,"id":1940,"nodeType":"Return","src":"6677:84:12"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"6397:168:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:12","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"target","nameLocation":"6608:6:12","nodeType":"VariableDeclaration","scope":1942,"src":"6600:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"data","nameLocation":"6629:4:12","nodeType":"VariableDeclaration","scope":1942,"src":"6616:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:12"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"6653:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1932,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:12"},"scope":2009,"src":"6570:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"7109:232:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1955,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"7127:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"7119:69:12"},{"assignments":[1962,1964],"declarations":[{"constant":false,"id":1962,"mutability":"mutable","name":"success","nameLocation":"7205:7:12","nodeType":"VariableDeclaration","scope":1976,"src":"7200:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1961,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:12","nodeType":"VariableDeclaration","scope":1976,"src":"7214:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1963,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1969,"initialValue":{"arguments":[{"id":1967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7261:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1965,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7241:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:12"},{"expression":{"arguments":[{"id":1971,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7300:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1972,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7309:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1973,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7321:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1970,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"7283:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1953,"id":1975,"nodeType":"Return","src":"7276:58:12"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"6774:175:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:12","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"target","nameLocation":"7001:6:12","nodeType":"VariableDeclaration","scope":1977,"src":"6993:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"data","nameLocation":"7030:4:12","nodeType":"VariableDeclaration","scope":1977,"src":"7017:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:12","nodeType":"VariableDeclaration","scope":1977,"src":"7044:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1948,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:12"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"7095:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1951,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:12"},"scope":2009,"src":"6954:387:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"7721:582:12","statements":[{"condition":{"id":1989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"7735:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2005,"nodeType":"Block","src":"7792:505:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1993,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7876:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2003,"nodeType":"Block","src":"8234:53:12","statements":[{"expression":{"arguments":[{"id":2000,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8259:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1999,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"8252:20:12"}]},"id":2004,"nodeType":"IfStatement","src":"7872:415:12","trueBody":{"id":1998,"nodeType":"Block","src":"7899:329:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:12","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:12"},"nodeType":"YulFunctionCall","src":"8114:17:12"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:12","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:12"},"nodeType":"YulFunctionCall","src":"8159:19:12"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:12"},"nodeType":"YulFunctionCall","src":"8152:44:12"},"nodeType":"YulExpressionStatement","src":"8152:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1982,"isOffset":false,"isSlot":false,"src":"8120:10:12","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"8167:10:12","valueSize":1}],"id":1997,"nodeType":"InlineAssembly","src":"8060:154:12"}]}}]},"id":2006,"nodeType":"IfStatement","src":"7731:566:12","trueBody":{"id":1992,"nodeType":"Block","src":"7744:42:12","statements":[{"expression":{"id":1990,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7765:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1988,"id":1991,"nodeType":"Return","src":"7758:17:12"}]}}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"7347:209:12","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:12","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"success","nameLocation":"7601:7:12","nodeType":"VariableDeclaration","scope":2008,"src":"7596:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:12","nodeType":"VariableDeclaration","scope":2008,"src":"7618:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:12","nodeType":"VariableDeclaration","scope":2008,"src":"7651:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:12"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"7707:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1986,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:12"},"scope":2009,"src":"7561:742:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2010,"src":"194:8111:12","usedErrors":[]}],"src":"101:8205:12"},"id":12},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[2056]},"id":2057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2011,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"125:105:13","text":" @dev Provides a set of functions to operate with Base64 strings.\n _Available since v4.5._"},"fullyImplemented":true,"id":2056,"linearizedBaseContracts":[2056],"name":"Base64","nameLocation":"239:6:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"252:54:13","text":" @dev Base64 Encoding/Decoding Table"},"id":2016,"mutability":"constant","name":"_TABLE","nameLocation":"336:6:13","nodeType":"VariableDeclaration","scope":2056,"src":"311:100:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2014,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:66:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"578:2953:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2024,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"795:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"795:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"795:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":2030,"nodeType":"IfStatement","src":"791:31:13","trueBody":{"expression":{"hexValue":"","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2023,"id":2029,"nodeType":"Return","src":"813:9:13"}},{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"table","nameLocation":"886:5:13","nodeType":"VariableDeclaration","scope":2054,"src":"872:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2031,"name":"string","nodeType":"ElementaryTypeName","src":"872:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2034,"initialValue":{"id":2033,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"894:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"872:28:13"},{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"result","nameLocation":"1317:6:13","nodeType":"VariableDeclaration","scope":2054,"src":"1303:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"1303:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2050,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2040,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"1343:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1343:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1343:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1342:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1342:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1341:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1337:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1326:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1326:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1303:62:13"},{"AST":{"nodeType":"YulBlock","src":"1428:2073:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:29:13","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1533:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1529:3:13"},"nodeType":"YulFunctionCall","src":"1529:13:13"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1517:8:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1612:32:13","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1633:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1641:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1629:3:13"},"nodeType":"YulFunctionCall","src":"1629:15:13"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1616:9:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1857:1257:13","statements":[{"nodeType":"YulAssignment","src":"1910:26:13","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1925:7:13"},{"kind":"number","nodeType":"YulLiteral","src":"1934:1:13","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:13"},"nodeType":"YulFunctionCall","src":"1921:15:13"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1910:7:13"}]},{"nodeType":"YulVariableDeclaration","src":"1953:27:13","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1972:7:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1966:5:13"},"nodeType":"YulFunctionCall","src":"1966:14:13"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1957:5:13","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2564:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2585:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:2:13","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2607:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2599:3:13"},"nodeType":"YulFunctionCall","src":"2599:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2615:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2595:3:13"},"nodeType":"YulFunctionCall","src":"2595:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2581:3:13"},"nodeType":"YulFunctionCall","src":"2581:40:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2575:5:13"},"nodeType":"YulFunctionCall","src":"2575:47:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2556:7:13"},"nodeType":"YulFunctionCall","src":"2556:67:13"},"nodeType":"YulExpressionStatement","src":"2556:67:13"},{"nodeType":"YulAssignment","src":"2640:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2657:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2653:3:13"},"nodeType":"YulFunctionCall","src":"2653:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2640:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2707:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2728:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2746:2:13","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2750:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2742:3:13"},"nodeType":"YulFunctionCall","src":"2742:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2758:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2738:3:13"},"nodeType":"YulFunctionCall","src":"2738:25:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:13"},"nodeType":"YulFunctionCall","src":"2724:40:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2718:5:13"},"nodeType":"YulFunctionCall","src":"2718:47:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2699:7:13"},"nodeType":"YulFunctionCall","src":"2699:67:13"},"nodeType":"YulExpressionStatement","src":"2699:67:13"},{"nodeType":"YulAssignment","src":"2783:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2800:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2811:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2796:3:13"},"nodeType":"YulFunctionCall","src":"2796:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2783:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2850:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2871:8:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2889:1:13","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2892:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2885:3:13"},"nodeType":"YulFunctionCall","src":"2885:13:13"},{"kind":"number","nodeType":"YulLiteral","src":"2900:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2881:3:13"},"nodeType":"YulFunctionCall","src":"2881:24:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:13"},"nodeType":"YulFunctionCall","src":"2867:39:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2861:5:13"},"nodeType":"YulFunctionCall","src":"2861:46:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2842:7:13"},"nodeType":"YulFunctionCall","src":"2842:66:13"},"nodeType":"YulExpressionStatement","src":"2842:66:13"},{"nodeType":"YulAssignment","src":"2925:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2942:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:13"},"nodeType":"YulFunctionCall","src":"2938:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2925:9:13"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2992:9:13"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3013:8:13"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"3027:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3034:4:13","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3023:3:13"},"nodeType":"YulFunctionCall","src":"3023:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3009:3:13"},"nodeType":"YulFunctionCall","src":"3009:31:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3003:5:13"},"nodeType":"YulFunctionCall","src":"3003:38:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2984:7:13"},"nodeType":"YulFunctionCall","src":"2984:58:13"},"nodeType":"YulExpressionStatement","src":"2984:58:13"},{"nodeType":"YulAssignment","src":"3059:30:13","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3076:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3087:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3072:3:13"},"nodeType":"YulFunctionCall","src":"3072:17:13"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3059:9:13"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1823:7:13"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1832:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1820:2:13"},"nodeType":"YulFunctionCall","src":"1820:19:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1840:16:13","statements":[]},"pre":{"nodeType":"YulBlock","src":"1715:104:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1733:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"1748:4:13"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1737:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1769:36:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1787:4:13"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1799:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1793:5:13"},"nodeType":"YulFunctionCall","src":"1793:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:13"},"nodeType":"YulFunctionCall","src":"1783:22:13"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1773:6:13","type":""}]}]},"src":"1711:1403:13"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3294:113:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3324:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3335:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3320:3:13"},"nodeType":"YulFunctionCall","src":"3320:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3339:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3312:7:13"},"nodeType":"YulFunctionCall","src":"3312:32:13"},"nodeType":"YulExpressionStatement","src":"3312:32:13"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3373:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:13","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3369:3:13"},"nodeType":"YulFunctionCall","src":"3369:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3388:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3361:7:13"},"nodeType":"YulFunctionCall","src":"3361:32:13"},"nodeType":"YulExpressionStatement","src":"3361:32:13"}]},"nodeType":"YulCase","src":"3287:120:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3292:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3427:64:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3457:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3453:3:13"},"nodeType":"YulFunctionCall","src":"3453:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:13","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3445:7:13"},"nodeType":"YulFunctionCall","src":"3445:32:13"},"nodeType":"YulExpressionStatement","src":"3445:32:13"}]},"nodeType":"YulCase","src":"3420:71:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3425:1:13","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3265:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3259:5:13"},"nodeType":"YulFunctionCall","src":"3259:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"3272:1:13","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3255:3:13"},"nodeType":"YulFunctionCall","src":"3255:19:13"},"nodeType":"YulSwitch","src":"3248:243:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1748:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1787:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"1799:4:13","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"3265:4:13","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"1633:6:13","valueSize":1},{"declaration":2032,"isOffset":false,"isSlot":false,"src":"1533:5:13","valueSize":1}],"id":2051,"nodeType":"InlineAssembly","src":"1419:2082:13"},{"expression":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3518:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2023,"id":2053,"nodeType":"Return","src":"3511:13:13"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"418:82:13","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"514:6:13","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"data","nameLocation":"534:4:13","nodeType":"VariableDeclaration","scope":2055,"src":"521:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"521:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:19:13"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"563:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2021,"name":"string","nodeType":"ElementaryTypeName","src":"563:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"562:15:13"},"scope":2056,"src":"505:3026:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2057,"src":"231:3302:13","usedErrors":[]}],"src":"100:3434:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2078]},"id":2079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2058,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2078,"linearizedBaseContracts":[2078],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2067,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2063,"id":2066,"nodeType":"Return","src":"712:17:14"}]},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2078,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2076,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2072,"id":2075,"nodeType":"Return","src":"819:15:14"}]},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2077,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2078,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2079,"src":"608:235:14","usedErrors":[]}],"src":"86:758:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2304]},"id":2305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"126:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2304,"linearizedBaseContracts":[2304],"name":"Strings","nameLocation":"169:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2084,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:15","nodeType":"VariableDeclaration","scope":2304,"src":"183:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2082,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2087,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:15","nodeType":"VariableDeclaration","scope":2304,"src":"247:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2085,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2165,"nodeType":"Block","src":"463:632:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"665:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"661:51:15","trueBody":{"id":2100,"nodeType":"Block","src":"677:35:15","statements":[{"expression":{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2094,"id":2099,"nodeType":"Return","src":"691:10:15"}]}},{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"temp","nameLocation":"729:4:15","nodeType":"VariableDeclaration","scope":2165,"src":"721:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2105,"initialValue":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"736:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:15"},{"assignments":[2107],"declarations":[{"constant":false,"id":2107,"mutability":"mutable","name":"digits","nameLocation":"759:6:15","nodeType":"VariableDeclaration","scope":2165,"src":"751:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2108,"nodeType":"VariableDeclarationStatement","src":"751:14:15"},{"body":{"id":2119,"nodeType":"Block","src":"793:57:15","statements":[{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:15","subExpression":{"id":2112,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"807:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"807:8:15"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"829:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"829:10:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"782:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"WhileStatement","src":"775:75:15"},{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"buffer","nameLocation":"872:6:15","nodeType":"VariableDeclaration","scope":2165,"src":"859:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2127,"initialValue":{"arguments":[{"id":2125,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"891:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:15"},{"body":{"id":2158,"nodeType":"Block","src":"927:131:15","statements":[{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"941:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"941:11:15"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2135,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"966:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2137,"indexExpression":{"id":2136,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"973:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1009:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:15","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2140,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:15","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2138,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:15","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2153,"nodeType":"ExpressionStatement","src":"966:56:15"},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1036:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"1036:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"915:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2159,"nodeType":"WhileStatement","src":"908:150:15"},{"expression":{"arguments":[{"id":2162,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"1081:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:15","typeDescriptions":{}}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2094,"id":2164,"nodeType":"Return","src":"1067:21:15"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"297:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:15","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"418:5:15","nodeType":"VariableDeclaration","scope":2166,"src":"410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:15"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"448:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:15"},"scope":2304,"src":"392:703:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"1274:255:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1288:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"nodeType":"IfStatement","src":"1284:54:15","trueBody":{"id":2179,"nodeType":"Block","src":"1300:38:15","statements":[{"expression":{"hexValue":"30783030","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2173,"id":2178,"nodeType":"Return","src":"1314:13:15"}]}},{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"temp","nameLocation":"1355:4:15","nodeType":"VariableDeclaration","scope":2206,"src":"1347:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"id":2183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:15"},{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"length","nameLocation":"1385:6:15","nodeType":"VariableDeclaration","scope":2206,"src":"1377:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2188,"initialValue":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:15"},{"body":{"id":2199,"nodeType":"Block","src":"1423:57:15","statements":[{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:15","subExpression":{"id":2192,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1437:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"1437:8:15"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"1459:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"1459:10:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"1412:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"WhileStatement","src":"1405:75:15"},{"expression":{"arguments":[{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1508:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2203,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1515:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2201,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2207,2283,2303],"referencedDeclaration":2283,"src":"1496:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2173,"id":2205,"nodeType":"Return","src":"1489:33:15"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"1101:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:15","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"1229:5:15","nodeType":"VariableDeclaration","scope":2207,"src":"1221:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:15"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"1259:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2171,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:15"},"scope":2304,"src":"1200:329:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2282,"nodeType":"Block","src":"1742:351:15","statements":[{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:15","nodeType":"VariableDeclaration","scope":2282,"src":"1752:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2217,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2222,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1788:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2219,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:15"},{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2228,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1809:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2230,"indexExpression":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2233,"nodeType":"ExpressionStatement","src":"1809:15:15"},{"expression":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2234,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1834:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2236,"indexExpression":{"hexValue":"31","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2239,"nodeType":"ExpressionStatement","src":"1834:15:15"},{"body":{"id":2268,"nodeType":"Block","src":"1904:87:15","statements":[{"expression":{"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2254,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1918:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2256,"indexExpression":{"id":2255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1925:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2257,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"1930:12:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2261,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1943:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2263,"nodeType":"ExpressionStatement","src":"1918:37:15"},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ExpressionStatement","src":"1969:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1892:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"initializationExpression":{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"i","nameLocation":"1872:1:15","nodeType":"VariableDeclaration","scope":2269,"src":"1864:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2247,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2243,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:15"},"loopExpression":{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:15","subExpression":{"id":2251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1901:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"1899:3:15"},"nodeType":"ForStatement","src":"1859:132:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"2008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"2000:55:15"},{"expression":{"arguments":[{"id":2279,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2079:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:15","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2216,"id":2281,"nodeType":"Return","src":"2065:21:15"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"1535:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:15","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"value","nameLocation":"1681:5:15","nodeType":"VariableDeclaration","scope":2283,"src":"1673:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"length","nameLocation":"1696:6:15","nodeType":"VariableDeclaration","scope":2283,"src":"1688:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:15"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"1727:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2214,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:15"},"scope":2304,"src":"1652:441:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"2318:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2296,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2363:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2294,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:15","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:15","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2299,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2371:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2291,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2207,2283,2303],"referencedDeclaration":2283,"src":"2335:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2290,"id":2301,"nodeType":"Return","src":"2328:59:15"}]},"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"2099:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:15","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"addr","nameLocation":"2274:4:15","nodeType":"VariableDeclaration","scope":2303,"src":"2266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:15"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"2303:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2288,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:15"},"scope":2304,"src":"2245:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2305,"src":"161:2235:15","usedErrors":[]}],"src":"101:2296:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2328],"IERC165":[2340]},"id":2329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2306,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2329,"sourceUnit":2341,"src":"124:23:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2309,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"754:7:16"},"id":2310,"nodeType":"InheritanceSpecifier","src":"754:7:16"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"149:576:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2328,"linearizedBaseContracts":[2328,2340],"name":"ERC165","nameLocation":"744:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2339],"body":{"id":2326,"nodeType":"Block","src":"920:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"937:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2321,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2340_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2340_$","typeString":"type(contract IERC165)"}],"id":2320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2340","typeString":"type(contract IERC165)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2318,"id":2325,"nodeType":"Return","src":"930:47:16"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"768:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:16","nodeType":"FunctionDefinition","overrides":{"id":2315,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:16"},"parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:16","nodeType":"VariableDeclaration","scope":2327,"src":"856:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2312,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:16"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"914:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2316,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:16"},"scope":2328,"src":"829:155:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2329,"src":"726:260:16","usedErrors":[]}],"src":"99:888:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2330,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"125:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2340,"linearizedBaseContracts":[2340],"name":"IERC165","nameLocation":"415:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"429:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2339,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:17","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:17","nodeType":"VariableDeclaration","scope":2339,"src":"801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:17"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"844:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2336,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:17"},"scope":2340,"src":"774:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2341,"src":"405:447:17","usedErrors":[]}],"src":"100:753:17"},"id":17},"contracts/INFTCollection.sol":{"ast":{"absolutePath":"contracts/INFTCollection.sol","exportedSymbols":{"INFTCollection":[2401]},"id":2402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"32:22:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2401,"linearizedBaseContracts":[2401],"name":"INFTCollection","nameLocation":"66:14:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a0712d68","id":2347,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"96:4:18","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"_amount","nameLocation":"109:7:18","nodeType":"VariableDeclaration","scope":2347,"src":"101:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:17:18"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[],"src":"134:0:18"},"scope":2401,"src":"87:48:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9038e693","id":2350,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"150:16:18","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"166:2:18"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"177:0:18"},"scope":2401,"src":"141:37:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbd78e93","id":2355,"implemented":false,"kind":"function","modifiers":[],"name":"revealedCount","nameLocation":"193:13:18","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"206:2:18"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2355,"src":"231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"230:9:18"},"scope":2401,"src":"184:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b4fab5a","id":2360,"implemented":false,"kind":"function","modifiers":[],"name":"lastRevealed","nameLocation":"255:12:18","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"267:2:18"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"292:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:9:18"},"scope":2401,"src":"246:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f4daaba1","id":2365,"implemented":false,"kind":"function","modifiers":[],"name":"batchSize","nameLocation":"316:9:18","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"325:2:18"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"350:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:9:18"},"scope":2401,"src":"307:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"247cd8ad","id":2370,"implemented":false,"kind":"function","modifiers":[],"name":"revealInterval","nameLocation":"374:14:18","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"388:2:18"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"412:9:18"},"scope":2401,"src":"365:57:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bdb4b848","id":2375,"implemented":false,"kind":"function","modifiers":[],"name":"mintCost","nameLocation":"437:8:18","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"445:2:18"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2375,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":2401,"src":"428:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d5abeb01","id":2380,"implemented":false,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"495:9:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"504:2:18"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"530:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:9:18"},"scope":2401,"src":"486:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf3b94cd","id":2385,"implemented":false,"kind":"function","modifiers":[],"name":"shouldReveal","nameLocation":"554:12:18","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"566:2:18"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"592:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"592:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"591:6:18"},"scope":2401,"src":"545:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"96634a40","id":2390,"implemented":false,"kind":"function","modifiers":[],"name":"revealPendingMetadata","nameLocation":"613:21:18","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"634:2:18"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"requestId","nameLocation":"663:9:18","nodeType":"VariableDeclaration","scope":2390,"src":"655:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:19:18"},"scope":2401,"src":"604:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aaae4e23","id":2395,"implemented":false,"kind":"function","modifiers":[],"name":"setRevealBatchSize","nameLocation":"689:18:18","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"716:16:18","nodeType":"VariableDeclaration","scope":2395,"src":"708:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"707:26:18"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[],"src":"742:0:18"},"scope":2401,"src":"680:63:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c65d81f","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"setRevealInterval","nameLocation":"758:17:18","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"_revealInterval","nameLocation":"784:15:18","nodeType":"VariableDeclaration","scope":2400,"src":"776:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"775:25:18"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"809:0:18"},"scope":2401,"src":"749:61:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2402,"src":"56:756:18","usedErrors":[]}],"src":"32:781:18"},"id":18},"contracts/NFTCollection.sol":{"ast":{"absolutePath":"contracts/NFTCollection.sol","exportedSymbols":{"Address":[2009],"Base64":[2056],"Context":[2078],"ERC165":[2328],"ERC721":[1184],"ERC721Enumerable":[1656],"IERC165":[2340],"IERC721":[1300],"IERC721Enumerable":[1687],"IERC721Metadata":[1714],"IERC721Receiver":[1318],"INFTCollection":[2401],"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115],"NFTCollection":[3364],"Ownable":[317],"Strings":[2304],"VRFConsumerBaseV2":[96],"VRFCoordinatorV2Interface":[204]},"id":3365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2403,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"32:22:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":318,"src":"56:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":2405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":1657,"src":"109:78:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":2305,"src":"188:51:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":2407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":2057,"src":"240:50:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":2408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":97,"src":"291:61:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":2409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":205,"src":"353:80:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","file":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","id":2410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":39,"src":"434:60:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/INFTCollection.sol","file":"./INFTCollection.sol","id":2411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3365,"sourceUnit":2402,"src":"495:30:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2412,"name":"INFTCollection","nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"557:14:19"},"id":2413,"nodeType":"InheritanceSpecifier","src":"557:14:19"},{"baseName":{"id":2414,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":317,"src":"577:7:19"},"id":2415,"nodeType":"InheritanceSpecifier","src":"577:7:19"},{"baseName":{"id":2416,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"590:16:19"},"id":2417,"nodeType":"InheritanceSpecifier","src":"590:16:19"},{"baseName":{"id":2418,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"612:17:19"},"id":2419,"nodeType":"InheritanceSpecifier","src":"612:17:19"},{"baseName":{"id":2420,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"635:25:19"},"id":2421,"nodeType":"InheritanceSpecifier","src":"635:25:19"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3364,"linearizedBaseContracts":[3364,115,96,1656,1687,1184,1714,1300,2328,2340,317,2078,2401],"name":"NFTCollection","nameLocation":"536:13:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NFTCollection.Metadata","id":2428,"members":[{"constant":false,"id":2423,"mutability":"mutable","name":"startIndex","nameLocation":"717:10:19","nodeType":"VariableDeclaration","scope":2428,"src":"709:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"endIndex","nameLocation":"745:8:19","nodeType":"VariableDeclaration","scope":2428,"src":"737:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"737:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"entropy","nameLocation":"771:7:19","nodeType":"VariableDeclaration","scope":2428,"src":"763:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Metadata","nameLocation":"690:8:19","nodeType":"StructDefinition","scope":3364,"src":"683:102:19","visibility":"public"},{"constant":false,"id":2430,"mutability":"immutable","name":"MAX_SUPPLY","nameLocation":"843:10:19","nodeType":"VariableDeclaration","scope":3364,"src":"817:36:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2432,"mutability":"immutable","name":"MINT_COST","nameLocation":"885:9:19","nodeType":"VariableDeclaration","scope":3364,"src":"859:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2434,"mutability":"mutable","name":"s_revealedCount","nameLocation":"941:15:19","nodeType":"VariableDeclaration","scope":3364,"src":"925:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2436,"mutability":"mutable","name":"s_revealBatchSize","nameLocation":"978:17:19","nodeType":"VariableDeclaration","scope":3364,"src":"962:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2438,"mutability":"mutable","name":"s_revealInterval","nameLocation":"1017:16:19","nodeType":"VariableDeclaration","scope":3364,"src":"1001:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2442,"mutability":"mutable","name":"s_lastRevealed","nameLocation":"1055:14:19","nodeType":"VariableDeclaration","scope":3364,"src":"1039:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":2440,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1072:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1072:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2444,"mutability":"mutable","name":"s_revealInProgress","nameLocation":"1106:18:19","nodeType":"VariableDeclaration","scope":3364,"src":"1093:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"1093:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":2448,"mutability":"mutable","name":"s_metadatas","nameLocation":"1149:11:19","nodeType":"VariableDeclaration","scope":3364,"src":"1130:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata[]"},"typeName":{"baseType":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"Metadata","nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"1130:8:19"},"referencedDeclaration":2428,"src":"1130:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage_ptr","typeString":"struct NFTCollection.Metadata"}},"id":2447,"nodeType":"ArrayTypeName","src":"1130:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr","typeString":"struct NFTCollection.Metadata[]"}},"visibility":"private"},{"constant":true,"id":2451,"mutability":"constant","name":"VRF_REQUEST_CONFIRMATIONS","nameLocation":"1225:25:19","nodeType":"VariableDeclaration","scope":3364,"src":"1201:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2449,"name":"uint16","nodeType":"ElementaryTypeName","src":"1201:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1253:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2454,"mutability":"constant","name":"VRF_NUM_WORDS","nameLocation":"1284:13:19","nodeType":"VariableDeclaration","scope":3364,"src":"1260:41:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2452,"name":"uint32","nodeType":"ElementaryTypeName","src":"1260:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":2457,"mutability":"immutable","name":"VRF_COORDINATOR_V2","nameLocation":"1352:18:19","nodeType":"VariableDeclaration","scope":3364,"src":"1308:62:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":2456,"nodeType":"UserDefinedTypeName","pathNode":{"id":2455,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"1308:25:19"},"referencedDeclaration":204,"src":"1308:25:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":2459,"mutability":"immutable","name":"VRF_SUBSCRIPTION_ID","nameLocation":"1401:19:19","nodeType":"VariableDeclaration","scope":3364,"src":"1376:44:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2458,"name":"uint64","nodeType":"ElementaryTypeName","src":"1376:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2461,"mutability":"immutable","name":"VRF_GAS_LANE","nameLocation":"1452:12:19","nodeType":"VariableDeclaration","scope":3364,"src":"1426:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1426:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2463,"mutability":"immutable","name":"VRF_CALLBACK_GAS_LIMIT","nameLocation":"1495:22:19","nodeType":"VariableDeclaration","scope":3364,"src":"1470:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2462,"name":"uint32","nodeType":"ElementaryTypeName","src":"1470:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"anonymous":false,"id":2467,"name":"BatchRevealRequested","nameLocation":"1545:20:19","nodeType":"EventDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1574:9:19","nodeType":"VariableDeclaration","scope":2467,"src":"1566:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:19:19"},"src":"1539:46:19"},{"anonymous":false,"id":2473,"name":"BatchRevealFinished","nameLocation":"1596:19:19","nodeType":"EventDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"indexed":false,"mutability":"mutable","name":"startIndex","nameLocation":"1624:10:19","nodeType":"VariableDeclaration","scope":2473,"src":"1616:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2471,"indexed":false,"mutability":"mutable","name":"endIndex","nameLocation":"1644:8:19","nodeType":"VariableDeclaration","scope":2473,"src":"1636:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1615:38:19"},"src":"1590:64:19"},{"id":2475,"name":"InvalidAmount","nameLocation":"1681:13:19","nodeType":"ErrorDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[],"src":"1694:2:19"},"src":"1675:22:19"},{"id":2477,"name":"MaxSupplyReached","nameLocation":"1708:16:19","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"1724:2:19"},"src":"1702:25:19"},{"id":2479,"name":"InsufficientFunds","nameLocation":"1738:17:19","nodeType":"ErrorDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"1755:2:19"},"src":"1732:26:19"},{"id":2481,"name":"RevealCriteriaNotMet","nameLocation":"1769:20:19","nodeType":"ErrorDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"1789:2:19"},"src":"1763:29:19"},{"id":2483,"name":"RevealInProgress","nameLocation":"1803:16:19","nodeType":"ErrorDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"1819:2:19"},"src":"1797:25:19"},{"id":2485,"name":"InsufficientLINK","nameLocation":"1833:16:19","nodeType":"ErrorDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"1849:2:19"},"src":"1827:25:19"},{"id":2487,"name":"WithdrawProceedsFailed","nameLocation":"1863:22:19","nodeType":"ErrorDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"1885:2:19"},"src":"1857:31:19"},{"id":2489,"name":"NonExistentToken","nameLocation":"1899:16:19","nodeType":"ErrorDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"1915:2:19"},"src":"1893:25:19"},{"body":{"id":2553,"nodeType":"Block","src":"2320:377:19","statements":[{"expression":{"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2519,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2330:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2520,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2343:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2330:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"nodeType":"ExpressionStatement","src":"2330:23:19"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2363:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2524,"name":"_mintCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2375:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2363:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"2363:21:19"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"VRF_COORDINATOR_V2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2394:18:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2529,"name":"_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2441:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2528,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2415:25:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$204_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2415:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2394:65:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":2532,"nodeType":"ExpressionStatement","src":"2394:65:19"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"VRF_SUBSCRIPTION_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"2469:19:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2534,"name":"_vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"2491:18:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2469:40:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2536,"nodeType":"ExpressionStatement","src":"2469:40:19"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"VRF_GAS_LANE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2519:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2538,"name":"_vrfGasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"2534:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2519:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2540,"nodeType":"ExpressionStatement","src":"2519:26:19"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"VRF_CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2555:22:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2542,"name":"_vrfCallbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"2580:20:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2555:45:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2544,"nodeType":"ExpressionStatement","src":"2555:45:19"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2610:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2546,"name":"_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2630:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2610:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"2610:36:19"},{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"2656:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2550,"name":"_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2675:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2656:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"2656:34:19"}]},"id":2554,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2512,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"2267:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2513,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"2274:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2514,"kind":"baseConstructorSpecifier","modifierName":{"id":2511,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"2260:6:19"},"nodeType":"ModifierInvocation","src":"2260:22:19"},{"arguments":[{"id":2516,"name":"_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2301:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2517,"kind":"baseConstructorSpecifier","modifierName":{"id":2515,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"2283:17:19"},"nodeType":"ModifierInvocation","src":"2283:36:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"_name","nameLocation":"1959:5:19","nodeType":"VariableDeclaration","scope":2554,"src":"1945:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"1945:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"_symbol","nameLocation":"1988:7:19","nodeType":"VariableDeclaration","scope":2554,"src":"1974:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2492,"name":"string","nodeType":"ElementaryTypeName","src":"1974:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"_maxSupply","nameLocation":"2013:10:19","nodeType":"VariableDeclaration","scope":2554,"src":"2005:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"_mintCost","nameLocation":"2041:9:19","nodeType":"VariableDeclaration","scope":2554,"src":"2033:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"2068:16:19","nodeType":"VariableDeclaration","scope":2554,"src":"2060:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"_revealInterval","nameLocation":"2102:15:19","nodeType":"VariableDeclaration","scope":2554,"src":"2094:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"_vrfCoordinatorV2","nameLocation":"2135:17:19","nodeType":"VariableDeclaration","scope":2554,"src":"2127:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"_vrfSubscriptionId","nameLocation":"2169:18:19","nodeType":"VariableDeclaration","scope":2554,"src":"2162:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2504,"name":"uint64","nodeType":"ElementaryTypeName","src":"2162:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"_vrfGasLane","nameLocation":"2205:11:19","nodeType":"VariableDeclaration","scope":2554,"src":"2197:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2197:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"_vrfCallbackGasLimit","nameLocation":"2233:20:19","nodeType":"VariableDeclaration","scope":2554,"src":"2226:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2508,"name":"uint32","nodeType":"ElementaryTypeName","src":"2226:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1935:324:19"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"2320:0:19"},"scope":3364,"src":"1924:773:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2347],"body":{"id":2614,"nodeType":"Block","src":"2776:433:19","statements":[{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"totalSupply","nameLocation":"2794:11:19","nodeType":"VariableDeclaration","scope":2614,"src":"2786:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2564,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2562,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2808:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2808:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2786:35:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2835:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"nodeType":"IfStatement","src":"2831:65:19","trueBody":{"id":2571,"nodeType":"Block","src":"2849:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2568,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2870:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2870:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"RevertStatement","src":"2863:22:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2574,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2909:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2576,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2933:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2909:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"nodeType":"IfStatement","src":"2905:90:19","trueBody":{"id":2581,"nodeType":"Block","src":"2945:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2578,"name":"MaxSupplyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2966:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2966:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"RevertStatement","src":"2959:25:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3008:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3020:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2586,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3032:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3020:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3008:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"3004:88:19","trueBody":{"id":2592,"nodeType":"Block","src":"3041:51:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2589,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3062:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3062:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"RevertStatement","src":"3055:26:19"}]}},{"body":{"id":2612,"nodeType":"Block","src":"3140:63:19","statements":[{"expression":{"arguments":[{"expression":{"id":2605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3164:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3176:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3190:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3176:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[799,828],"referencedDeclaration":799,"src":"3154:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3154:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"ExpressionStatement","src":"3154:38:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3121:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2599,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3121:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2613,"initializationExpression":{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"i","nameLocation":"3114:1:19","nodeType":"VariableDeclaration","scope":2613,"src":"3106:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2597,"initialValue":{"hexValue":"31","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3106:13:19"},"loopExpression":{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3135:3:19","subExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3135:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"3135:3:19"},"nodeType":"ForStatement","src":"3101:102:19"}]},"functionSelector":"a0712d68","id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2728:4:19","nodeType":"FunctionDefinition","overrides":{"id":2558,"nodeType":"OverrideSpecifier","overrides":[],"src":"2767:8:19"},"parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"_amount","nameLocation":"2741:7:19","nodeType":"VariableDeclaration","scope":2615,"src":"2733:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2732:17:19"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"2776:0:19"},"scope":3364,"src":"2719:490:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2350],"body":{"id":2645,"nodeType":"Block","src":"3271:164:19","statements":[{"assignments":[2622,null],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"sent","nameLocation":"3287:4:19","nodeType":"VariableDeclaration","scope":2645,"src":"3282:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2621,"name":"bool","nodeType":"ElementaryTypeName","src":"3282:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2637,"initialValue":{"arguments":[{"hexValue":"","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3349:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3305:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3305:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3297:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"3297:8:19","stateMutability":"payable","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3297:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3297:21:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":2631,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3334:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCollection_$3364","typeString":"contract NFTCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTCollection_$3364","typeString":"contract NFTCollection"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:19","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3326:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3297:51:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3297:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3281:71:19"},{"condition":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3366:5:19","subExpression":{"id":2638,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"3367:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"IfStatement","src":"3362:67:19","trueBody":{"id":2643,"nodeType":"Block","src":"3373:56:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2640,"name":"WithdrawProceedsFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3394:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3394:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"RevertStatement","src":"3387:31:19"}]}}]},"functionSelector":"9038e693","id":2646,"implemented":true,"kind":"function","modifiers":[{"id":2619,"kind":"modifierInvocation","modifierName":{"id":2618,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"3261:9:19"},"nodeType":"ModifierInvocation","src":"3261:9:19"}],"name":"withdrawProceeds","nameLocation":"3224:16:19","nodeType":"FunctionDefinition","overrides":{"id":2617,"nodeType":"OverrideSpecifier","overrides":[],"src":"3252:8:19"},"parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"3240:2:19"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"3271:0:19"},"scope":3364,"src":"3215:220:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[522],"body":{"id":2688,"nodeType":"Block","src":"3573:343:19","statements":[{"condition":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3587:17:19","subExpression":{"arguments":[{"id":2655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3596:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2654,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3588:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"3583:73:19","trueBody":{"id":2661,"nodeType":"Block","src":"3606:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2658,"name":"NonExistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3627:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3627:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"RevertStatement","src":"3620:25:19"}]}},{"assignments":[2664,2666],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"randomness","nameLocation":"3674:10:19","nodeType":"VariableDeclaration","scope":2688,"src":"3666:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"metadataCleared","nameLocation":"3691:15:19","nodeType":"VariableDeclaration","scope":2688,"src":"3686:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"3686:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2670,"initialValue":{"arguments":[{"id":2668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"_getTokenRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"3710:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (uint256) view returns (uint256,bool)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3665:73:19"},{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"svg","nameLocation":"3762:3:19","nodeType":"VariableDeclaration","scope":2688,"src":"3748:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2671,"name":"string","nodeType":"ElementaryTypeName","src":"3748:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"id":2674,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3781:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2675,"name":"metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3793:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2673,"name":"_generateSVG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"3768:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,bool) pure returns (string memory)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3768:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3748:61:19"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"svgEncoded","nameLocation":"3833:10:19","nodeType":"VariableDeclaration","scope":2688,"src":"3819:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2678,"name":"string","nodeType":"ElementaryTypeName","src":"3819:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2683,"initialValue":{"arguments":[{"id":2681,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"3861:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2680,"name":"_svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3846:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3819:46:19"},{"expression":{"arguments":[{"id":2685,"name":"svgEncoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3898:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2684,"name":"_formatTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"3882:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3882:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2653,"id":2687,"nodeType":"Return","src":"3875:34:19"}]},"functionSelector":"c87b56dd","id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3466:8:19","nodeType":"FunctionDefinition","overrides":{"id":2650,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:19"},"parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:19","nodeType":"VariableDeclaration","scope":2689,"src":"3475:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3474:17:19"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"3554:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2651,"name":"string","nodeType":"ElementaryTypeName","src":"3554:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3553:15:19"},"scope":3364,"src":"3457:459:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2355],"body":{"id":2697,"nodeType":"Block","src":"3988:39:19","statements":[{"expression":{"id":2695,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4005:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2694,"id":2696,"nodeType":"Return","src":"3998:22:19"}]},"functionSelector":"bbd78e93","id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"revealedCount","nameLocation":"3931:13:19","nodeType":"FunctionDefinition","overrides":{"id":2691,"nodeType":"OverrideSpecifier","overrides":[],"src":"3961:8:19"},"parameters":{"id":2690,"nodeType":"ParameterList","parameters":[],"src":"3944:2:19"},"returnParameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"3979:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3979:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3978:9:19"},"scope":3364,"src":"3922:105:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2360],"body":{"id":2706,"nodeType":"Block","src":"4098:38:19","statements":[{"expression":{"id":2704,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4115:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2703,"id":2705,"nodeType":"Return","src":"4108:21:19"}]},"functionSelector":"7b4fab5a","id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"lastRevealed","nameLocation":"4042:12:19","nodeType":"FunctionDefinition","overrides":{"id":2700,"nodeType":"OverrideSpecifier","overrides":[],"src":"4071:8:19"},"parameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"4054:2:19"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"4089:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4088:9:19"},"scope":3364,"src":"4033:103:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2365],"body":{"id":2715,"nodeType":"Block","src":"4204:41:19","statements":[{"expression":{"id":2713,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"4221:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2712,"id":2714,"nodeType":"Return","src":"4214:24:19"}]},"functionSelector":"f4daaba1","id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"batchSize","nameLocation":"4151:9:19","nodeType":"FunctionDefinition","overrides":{"id":2709,"nodeType":"OverrideSpecifier","overrides":[],"src":"4177:8:19"},"parameters":{"id":2708,"nodeType":"ParameterList","parameters":[],"src":"4160:2:19"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"4195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4195:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:9:19"},"scope":3364,"src":"4142:103:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2370],"body":{"id":2724,"nodeType":"Block","src":"4318:40:19","statements":[{"expression":{"id":2722,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4335:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2721,"id":2723,"nodeType":"Return","src":"4328:23:19"}]},"functionSelector":"247cd8ad","id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"revealInterval","nameLocation":"4260:14:19","nodeType":"FunctionDefinition","overrides":{"id":2718,"nodeType":"OverrideSpecifier","overrides":[],"src":"4291:8:19"},"parameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"4274:2:19"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"4309:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4309:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4308:9:19"},"scope":3364,"src":"4251:107:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2733,"nodeType":"Block","src":"4418:42:19","statements":[{"expression":{"expression":{"id":2730,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4435:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4435:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2729,"id":2732,"nodeType":"Return","src":"4428:25:19"}]},"functionSelector":"06f13056","id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"batchCount","nameLocation":"4373:10:19","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"4383:2:19"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"4409:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4408:9:19"},"scope":3364,"src":"4364:96:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2760,"nodeType":"Block","src":"4627:125:19","statements":[{"assignments":[2747],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"batch","nameLocation":"4653:5:19","nodeType":"VariableDeclaration","scope":2760,"src":"4637:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata"},"typeName":{"id":2746,"nodeType":"UserDefinedTypeName","pathNode":{"id":2745,"name":"Metadata","nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"4637:8:19"},"referencedDeclaration":2428,"src":"4637:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage_ptr","typeString":"struct NFTCollection.Metadata"}},"visibility":"internal"}],"id":2751,"initialValue":{"baseExpression":{"id":2748,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4661:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2750,"indexExpression":{"id":2749,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"4673:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4661:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4637:42:19"},{"expression":{"components":[{"expression":{"id":2752,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4697:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}},"id":2753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startIndex","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"4697:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2754,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4715:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endIndex","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"4715:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2756,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4731:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}},"id":2757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"entropy","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"4731:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4696:49:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":2744,"id":2759,"nodeType":"Return","src":"4689:56:19"}]},"functionSelector":"f8190966","id":2761,"implemented":true,"kind":"function","modifiers":[],"name":"batchDetails","nameLocation":"4475:12:19","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"index","nameLocation":"4496:5:19","nodeType":"VariableDeclaration","scope":2761,"src":"4488:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"4488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:15:19"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2761,"src":"4563:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4563:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2761,"src":"4584:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2761,"src":"4605:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4549:73:19"},"scope":3364,"src":"4466:286:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2375],"body":{"id":2769,"nodeType":"Block","src":"4817:33:19","statements":[{"expression":{"id":2767,"name":"MINT_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"4834:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2766,"id":2768,"nodeType":"Return","src":"4827:16:19"}]},"functionSelector":"bdb4b848","id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"mintCost","nameLocation":"4767:8:19","nodeType":"FunctionDefinition","overrides":{"id":2763,"nodeType":"OverrideSpecifier","overrides":[],"src":"4790:8:19"},"parameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"4775:2:19"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2770,"src":"4808:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"4808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4807:9:19"},"scope":3364,"src":"4758:92:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2380],"body":{"id":2778,"nodeType":"Block","src":"4918:34:19","statements":[{"expression":{"id":2776,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4935:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2775,"id":2777,"nodeType":"Return","src":"4928:17:19"}]},"functionSelector":"d5abeb01","id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"4865:9:19","nodeType":"FunctionDefinition","overrides":{"id":2772,"nodeType":"OverrideSpecifier","overrides":[],"src":"4891:8:19"},"parameters":{"id":2771,"nodeType":"ParameterList","parameters":[],"src":"4874:2:19"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"4909:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4908:9:19"},"scope":3364,"src":"4856:96:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2836,"nodeType":"Block","src":"5113:401:19","statements":[{"body":{"id":2834,"nodeType":"Block","src":"5172:336:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"5207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":2800,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5218:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2802,"indexExpression":{"id":2801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5230:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5218:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startIndex","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"5218:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5207:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"5263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2806,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5273:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2808,"indexExpression":{"id":2807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5285:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5273:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endIndex","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"5273:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5207:89:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2833,"nodeType":"IfStatement","src":"5186:312:19","trueBody":{"id":2832,"nodeType":"Block","src":"5311:187:19","statements":[{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2812,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"5329:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2818,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5392:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2820,"indexExpression":{"id":2819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5404:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5392:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_storage","typeString":"struct NFTCollection.Metadata storage ref"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"entropy","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"5392:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2822,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"5416:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2816,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5381:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5381:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5381:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2815,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5371:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5371:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5342:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:19","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5342:101:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5329:114:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2827,"nodeType":"ExpressionStatement","src":"5329:114:19"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"5461:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5479:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5461:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2831,"nodeType":"ExpressionStatement","src":"5461:22:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5143:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2793,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5147:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5147:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5143:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"initializationExpression":{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"i","nameLocation":"5136:1:19","nodeType":"VariableDeclaration","scope":2835,"src":"5128:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5128:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2791,"initialValue":{"hexValue":"30","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5140:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5128:13:19"},"loopExpression":{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5167:3:19","subExpression":{"id":2796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5167:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"5167:3:19"},"nodeType":"ForStatement","src":"5123:385:19"}]},"id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenRandomness","nameLocation":"4983:19:19","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"tokenId","nameLocation":"5011:7:19","nodeType":"VariableDeclaration","scope":2837,"src":"5003:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5002:17:19"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"randomness","nameLocation":"5075:10:19","nodeType":"VariableDeclaration","scope":2837,"src":"5067:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"metadataCleared","nameLocation":"5092:15:19","nodeType":"VariableDeclaration","scope":2837,"src":"5087:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2785,"name":"bool","nodeType":"ElementaryTypeName","src":"5087:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5066:42:19"},"scope":3364,"src":"4974:540:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"5635:677:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5726:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5903:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a224e4654222c20","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","typeString":"literal_string \"\"name\":\"NFT\", \""},"value":"\"name\":\"NFT\", "},{"hexValue":"226465736372697074696f6e223a2242617463682d72657665616c6564204e465421222c20","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5998:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","typeString":"literal_string \"\"description\":\"Batch-revealed NFT!\", \""},"value":"\"description\":\"Batch-revealed NFT!\", "},{"hexValue":"2261747472696275746573223a22222c20","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6075:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","typeString":"literal_string \"\"attributes\":\"\", \""},"value":"\"attributes\":\"\", "},{"hexValue":"22696d616765223a22","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6132:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},"value":"\"image\":\""},{"id":2860,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"6145:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6155:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6192:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","typeString":"literal_string \"\"name\":\"NFT\", \""},{"typeIdentifier":"t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","typeString":"literal_string \"\"description\":\"Batch-revealed NFT!\", \""},{"typeIdentifier":"t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","typeString":"literal_string \"\"attributes\":\"\", \""},{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":2853,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5853:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5853:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5853:372:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5818:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2851,"name":"bytes","nodeType":"ElementaryTypeName","src":"5818:5:19","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5818:433:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2849,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5779:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2056_$","typeString":"type(library Base64)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"5779:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5779:494:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2846,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5688:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5688:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5688:603:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5664:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2844,"name":"string","nodeType":"ElementaryTypeName","src":"5664:6:19","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5664:641:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2843,"id":2868,"nodeType":"Return","src":"5645:660:19"}]},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"_formatTokenURI","nameLocation":"5529:15:19","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"imageURI","nameLocation":"5559:8:19","nodeType":"VariableDeclaration","scope":2870,"src":"5545:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2838,"name":"string","nodeType":"ElementaryTypeName","src":"5545:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5544:24:19"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"5616:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"5616:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5615:15:19"},"scope":3364,"src":"5520:792:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"6450:1522:19","statements":[{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"parts","nameLocation":"6477:5:19","nodeType":"VariableDeclaration","scope":3024,"src":"6460:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string[4]"},"typeName":{"baseType":{"id":2882,"name":"string","nodeType":"ElementaryTypeName","src":"6460:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2883,"length":{"hexValue":"34","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6467:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"6460:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$4_storage_ptr","typeString":"string[4]"}},"visibility":"internal"}],"id":2885,"nodeType":"VariableDeclarationStatement","src":"6460:22:19"},{"expression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2886,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6492:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2888,"indexExpression":{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6492:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6503:100:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3fdae95b12d4144c1ef7b473afe057c16d9328243c0061ee93bb1951ad140de6","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">\""},"value":"<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 350 350\">"},"src":"6492:111:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2891,"nodeType":"ExpressionStatement","src":"6492:111:19"},{"condition":{"id":2892,"name":"_metadataCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"6617:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2997,"nodeType":"Block","src":"7626:223:19","statements":[{"expression":{"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2985,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7640:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2987,"indexExpression":{"hexValue":"31","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7646:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7640:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a2033353070783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2239302220793d223239352220636c6173733d2262617365223e","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7651:159:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0a046e413407ed2373b4a5a7d72790e154aac60c33cfb14b440e4f92e173f99","typeString":"literal_string \"<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">\""},"value":"<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text x=\"90\" y=\"295\" class=\"base\">"},"src":"7640:170:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2990,"nodeType":"ExpressionStatement","src":"7640:170:19"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2991,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7824:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2993,"indexExpression":{"hexValue":"32","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7830:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7824:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3f","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7835:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f179612d7132c8ed24ba0e286d60d398c4aa1c234eb2274ca1bba47718e9d31","typeString":"literal_string \"?\""},"value":"?"},"src":"7824:14:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2996,"nodeType":"ExpressionStatement","src":"7824:14:19"}]},"id":2998,"nodeType":"IfStatement","src":"6613:1236:19","trueBody":{"id":2984,"nodeType":"Block","src":"6635:985:19","statements":[{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2893,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6649:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2895,"indexExpression":{"hexValue":"31","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6655:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6649:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20353970783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420636c6173733d2262617365223e","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6660:143:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdd1b1305a236a0358eebe2ef8871e33de387adcf02fc5189d11ebe1d382c8c6","typeString":"literal_string \"<style>.base { fill: white; font-family: serif; font-size: 59px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">\""},"value":"<style>.base { fill: white; font-family: serif; font-size: 59px; }</style><rect width=\"100%\" height=\"100%\" fill=\"black\" /><text class=\"base\">"},"src":"6649:154:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2898,"nodeType":"ExpressionStatement","src":"6649:154:19"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"svgRows","nameLocation":"6834:7:19","nodeType":"VariableDeclaration","scope":2984,"src":"6817:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string[6]"},"typeName":{"baseType":{"id":2902,"name":"string","nodeType":"ElementaryTypeName","src":"6817:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2903,"length":{"hexValue":"36","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6824:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"6817:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$6_storage_ptr","typeString":"string[6]"}},"visibility":"internal"}],"id":2905,"nodeType":"VariableDeclarationStatement","src":"6817:24:19"},{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"randomnessString","nameLocation":"6869:16:19","nodeType":"VariableDeclaration","scope":2984,"src":"6855:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2906,"name":"string","nodeType":"ElementaryTypeName","src":"6855:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2913,"initialValue":{"arguments":[{"id":2910,"name":"_randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"6908:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6921:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":2908,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6888:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2304_$","typeString":"type(library Strings)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"6888:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6888:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6855:69:19"},{"body":{"id":2953,"nodeType":"Block","src":"6968:353:19","statements":[{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"partialString","nameLocation":"7000:13:19","nodeType":"VariableDeclaration","scope":2953,"src":"6986:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2924,"name":"string","nodeType":"ElementaryTypeName","src":"6986:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2938,"initialValue":{"arguments":[{"id":2927,"name":"randomnessString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"7027:16:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"7045:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3131","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:2:19","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"7045:6:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"7054:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7054:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7053:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3131","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7063:2:19","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"7053:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2926,"name":"_substring","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"7016:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,uint256,uint256) pure returns (string memory)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7016:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6986:80:19"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2939,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7084:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2941,"indexExpression":{"id":2940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"7092:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7084:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"3c747370616e20783d223136222064793d223536223e","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7167:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2","typeString":"literal_string \"<tspan x=\"16\" dy=\"56\">\""},"value":"<tspan x=\"16\" dy=\"56\">"},{"id":2947,"name":"partialString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"7217:13:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f747370616e3e","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7256:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","typeString":"literal_string \"</tspan>\""},"value":"</tspan>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2","typeString":"literal_string \"<tspan x=\"16\" dy=\"56\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","typeString":"literal_string \"</tspan>\""}],"expression":{"id":2944,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7125:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7125:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7125:163:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7097:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2942,"name":"string","nodeType":"ElementaryTypeName","src":"7097:6:19","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:209:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7084:222:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2952,"nodeType":"ExpressionStatement","src":"7084:222:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6956:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"36","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6960:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"6956:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"initializationExpression":{"assignments":[2915],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"i","nameLocation":"6949:1:19","nodeType":"VariableDeclaration","scope":2954,"src":"6943:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2914,"name":"uint8","nodeType":"ElementaryTypeName","src":"6943:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2917,"initialValue":{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6953:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6943:11:19"},"loopExpression":{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6963:3:19","subExpression":{"id":2921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6963:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2923,"nodeType":"ExpressionStatement","src":"6963:3:19"},"nodeType":"ForStatement","src":"6938:383:19"},{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2955,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7334:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":2957,"indexExpression":{"hexValue":"32","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7340:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7334:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":2962,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7407:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2964,"indexExpression":{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7407:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2965,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7439:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2967,"indexExpression":{"hexValue":"31","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7447:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7439:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2968,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7471:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2970,"indexExpression":{"hexValue":"32","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7479:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7471:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2971,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7503:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2973,"indexExpression":{"hexValue":"33","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7511:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7503:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2974,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7535:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2976,"indexExpression":{"hexValue":"34","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7543:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7535:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2977,"name":"svgRows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7567:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$6_memory_ptr","typeString":"string memory[6] memory"}},"id":2979,"indexExpression":{"hexValue":"35","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7575:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7567:10:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7369:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7369:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7369:226:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7345:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2958,"name":"string","nodeType":"ElementaryTypeName","src":"7345:6:19","typeDescriptions":{}}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7345:264:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7334:275:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2983,"nodeType":"ExpressionStatement","src":"7334:275:19"}]}},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2999,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7858:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":3001,"indexExpression":{"hexValue":"33","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7858:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3c2f746578743e3c2f7376673e","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7869:15:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a","typeString":"literal_string \"</text></svg>\""},"value":"</text></svg>"},"src":"7858:26:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3004,"nodeType":"ExpressionStatement","src":"7858:26:19"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3009,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7925:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":3011,"indexExpression":{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7925:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":3012,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7935:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":3014,"indexExpression":{"hexValue":"31","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7941:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7935:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":3015,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7945:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":3017,"indexExpression":{"hexValue":"32","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7951:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7945:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":3018,"name":"parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7955:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$4_memory_ptr","typeString":"string memory[4] memory"}},"id":3020,"indexExpression":{"hexValue":"33","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7961:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7955:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3007,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7901:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3005,"name":"string","nodeType":"ElementaryTypeName","src":"7901:6:19","typeDescriptions":{}}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7901:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2878,"id":3023,"nodeType":"Return","src":"7894:71:19"}]},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"_generateSVG","nameLocation":"6327:12:19","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"_randomness","nameLocation":"6348:11:19","nodeType":"VariableDeclaration","scope":3025,"src":"6340:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6340:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"_metadataCleared","nameLocation":"6366:16:19","nodeType":"VariableDeclaration","scope":3025,"src":"6361:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2873,"name":"bool","nodeType":"ElementaryTypeName","src":"6361:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6339:44:19"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"6431:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2876,"name":"string","nodeType":"ElementaryTypeName","src":"6431:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6430:15:19"},"scope":3364,"src":"6318:1654:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3061,"nodeType":"Block","src":"8087:231:19","statements":[{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"baseURL","nameLocation":"8111:7:19","nodeType":"VariableDeclaration","scope":3061,"src":"8097:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3032,"name":"string","nodeType":"ElementaryTypeName","src":"8097:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3035,"initialValue":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8121:28:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"nodeType":"VariableDeclarationStatement","src":"8097:52:19"},{"assignments":[3037],"declarations":[{"constant":false,"id":3037,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"8173:16:19","nodeType":"VariableDeclaration","scope":3061,"src":"8159:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"8159:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3051,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3046,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"8236:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3044,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8219:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8219:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8219:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8212:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3042,"name":"string","nodeType":"ElementaryTypeName","src":"8212:6:19","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8212:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8206:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3040,"name":"bytes","nodeType":"ElementaryTypeName","src":"8206:5:19","typeDescriptions":{}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3038,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"8192:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2056_$","typeString":"type(library Base64)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"8192:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8192:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8159:84:19"},{"expression":{"arguments":[{"arguments":[{"id":3056,"name":"baseURL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"8284:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3057,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"8293:16:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3054,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8267:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8267:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8267:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8260:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3052,"name":"string","nodeType":"ElementaryTypeName","src":"8260:6:19","typeDescriptions":{}}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8260:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3031,"id":3060,"nodeType":"Return","src":"8253:58:19"}]},"id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"_svgToImageURI","nameLocation":"7987:14:19","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"svg","nameLocation":"8016:3:19","nodeType":"VariableDeclaration","scope":3062,"src":"8002:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3026,"name":"string","nodeType":"ElementaryTypeName","src":"8002:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8001:19:19"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3062,"src":"8068:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"8068:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8067:15:19"},"scope":3364,"src":"7978:340:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"8469:264:19","statements":[{"assignments":[3074],"declarations":[{"constant":false,"id":3074,"mutability":"mutable","name":"strBytes","nameLocation":"8492:8:19","nodeType":"VariableDeclaration","scope":3116,"src":"8479:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3073,"name":"bytes","nodeType":"ElementaryTypeName","src":"8479:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3079,"initialValue":{"arguments":[{"id":3077,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"8509:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8503:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3075,"name":"bytes","nodeType":"ElementaryTypeName","src":"8503:5:19","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8503:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8479:34:19"},{"assignments":[3081],"declarations":[{"constant":false,"id":3081,"mutability":"mutable","name":"result","nameLocation":"8536:6:19","nodeType":"VariableDeclaration","scope":3116,"src":"8523:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3080,"name":"bytes","nodeType":"ElementaryTypeName","src":"8523:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3088,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"8555:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3085,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"8566:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8555:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8545:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3082,"name":"bytes","nodeType":"ElementaryTypeName","src":"8549:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8545:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8523:54:19"},{"body":{"id":3109,"nodeType":"Block","src":"8635:61:19","statements":[{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8649:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3103,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3101,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"8660:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8656:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8649:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3104,"name":"strBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"8674:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3106,"indexExpression":{"id":3105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8683:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8674:11:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8649:36:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3108,"nodeType":"ExpressionStatement","src":"8649:36:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8616:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3094,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"8620:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8616:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"initializationExpression":{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"i","nameLocation":"8600:1:19","nodeType":"VariableDeclaration","scope":3110,"src":"8592:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"8592:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3092,"initialValue":{"id":3091,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"8604:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8592:22:19"},"loopExpression":{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8630:3:19","subExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8630:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"8630:3:19"},"nodeType":"ForStatement","src":"8587:109:19"},{"expression":{"arguments":[{"id":3113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8719:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3111,"name":"string","nodeType":"ElementaryTypeName","src":"8712:6:19","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8712:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3072,"id":3115,"nodeType":"Return","src":"8705:21:19"}]},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"_substring","nameLocation":"8333:10:19","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"str","nameLocation":"8367:3:19","nodeType":"VariableDeclaration","scope":3117,"src":"8353:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3063,"name":"string","nodeType":"ElementaryTypeName","src":"8353:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"startIndex","nameLocation":"8388:10:19","nodeType":"VariableDeclaration","scope":3117,"src":"8380:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"8380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"endIndex","nameLocation":"8416:8:19","nodeType":"VariableDeclaration","scope":3117,"src":"8408:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"8408:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8343:87:19"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"8454:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3070,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:15:19"},"scope":3364,"src":"8324:409:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2385],"body":{"id":3179,"nodeType":"Block","src":"8814:578:19","statements":[{"assignments":[3124],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"unrevealedCount","nameLocation":"8832:15:19","nodeType":"VariableDeclaration","scope":3179,"src":"8824:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"8824:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3129,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3125,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8850:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8850:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3127,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"8866:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8850:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8824:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"unrevealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"8895:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8895:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"8891:63:19","trueBody":{"id":3135,"nodeType":"Block","src":"8917:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8938:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3122,"id":3134,"nodeType":"Return","src":"8931:12:19"}]}},{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"batchSizeCriteria","nameLocation":"8968:17:19","nodeType":"VariableDeclaration","scope":3179,"src":"8963:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3137,"name":"bool","nodeType":"ElementaryTypeName","src":"8963:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3140,"initialValue":{"hexValue":"66616c7365","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8963:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9007:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9027:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9007:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"unrevealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"9032:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3145,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9051:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9032:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9007:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"IfStatement","src":"9003:116:19","trueBody":{"id":3152,"nodeType":"Block","src":"9070:49:19","statements":[{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"batchSizeCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"9084:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9104:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9084:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"ExpressionStatement","src":"9084:24:19"}]}},{"assignments":[3155],"declarations":[{"constant":false,"id":3155,"mutability":"mutable","name":"intervalCriteria","nameLocation":"9133:16:19","nodeType":"VariableDeclaration","scope":3179,"src":"9128:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3154,"name":"bool","nodeType":"ElementaryTypeName","src":"9128:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3157,"initialValue":{"hexValue":"66616c7365","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9152:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"9128:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9184:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9184:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3161,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9220:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9220:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3163,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9238:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9220:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3165,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9255:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9220:51:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9184:87:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"IfStatement","src":"9167:163:19","trueBody":{"id":3172,"nodeType":"Block","src":"9282:48:19","statements":[{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"intervalCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"9296:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9315:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9296:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"ExpressionStatement","src":"9296:23:19"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"batchSizeCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"9347:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3175,"name":"intervalCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"9368:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9347:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9346:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3122,"id":3178,"nodeType":"Return","src":"9339:46:19"}]},"functionSelector":"cf3b94cd","id":3180,"implemented":true,"kind":"function","modifiers":[],"name":"shouldReveal","nameLocation":"8763:12:19","nodeType":"FunctionDefinition","overrides":{"id":3119,"nodeType":"OverrideSpecifier","overrides":[],"src":"8790:8:19"},"parameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"8775:2:19"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3180,"src":"8808:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3120,"name":"bool","nodeType":"ElementaryTypeName","src":"8808:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8807:6:19"},"scope":3364,"src":"8754:638:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2390],"body":{"id":3219,"nodeType":"Block","src":"9498:485:19","statements":[{"condition":{"id":3186,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"9512:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3191,"nodeType":"IfStatement","src":"9508:74:19","trueBody":{"id":3190,"nodeType":"Block","src":"9532:50:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3187,"name":"RevealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9553:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9553:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3189,"nodeType":"RevertStatement","src":"9546:25:19"}]}},{"condition":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9595:15:19","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3192,"name":"shouldReveal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"9596:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9596:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"9591:75:19","trueBody":{"id":3198,"nodeType":"Block","src":"9612:54:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3195,"name":"RevealCriteriaNotMet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9633:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9633:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"RevertStatement","src":"9626:29:19"}]}},{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"9675:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3203,"name":"VRF_GAS_LANE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"9738:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3204,"name":"VRF_SUBSCRIPTION_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9764:19:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3205,"name":"VRF_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9797:25:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3206,"name":"VRF_CALLBACK_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"9836:22:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3207,"name":"VRF_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"9872:13:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3201,"name":"VRF_COORDINATOR_V2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9687:18:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":144,"src":"9687:37:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:208:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:220:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3210,"nodeType":"ExpressionStatement","src":"9675:220:19"},{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"9905:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9926:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9905:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"ExpressionStatement","src":"9905:25:19"},{"eventCall":{"arguments":[{"id":3216,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"9966:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3215,"name":"BatchRevealRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"9945:20:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9945:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"EmitStatement","src":"9940:36:19"}]},"functionSelector":"96634a40","id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"revealPendingMetadata","nameLocation":"9407:21:19","nodeType":"FunctionDefinition","overrides":{"id":3182,"nodeType":"OverrideSpecifier","overrides":[],"src":"9454:8:19"},"parameters":{"id":3181,"nodeType":"ParameterList","parameters":[],"src":"9428:2:19"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"requestId","nameLocation":"9488:9:19","nodeType":"VariableDeclaration","scope":3220,"src":"9480:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"9480:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9479:19:19"},"scope":3364,"src":"9398:585:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3270,"nodeType":"Block","src":"10057:506:19","statements":[{"assignments":[3226],"declarations":[{"constant":false,"id":3226,"mutability":"mutable","name":"totalSupply","nameLocation":"10075:11:19","nodeType":"VariableDeclaration","scope":3270,"src":"10067:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"10067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3227,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"10089:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10089:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10067:35:19"},{"assignments":[3231],"declarations":[{"constant":false,"id":3231,"mutability":"mutable","name":"startIndex","nameLocation":"10120:10:19","nodeType":"VariableDeclaration","scope":3270,"src":"10112:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"10112:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3235,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3232,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"10133:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10151:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10133:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10112:40:19"},{"assignments":[3237],"declarations":[{"constant":false,"id":3237,"mutability":"mutable","name":"endIndex","nameLocation":"10170:8:19","nodeType":"VariableDeclaration","scope":3270,"src":"10162:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"10162:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3241,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"10181:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10195:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10181:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10162:34:19"},{"expression":{"arguments":[{"arguments":[{"id":3246,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10275:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3247,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"10313:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3248,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10348:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"name":"Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"10236:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Metadata_$2428_storage_ptr_$","typeString":"type(struct NFTCollection.Metadata storage pointer)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["startIndex","endIndex","entropy"],"nodeType":"FunctionCall","src":"10236:137:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Metadata_$2428_memory_ptr","typeString":"struct NFTCollection.Metadata memory"}],"expression":{"id":3242,"name":"s_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"10206:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage","typeString":"struct NFTCollection.Metadata storage ref[] storage ref"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10206:16:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr_$_t_struct$_Metadata_$2428_storage_$returns$__$bound_to$_t_array$_t_struct$_Metadata_$2428_storage_$dyn_storage_ptr_$","typeString":"function (struct NFTCollection.Metadata storage ref[] storage pointer,struct NFTCollection.Metadata storage ref)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:177:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"10206:177:19"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"s_revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"10393:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3253,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"10411:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"10393:29:19"},{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3256,"name":"s_lastRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"10432:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3257,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10449:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10449:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10432:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"10432:32:19"},{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3261,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"10474:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10495:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10474:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3264,"nodeType":"ExpressionStatement","src":"10474:26:19"},{"eventCall":{"arguments":[{"id":3266,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10535:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3267,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"10547:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3265,"name":"BatchRevealFinished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10515:19:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10515:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3269,"nodeType":"EmitStatement","src":"10510:46:19"}]},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"_fulfillRandomnessForMetadata","nameLocation":"9998:29:19","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"randomness","nameLocation":"10036:10:19","nodeType":"VariableDeclaration","scope":3271,"src":"10028:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"10028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10027:20:19"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[],"src":"10057:0:19"},"scope":3364,"src":"9989:574:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[69],"body":{"id":3286,"nodeType":"Block","src":"10686:62:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3281,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"10726:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3283,"indexExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10738:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10726:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"name":"_fulfillRandomnessForMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"10696:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10696:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3285,"nodeType":"ExpressionStatement","src":"10696:45:19"}]},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"10590:18:19","nodeType":"FunctionDefinition","overrides":{"id":3278,"nodeType":"OverrideSpecifier","overrides":[],"src":"10673:8:19"},"parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"10609:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"10609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"randomWords","nameLocation":"10635:11:19","nodeType":"VariableDeclaration","scope":3287,"src":"10618:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"10618:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ArrayTypeName","src":"10618:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10608:39:19"},"returnParameters":{"id":3279,"nodeType":"ParameterList","parameters":[],"src":"10686:0:19"},"scope":3364,"src":"10581:167:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[108],"body":{"id":3305,"nodeType":"Block","src":"10908:69:19","statements":[{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10918:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10933:19:19","subExpression":{"id":3298,"name":"s_revealInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"10934:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3300,"name":"shouldReveal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"10956:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10956:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10933:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10918:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"nodeType":"ExpressionStatement","src":"10918:52:19"}]},"functionSelector":"6e04ff0d","id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"10779:11:19","nodeType":"FunctionDefinition","overrides":{"id":3291,"nodeType":"OverrideSpecifier","overrides":[],"src":"10845:8:19"},"parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"10791:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3288,"name":"bytes","nodeType":"ElementaryTypeName","src":"10791:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10790:16:19"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"10876:12:19","nodeType":"VariableDeclaration","scope":3306,"src":"10871:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3292,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"10890:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3294,"name":"bytes","nodeType":"ElementaryTypeName","src":"10890:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10870:33:19"},"scope":3364,"src":"10770:207:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[114],"body":{"id":3315,"nodeType":"Block","src":"11040:40:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3312,"name":"revealPendingMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"11050:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11050:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"11050:23:19"}]},"functionSelector":"4585e33b","id":3316,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"10992:13:19","nodeType":"FunctionDefinition","overrides":{"id":3310,"nodeType":"OverrideSpecifier","overrides":[],"src":"11031:8:19"},"parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"11006:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3307,"name":"bytes","nodeType":"ElementaryTypeName","src":"11006:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11005:16:19"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[],"src":"11040:0:19"},"scope":3364,"src":"10983:97:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2395],"body":{"id":3328,"nodeType":"Block","src":"11212:53:19","statements":[{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"s_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"11222:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3325,"name":"_revealBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"11242:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11222:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"11222:36:19"}]},"functionSelector":"aaae4e23","id":3329,"implemented":true,"kind":"function","modifiers":[{"id":3322,"kind":"modifierInvocation","modifierName":{"id":3321,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"11198:9:19"},"nodeType":"ModifierInvocation","src":"11198:9:19"}],"name":"setRevealBatchSize","nameLocation":"11111:18:19","nodeType":"FunctionDefinition","overrides":{"id":3320,"nodeType":"OverrideSpecifier","overrides":[],"src":"11181:8:19"},"parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"_revealBatchSize","nameLocation":"11138:16:19","nodeType":"VariableDeclaration","scope":3329,"src":"11130:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"11130:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11129:26:19"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[],"src":"11212:0:19"},"scope":3364,"src":"11102:163:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2400],"body":{"id":3341,"nodeType":"Block","src":"11379:51:19","statements":[{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3337,"name":"s_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"11389:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3338,"name":"_revealInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"11408:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11389:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"11389:34:19"}]},"functionSelector":"5c65d81f","id":3342,"implemented":true,"kind":"function","modifiers":[{"id":3335,"kind":"modifierInvocation","modifierName":{"id":3334,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"11365:9:19"},"nodeType":"ModifierInvocation","src":"11365:9:19"}],"name":"setRevealInterval","nameLocation":"11280:17:19","nodeType":"FunctionDefinition","overrides":{"id":3333,"nodeType":"OverrideSpecifier","overrides":[],"src":"11348:8:19"},"parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"_revealInterval","nameLocation":"11306:15:19","nodeType":"VariableDeclaration","scope":3342,"src":"11298:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"11298:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11297:25:19"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[],"src":"11379:0:19"},"scope":3364,"src":"11271:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1368],"body":{"id":3362,"nodeType":"Block","src":"11555:135:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3352,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"11608:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3350,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11584:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTCollection_$3364_$","typeString":"type(contract super NFTCollection)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"11584:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11584:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"11636:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3356,"name":"INFTCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"11656:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INFTCollection_$2401_$","typeString":"type(contract INFTCollection)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_INFTCollection_$2401_$","typeString":"type(contract INFTCollection)"}],"id":3355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11651:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11651:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_INFTCollection_$2401","typeString":"type(contract INFTCollection)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"11651:32:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"11636:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11584:99:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3349,"id":3361,"nodeType":"Return","src":"11565:118:19"}]},"functionSelector":"01ffc9a7","id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"11445:17:19","nodeType":"FunctionDefinition","overrides":{"id":3346,"nodeType":"OverrideSpecifier","overrides":[],"src":"11519:8:19"},"parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"interfaceId","nameLocation":"11470:11:19","nodeType":"VariableDeclaration","scope":3363,"src":"11463:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3343,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11463:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"11462:20:19"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"11545:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"11545:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11544:6:19"},"scope":3364,"src":"11436:254:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3365,"src":"527:11165:19","usedErrors":[47,2475,2477,2479,2481,2483,2485,2487,2489]}],"src":"32:11661:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"KeeperBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122013546aa98c3650cf465ba43625f3656a72607a33f43decf68e86e7ad7bdfe6a764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD PUSH11 0xA98C3650CF465BA43625F3 PUSH6 0x6A72607A33F4 RETURNDATASIZE 0xEC 0xF6 DUP15 DUP7 0xE7 0xAD PUSH28 0xDFE6A764736F6C634300080400330000000000000000000000000000 ","sourceMap":"57:511:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122013546aa98c3650cf465ba43625f3656a72607a33f43decf68e86e7ad7bdfe6a764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SLOAD PUSH11 0xA98C3650CF465BA43625F3 PUSH6 0x6A72607A33F4 RETURNDATASIZE 0xEC 0xF6 DUP15 DUP7 0xE7 0xAD PUSH28 0xDFE6A764736F6C634300080400330000000000000000000000000000 ","sourceMap":"57:511:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":\"KeeperBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"KeeperCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":\"KeeperCompatible\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"KeeperCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":212,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:20","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:20","statements":[{"nodeType":"YulAssignment","src":"112:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:20"},"nodeType":"YulFunctionCall","src":"137:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:20"},"nodeType":"YulFunctionCall","src":"121:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:20"},"nodeType":"YulFunctionCall","src":"196:21:20"},"nodeType":"YulExpressionStatement","src":"196:21:20"},{"nodeType":"YulVariableDeclaration","src":"226:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:20"},"nodeType":"YulFunctionCall","src":"237:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:20"},"nodeType":"YulFunctionCall","src":"293:12:20"},"nodeType":"YulExpressionStatement","src":"293:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:20"},"nodeType":"YulFunctionCall","src":"265:25:20"},"nodeType":"YulIf","src":"262:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:20"},"nodeType":"YulFunctionCall","src":"316:39:20"},"nodeType":"YulExpressionStatement","src":"316:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:20","type":""}],"src":"7:354:20"},{"body":{"nodeType":"YulBlock","src":"454:215:20","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:20"},"nodeType":"YulFunctionCall","src":"505:12:20"},"nodeType":"YulExpressionStatement","src":"505:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:20"},"nodeType":"YulFunctionCall","src":"478:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:20"},"nodeType":"YulFunctionCall","src":"474:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:20"},"nodeType":"YulFunctionCall","src":"467:35:20"},"nodeType":"YulIf","src":"464:2:20"},{"nodeType":"YulVariableDeclaration","src":"528:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:20"},"nodeType":"YulFunctionCall","src":"542:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:20","type":""}]},{"nodeType":"YulAssignment","src":"564:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:20"},"nodeType":"YulFunctionCall","src":"632:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:20"},"nodeType":"YulFunctionCall","src":"573:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:20","type":""}],"src":"381:288:20"},{"body":{"nodeType":"YulBlock","src":"789:538:20","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:20"},"nodeType":"YulFunctionCall","src":"837:12:20"},"nodeType":"YulExpressionStatement","src":"837:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:20"},"nodeType":"YulFunctionCall","src":"806:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:20"},"nodeType":"YulFunctionCall","src":"802:32:20"},"nodeType":"YulIf","src":"799:2:20"},{"nodeType":"YulBlock","src":"861:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:20"},"nodeType":"YulFunctionCall","src":"896:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:20"},"nodeType":"YulFunctionCall","src":"890:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:20"},"nodeType":"YulFunctionCall","src":"963:12:20"},"nodeType":"YulExpressionStatement","src":"963:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:20"},"nodeType":"YulFunctionCall","src":"930:30:20"},"nodeType":"YulIf","src":"927:2:20"},{"nodeType":"YulAssignment","src":"991:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:20"},"nodeType":"YulFunctionCall","src":"1043:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:20"},"nodeType":"YulFunctionCall","src":"1001:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:20"}]}]},{"nodeType":"YulBlock","src":"1095:225:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:20"},"nodeType":"YulFunctionCall","src":"1130:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:20"},"nodeType":"YulFunctionCall","src":"1124:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:20"},"nodeType":"YulFunctionCall","src":"1198:12:20"},"nodeType":"YulExpressionStatement","src":"1198:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:20"},"nodeType":"YulFunctionCall","src":"1165:30:20"},"nodeType":"YulIf","src":"1162:2:20"},{"nodeType":"YulAssignment","src":"1226:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:20"},"nodeType":"YulFunctionCall","src":"1278:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:20"},"nodeType":"YulFunctionCall","src":"1236:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:20","type":""}],"src":"675:652:20"},{"body":{"nodeType":"YulBlock","src":"1374:88:20","statements":[{"nodeType":"YulAssignment","src":"1384:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:20"},"nodeType":"YulFunctionCall","src":"1394:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:20"},"nodeType":"YulFunctionCall","src":"1423:33:20"},"nodeType":"YulExpressionStatement","src":"1423:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:20","type":""}],"src":"1333:129:20"},{"body":{"nodeType":"YulBlock","src":"1508:35:20","statements":[{"nodeType":"YulAssignment","src":"1518:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:20"},"nodeType":"YulFunctionCall","src":"1528:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:20","type":""}],"src":"1468:75:20"},{"body":{"nodeType":"YulBlock","src":"1616:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:20"},"nodeType":"YulFunctionCall","src":"1723:18:20"},"nodeType":"YulExpressionStatement","src":"1723:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:20"},"nodeType":"YulFunctionCall","src":"1690:30:20"},"nodeType":"YulIf","src":"1687:2:20"},{"nodeType":"YulAssignment","src":"1753:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:20"},"nodeType":"YulFunctionCall","src":"1761:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:20"}]},{"nodeType":"YulAssignment","src":"1827:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:20"},"nodeType":"YulFunctionCall","src":"1835:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:20","type":""}],"src":"1549:308:20"},{"body":{"nodeType":"YulBlock","src":"1912:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:20"},"nodeType":"YulFunctionCall","src":"2012:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:20"},"nodeType":"YulFunctionCall","src":"2031:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:20"},"nodeType":"YulFunctionCall","src":"2025:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:20"},"nodeType":"YulFunctionCall","src":"2005:39:20"},"nodeType":"YulExpressionStatement","src":"2005:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:20"},"nodeType":"YulFunctionCall","src":"1949:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:20","statements":[{"nodeType":"YulAssignment","src":"1965:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:20"},"nodeType":"YulFunctionCall","src":"1970:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:20","statements":[]},"src":"1941:113:20"},{"body":{"nodeType":"YulBlock","src":"2088:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:20"},"nodeType":"YulFunctionCall","src":"2134:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:20"},"nodeType":"YulFunctionCall","src":"2127:27:20"},"nodeType":"YulExpressionStatement","src":"2127:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:20"},"nodeType":"YulFunctionCall","src":"2066:13:20"},"nodeType":"YulIf","src":"2063:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:20","type":""}],"src":"1863:307:20"},{"body":{"nodeType":"YulBlock","src":"2227:269:20","statements":[{"nodeType":"YulAssignment","src":"2237:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:20"},"nodeType":"YulFunctionCall","src":"2247:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:20"},"nodeType":"YulFunctionCall","src":"2294:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:20","statements":[{"nodeType":"YulAssignment","src":"2359:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:20"},"nodeType":"YulFunctionCall","src":"2369:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:20"},"nodeType":"YulFunctionCall","src":"2318:26:20"},"nodeType":"YulIf","src":"2315:2:20"},{"body":{"nodeType":"YulBlock","src":"2448:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:20"},"nodeType":"YulFunctionCall","src":"2462:18:20"},"nodeType":"YulExpressionStatement","src":"2462:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:20"},"nodeType":"YulFunctionCall","src":"2432:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:20"},"nodeType":"YulFunctionCall","src":"2409:38:20"},"nodeType":"YulIf","src":"2406:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:20","type":""}],"src":"2176:320:20"},{"body":{"nodeType":"YulBlock","src":"2545:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:20"},"nodeType":"YulFunctionCall","src":"2585:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:20"},"nodeType":"YulFunctionCall","src":"2573:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:20"},"nodeType":"YulFunctionCall","src":"2726:18:20"},"nodeType":"YulExpressionStatement","src":"2726:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:20"},"nodeType":"YulFunctionCall","src":"2664:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:20"},"nodeType":"YulFunctionCall","src":"2700:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:20"},"nodeType":"YulFunctionCall","src":"2661:62:20"},"nodeType":"YulIf","src":"2658:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:20"},"nodeType":"YulFunctionCall","src":"2755:22:20"},"nodeType":"YulExpressionStatement","src":"2755:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:20","type":""}],"src":"2502:281:20"},{"body":{"nodeType":"YulBlock","src":"2817:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:20"},"nodeType":"YulFunctionCall","src":"2827:88:20"},"nodeType":"YulExpressionStatement","src":"2827:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:20"},"nodeType":"YulFunctionCall","src":"2924:15:20"},"nodeType":"YulExpressionStatement","src":"2924:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:20"},"nodeType":"YulFunctionCall","src":"2948:15:20"},"nodeType":"YulExpressionStatement","src":"2948:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:20"},{"body":{"nodeType":"YulBlock","src":"3003:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:20"},"nodeType":"YulFunctionCall","src":"3013:88:20"},"nodeType":"YulExpressionStatement","src":"3013:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:20"},"nodeType":"YulFunctionCall","src":"3110:15:20"},"nodeType":"YulExpressionStatement","src":"3110:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:20"},"nodeType":"YulFunctionCall","src":"3134:15:20"},"nodeType":"YulExpressionStatement","src":"3134:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:20"},{"body":{"nodeType":"YulBlock","src":"3209:54:20","statements":[{"nodeType":"YulAssignment","src":"3219:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:20"},"nodeType":"YulFunctionCall","src":"3233:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:20"},"nodeType":"YulFunctionCall","src":"3249:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:20"},"nodeType":"YulFunctionCall","src":"3229:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:20","type":""}],"src":"3161:102:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620024f5380380620024f5833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61216f80620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611625565b6102bc565b6040516100fb9190611936565b60405180910390f35b61010c61039e565b6040516101199190611951565b60405180910390f35b61013c60048036038101906101379190611677565b610430565b60405161014991906118cf565b60405180910390f35b61016c600480360381019061016791906115e9565b610476565b005b610188600480360381019061018391906114e3565b61058e565b005b6101a4600480360381019061019f91906114e3565b6105ee565b005b6101c060048036038101906101bb9190611677565b61060e565b6040516101cd91906118cf565b60405180910390f35b6101f060048036038101906101eb919061147e565b6106c0565b6040516101fd9190611a93565b60405180910390f35b61020e610778565b60405161021b9190611951565b60405180910390f35b61023e600480360381019061023991906115ad565b61080a565b005b61025a60048036038101906102559190611532565b610820565b005b61027660048036038101906102719190611677565b610882565b6040516102839190611951565b60405180910390f35b6102a660048036038101906102a191906114a7565b6108ea565b6040516102b39190611936565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611cb8565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611a53565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a13565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a73565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611a33565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906119f3565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611cb8565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611a73565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d29291906118ab565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f18161117d565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611a33565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906119b3565b60405180910390fd5b610c7a8383836111e9565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611bce565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611b47565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111ee565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e56906119d3565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611936565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111f3565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611973565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611178565b600082905060005b6000821461104a57808061103390611d1b565b915050600a826110439190611b9d565b9150611020565b60008167ffffffffffffffff81111561108c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110be5781602001600182028036833780820191505090505b5090505b60008514611171576001826110d79190611bce565b9150600a856110e69190611d64565b60306110f29190611b47565b60f81b81838151811061112e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561116a9190611b9d565b94506110c2565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006112148473ffffffffffffffffffffffffffffffffffffffff1661138a565b1561137d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261123d610a33565b8786866040518563ffffffff1660e01b815260040161125f94939291906118ea565b602060405180830381600087803b15801561127957600080fd5b505af19250505080156112aa57506040513d601f19601f820116820180604052508101906112a7919061164e565b60015b61132d573d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50600081511415611325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131c90611973565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611382565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006113c06113bb84611ad3565b611aae565b9050828152602081018484840111156113d857600080fd5b6113e3848285611c76565b509392505050565b6000813590506113fa816120dd565b92915050565b60008135905061140f816120f4565b92915050565b6000813590506114248161210b565b92915050565b6000815190506114398161210b565b92915050565b600082601f83011261145057600080fd5b81356114608482602086016113ad565b91505092915050565b60008135905061147881612122565b92915050565b60006020828403121561149057600080fd5b600061149e848285016113eb565b91505092915050565b600080604083850312156114ba57600080fd5b60006114c8858286016113eb565b92505060206114d9858286016113eb565b9150509250929050565b6000806000606084860312156114f857600080fd5b6000611506868287016113eb565b9350506020611517868287016113eb565b925050604061152886828701611469565b9150509250925092565b6000806000806080858703121561154857600080fd5b6000611556878288016113eb565b9450506020611567878288016113eb565b935050604061157887828801611469565b925050606085013567ffffffffffffffff81111561159557600080fd5b6115a18782880161143f565b91505092959194509250565b600080604083850312156115c057600080fd5b60006115ce858286016113eb565b92505060206115df85828601611400565b9150509250929050565b600080604083850312156115fc57600080fd5b600061160a858286016113eb565b925050602061161b85828601611469565b9150509250929050565b60006020828403121561163757600080fd5b600061164584828501611415565b91505092915050565b60006020828403121561166057600080fd5b600061166e8482850161142a565b91505092915050565b60006020828403121561168957600080fd5b600061169784828501611469565b91505092915050565b6116a981611c02565b82525050565b6116b881611c14565b82525050565b60006116c982611b04565b6116d38185611b1a565b93506116e3818560208601611c85565b6116ec81611e51565b840191505092915050565b600061170282611b0f565b61170c8185611b2b565b935061171c818560208601611c85565b61172581611e51565b840191505092915050565b600061173b82611b0f565b6117458185611b3c565b9350611755818560208601611c85565b80840191505092915050565b600061176e603283611b2b565b915061177982611e62565b604082019050919050565b6000611791602583611b2b565b915061179c82611eb1565b604082019050919050565b60006117b4602483611b2b565b91506117bf82611f00565b604082019050919050565b60006117d7601983611b2b565b91506117e282611f4f565b602082019050919050565b60006117fa602983611b2b565b915061180582611f78565b604082019050919050565b600061181d603e83611b2b565b915061182882611fc7565b604082019050919050565b6000611840601883611b2b565b915061184b82612016565b602082019050919050565b6000611863602183611b2b565b915061186e8261203f565b604082019050919050565b6000611886602e83611b2b565b91506118918261208e565b604082019050919050565b6118a581611c6c565b82525050565b60006118b78285611730565b91506118c38284611730565b91508190509392505050565b60006020820190506118e460008301846116a0565b92915050565b60006080820190506118ff60008301876116a0565b61190c60208301866116a0565b611919604083018561189c565b818103606083015261192b81846116be565b905095945050505050565b600060208201905061194b60008301846116af565b92915050565b6000602082019050818103600083015261196b81846116f7565b905092915050565b6000602082019050818103600083015261198c81611761565b9050919050565b600060208201905081810360008301526119ac81611784565b9050919050565b600060208201905081810360008301526119cc816117a7565b9050919050565b600060208201905081810360008301526119ec816117ca565b9050919050565b60006020820190508181036000830152611a0c816117ed565b9050919050565b60006020820190508181036000830152611a2c81611810565b9050919050565b60006020820190508181036000830152611a4c81611833565b9050919050565b60006020820190508181036000830152611a6c81611856565b9050919050565b60006020820190508181036000830152611a8c81611879565b9050919050565b6000602082019050611aa8600083018461189c565b92915050565b6000611ab8611ac9565b9050611ac48282611cea565b919050565b6000604051905090565b600067ffffffffffffffff821115611aee57611aed611e22565b5b611af782611e51565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b5282611c6c565b9150611b5d83611c6c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b9257611b91611d95565b5b828201905092915050565b6000611ba882611c6c565b9150611bb383611c6c565b925082611bc357611bc2611dc4565b5b828204905092915050565b6000611bd982611c6c565b9150611be483611c6c565b925082821015611bf757611bf6611d95565b5b828203905092915050565b6000611c0d82611c4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ca3578082015181840152602081019050611c88565b83811115611cb2576000848401525b50505050565b60006002820490506001821680611cd057607f821691505b60208210811415611ce457611ce3611df3565b5b50919050565b611cf382611e51565b810181811067ffffffffffffffff82111715611d1257611d11611e22565b5b80604052505050565b6000611d2682611c6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d5957611d58611d95565b5b600182019050919050565b6000611d6f82611c6c565b9150611d7a83611c6c565b925082611d8a57611d89611dc4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6120e681611c02565b81146120f157600080fd5b50565b6120fd81611c14565b811461210857600080fd5b50565b61211481611c20565b811461211f57600080fd5b50565b61212b81611c6c565b811461213657600080fd5b5056fea2646970667358221220db9d3f8c937313de0fca2b6f27913452c61faf6c42edbc7896d362c37024134664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24F5 CODESIZE SUB DUP1 PUSH3 0x24F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216F DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x117D JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1171 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x112E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP5 POP PUSH2 0x10C2 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x138A JUMP JUMPDEST ISZERO PUSH2 0x137D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x123D PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12AA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x132D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C0 PUSH2 0x13BB DUP5 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x20DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1478 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D9 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1517 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1528 DUP7 DUP3 DUP8 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1567 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1578 DUP8 DUP3 DUP9 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A1 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DF DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x161B DUP6 DUP3 DUP7 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1645 DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x142A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP5 DUP3 DUP6 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A9 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C9 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x16D3 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x16E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x1745 DUP2 DUP6 PUSH2 0x1B3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1755 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176E PUSH1 0x32 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1779 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1791 PUSH1 0x25 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x179C DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x24 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 PUSH1 0x19 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FA PUSH1 0x29 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D PUSH1 0x3E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1828 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 PUSH1 0x18 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH1 0x21 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1886 PUSH1 0x2E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196B DUP2 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AC DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19EC DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2C DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4C DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6C DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 PUSH2 0x1AC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC4 DUP3 DUP3 PUSH2 0x1CEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF7 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP3 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x1DF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7A DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D8A JUMPI PUSH2 0x1D89 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20E6 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2114 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x212B DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP14 EXTCODEHASH DUP13 SWAP4 PUSH20 0x13DE0FCA2B6F27913452C61FAF6C42EDBC7896D3 PUSH3 0xC37024 SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"628:13718:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:20:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;628:13718:6:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23179:20","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:20","statements":[{"nodeType":"YulAssignment","src":"100:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:20"},"nodeType":"YulFunctionCall","src":"125:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:20"},"nodeType":"YulFunctionCall","src":"109:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:20"},"nodeType":"YulFunctionCall","src":"183:21:20"},"nodeType":"YulExpressionStatement","src":"183:21:20"},{"nodeType":"YulVariableDeclaration","src":"213:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:20"},"nodeType":"YulFunctionCall","src":"224:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:20"},"nodeType":"YulFunctionCall","src":"280:12:20"},"nodeType":"YulExpressionStatement","src":"280:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:20"},"nodeType":"YulFunctionCall","src":"255:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:20"},"nodeType":"YulFunctionCall","src":"252:25:20"},"nodeType":"YulIf","src":"249:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:20"},"nodeType":"YulFunctionCall","src":"303:41:20"},"nodeType":"YulExpressionStatement","src":"303:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:20","type":""}],"src":"7:343:20"},{"body":{"nodeType":"YulBlock","src":"408:87:20","statements":[{"nodeType":"YulAssignment","src":"418:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"440:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:20"},"nodeType":"YulFunctionCall","src":"427:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"418:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"456:26:20"},"nodeType":"YulFunctionCall","src":"456:33:20"},"nodeType":"YulExpressionStatement","src":"456:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"386:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"394:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"402:5:20","type":""}],"src":"356:139:20"},{"body":{"nodeType":"YulBlock","src":"550:84:20","statements":[{"nodeType":"YulAssignment","src":"560:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"582:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"569:12:20"},"nodeType":"YulFunctionCall","src":"569:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"598:23:20"},"nodeType":"YulFunctionCall","src":"598:30:20"},"nodeType":"YulExpressionStatement","src":"598:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"528:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"536:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"544:5:20","type":""}],"src":"501:133:20"},{"body":{"nodeType":"YulBlock","src":"691:86:20","statements":[{"nodeType":"YulAssignment","src":"701:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"723:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"710:12:20"},"nodeType":"YulFunctionCall","src":"710:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"765:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"739:25:20"},"nodeType":"YulFunctionCall","src":"739:32:20"},"nodeType":"YulExpressionStatement","src":"739:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"669:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"677:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"685:5:20","type":""}],"src":"640:137:20"},{"body":{"nodeType":"YulBlock","src":"845:79:20","statements":[{"nodeType":"YulAssignment","src":"855:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"870:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"864:5:20"},"nodeType":"YulFunctionCall","src":"864:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"855:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"886:25:20"},"nodeType":"YulFunctionCall","src":"886:32:20"},"nodeType":"YulExpressionStatement","src":"886:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"823:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"831:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"839:5:20","type":""}],"src":"783:141:20"},{"body":{"nodeType":"YulBlock","src":"1004:210:20","statements":[{"body":{"nodeType":"YulBlock","src":"1053:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1062:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1055:6:20"},"nodeType":"YulFunctionCall","src":"1055:12:20"},"nodeType":"YulExpressionStatement","src":"1055:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1032:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1040:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:20"},"nodeType":"YulFunctionCall","src":"1028:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1047:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1024:3:20"},"nodeType":"YulFunctionCall","src":"1024:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1017:6:20"},"nodeType":"YulFunctionCall","src":"1017:35:20"},"nodeType":"YulIf","src":"1014:2:20"},{"nodeType":"YulVariableDeclaration","src":"1078:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1105:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:20"},"nodeType":"YulFunctionCall","src":"1092:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1082:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1121:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1181:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1189:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1177:3:20"},"nodeType":"YulFunctionCall","src":"1177:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"1196:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"1204:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1130:46:20"},"nodeType":"YulFunctionCall","src":"1130:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1121:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"982:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"990:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"998:5:20","type":""}],"src":"943:271:20"},{"body":{"nodeType":"YulBlock","src":"1272:87:20","statements":[{"nodeType":"YulAssignment","src":"1282:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1304:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1291:12:20"},"nodeType":"YulFunctionCall","src":"1291:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1347:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1320:26:20"},"nodeType":"YulFunctionCall","src":"1320:33:20"},"nodeType":"YulExpressionStatement","src":"1320:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1250:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1258:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1266:5:20","type":""}],"src":"1220:139:20"},{"body":{"nodeType":"YulBlock","src":"1431:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"1477:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1489:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1479:6:20"},"nodeType":"YulFunctionCall","src":"1479:12:20"},"nodeType":"YulExpressionStatement","src":"1479:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1461:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1448:3:20"},"nodeType":"YulFunctionCall","src":"1448:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1473:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1444:3:20"},"nodeType":"YulFunctionCall","src":"1444:32:20"},"nodeType":"YulIf","src":"1441:2:20"},{"nodeType":"YulBlock","src":"1503:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1522:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1547:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1593:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:20"},"nodeType":"YulFunctionCall","src":"1578:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1602:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1557:20:20"},"nodeType":"YulFunctionCall","src":"1557:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1547:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1401:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1412:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1424:6:20","type":""}],"src":"1365:262:20"},{"body":{"nodeType":"YulBlock","src":"1716:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:20"},"nodeType":"YulFunctionCall","src":"1764:12:20"},"nodeType":"YulExpressionStatement","src":"1764:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1737:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1733:3:20"},"nodeType":"YulFunctionCall","src":"1733:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1758:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1729:3:20"},"nodeType":"YulFunctionCall","src":"1729:32:20"},"nodeType":"YulIf","src":"1726:2:20"},{"nodeType":"YulBlock","src":"1788:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1803:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1817:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1807:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1832:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:20"},"nodeType":"YulFunctionCall","src":"1863:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1842:20:20"},"nodeType":"YulFunctionCall","src":"1842:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1832:6:20"}]}]},{"nodeType":"YulBlock","src":"1915:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1930:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1944:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1934:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1960:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2006:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:20"},"nodeType":"YulFunctionCall","src":"1991:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2015:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1970:20:20"},"nodeType":"YulFunctionCall","src":"1970:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1960:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1678:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1689:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1701:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1709:6:20","type":""}],"src":"1633:407:20"},{"body":{"nodeType":"YulBlock","src":"2146:452:20","statements":[{"body":{"nodeType":"YulBlock","src":"2192:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2204:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2194:6:20"},"nodeType":"YulFunctionCall","src":"2194:12:20"},"nodeType":"YulExpressionStatement","src":"2194:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2167:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2163:3:20"},"nodeType":"YulFunctionCall","src":"2163:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2159:3:20"},"nodeType":"YulFunctionCall","src":"2159:32:20"},"nodeType":"YulIf","src":"2156:2:20"},{"nodeType":"YulBlock","src":"2218:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2233:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2247:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2262:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:20"},"nodeType":"YulFunctionCall","src":"2293:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2272:20:20"},"nodeType":"YulFunctionCall","src":"2272:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:20"}]}]},{"nodeType":"YulBlock","src":"2345:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2390:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2436:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:20"},"nodeType":"YulFunctionCall","src":"2421:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2445:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2400:20:20"},"nodeType":"YulFunctionCall","src":"2400:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2390:6:20"}]}]},{"nodeType":"YulBlock","src":"2473:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2488:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2502:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2492:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2518:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2553:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2564:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:20"},"nodeType":"YulFunctionCall","src":"2549:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2573:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2528:20:20"},"nodeType":"YulFunctionCall","src":"2528:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2518:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2100:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2111:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2123:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2131:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2139:6:20","type":""}],"src":"2046:552:20"},{"body":{"nodeType":"YulBlock","src":"2730:683:20","statements":[{"body":{"nodeType":"YulBlock","src":"2777:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2786:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2789:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2779:6:20"},"nodeType":"YulFunctionCall","src":"2779:12:20"},"nodeType":"YulExpressionStatement","src":"2779:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2751:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2747:3:20"},"nodeType":"YulFunctionCall","src":"2747:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2772:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2743:3:20"},"nodeType":"YulFunctionCall","src":"2743:33:20"},"nodeType":"YulIf","src":"2740:2:20"},{"nodeType":"YulBlock","src":"2803:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2822:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2847:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2893:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:20"},"nodeType":"YulFunctionCall","src":"2878:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2902:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2857:20:20"},"nodeType":"YulFunctionCall","src":"2857:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2847:6:20"}]}]},{"nodeType":"YulBlock","src":"2930:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2975:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:20"},"nodeType":"YulFunctionCall","src":"3006:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2985:20:20"},"nodeType":"YulFunctionCall","src":"2985:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2975:6:20"}]}]},{"nodeType":"YulBlock","src":"3058:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3103:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3138:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:20"},"nodeType":"YulFunctionCall","src":"3134:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3158:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3113:20:20"},"nodeType":"YulFunctionCall","src":"3113:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3103:6:20"}]}]},{"nodeType":"YulBlock","src":"3186:220:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3201:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:20"},"nodeType":"YulFunctionCall","src":"3228:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3215:12:20"},"nodeType":"YulFunctionCall","src":"3215:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3205:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3294:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3306:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3296:6:20"},"nodeType":"YulFunctionCall","src":"3296:12:20"},"nodeType":"YulExpressionStatement","src":"3296:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3266:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3274:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3263:2:20"},"nodeType":"YulFunctionCall","src":"3263:30:20"},"nodeType":"YulIf","src":"3260:2:20"},{"nodeType":"YulAssignment","src":"3324:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3379:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:20"},"nodeType":"YulFunctionCall","src":"3364:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3334:29:20"},"nodeType":"YulFunctionCall","src":"3334:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3324:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2676:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2687:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2699:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2707:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2715:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2723:6:20","type":""}],"src":"2604:809:20"},{"body":{"nodeType":"YulBlock","src":"3499:321:20","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:20"},"nodeType":"YulFunctionCall","src":"3547:12:20"},"nodeType":"YulExpressionStatement","src":"3547:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3529:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3516:3:20"},"nodeType":"YulFunctionCall","src":"3516:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3512:3:20"},"nodeType":"YulFunctionCall","src":"3512:32:20"},"nodeType":"YulIf","src":"3509:2:20"},{"nodeType":"YulBlock","src":"3571:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3600:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3590:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3615:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3650:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3661:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:20"},"nodeType":"YulFunctionCall","src":"3646:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3670:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3625:20:20"},"nodeType":"YulFunctionCall","src":"3625:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3615:6:20"}]}]},{"nodeType":"YulBlock","src":"3698:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3713:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3727:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3717:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3743:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3775:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3786:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3771:3:20"},"nodeType":"YulFunctionCall","src":"3771:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3795:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3753:17:20"},"nodeType":"YulFunctionCall","src":"3753:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3743:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3461:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3472:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3484:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3492:6:20","type":""}],"src":"3419:401:20"},{"body":{"nodeType":"YulBlock","src":"3909:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"3955:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3964:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3967:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3957:6:20"},"nodeType":"YulFunctionCall","src":"3957:12:20"},"nodeType":"YulExpressionStatement","src":"3957:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:20"},"nodeType":"YulFunctionCall","src":"3926:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:20"},"nodeType":"YulFunctionCall","src":"3922:32:20"},"nodeType":"YulIf","src":"3919:2:20"},{"nodeType":"YulBlock","src":"3981:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3996:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4010:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4000:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4025:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4071:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:20"},"nodeType":"YulFunctionCall","src":"4056:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4080:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4035:20:20"},"nodeType":"YulFunctionCall","src":"4035:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4025:6:20"}]}]},{"nodeType":"YulBlock","src":"4108:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4123:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4137:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4127:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4153:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4184:3:20"},"nodeType":"YulFunctionCall","src":"4184:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4208:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4163:20:20"},"nodeType":"YulFunctionCall","src":"4163:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4153:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3871:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3882:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3894:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3902:6:20","type":""}],"src":"3826:407:20"},{"body":{"nodeType":"YulBlock","src":"4304:195:20","statements":[{"body":{"nodeType":"YulBlock","src":"4350:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4362:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:20"},"nodeType":"YulFunctionCall","src":"4352:12:20"},"nodeType":"YulExpressionStatement","src":"4352:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:20"},"nodeType":"YulFunctionCall","src":"4321:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:20"},"nodeType":"YulFunctionCall","src":"4317:32:20"},"nodeType":"YulIf","src":"4314:2:20"},{"nodeType":"YulBlock","src":"4376:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4405:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4420:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4465:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:20"},"nodeType":"YulFunctionCall","src":"4450:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4474:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4430:19:20"},"nodeType":"YulFunctionCall","src":"4430:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4420:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4274:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4285:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4297:6:20","type":""}],"src":"4239:260:20"},{"body":{"nodeType":"YulBlock","src":"4581:206:20","statements":[{"body":{"nodeType":"YulBlock","src":"4627:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:20"},"nodeType":"YulFunctionCall","src":"4629:12:20"},"nodeType":"YulExpressionStatement","src":"4629:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4602:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4598:3:20"},"nodeType":"YulFunctionCall","src":"4598:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4594:3:20"},"nodeType":"YulFunctionCall","src":"4594:32:20"},"nodeType":"YulIf","src":"4591:2:20"},{"nodeType":"YulBlock","src":"4653:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4668:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4682:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4672:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4697:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4742:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4753:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:20"},"nodeType":"YulFunctionCall","src":"4738:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4762:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"4707:30:20"},"nodeType":"YulFunctionCall","src":"4707:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4697:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4551:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4562:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4574:6:20","type":""}],"src":"4505:282:20"},{"body":{"nodeType":"YulBlock","src":"4859:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"4905:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4914:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4917:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4907:6:20"},"nodeType":"YulFunctionCall","src":"4907:12:20"},"nodeType":"YulExpressionStatement","src":"4907:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4880:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4876:3:20"},"nodeType":"YulFunctionCall","src":"4876:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4872:3:20"},"nodeType":"YulFunctionCall","src":"4872:32:20"},"nodeType":"YulIf","src":"4869:2:20"},{"nodeType":"YulBlock","src":"4931:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4946:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4960:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4950:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4975:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5021:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:20"},"nodeType":"YulFunctionCall","src":"5006:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5030:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4985:20:20"},"nodeType":"YulFunctionCall","src":"4985:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4975:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4829:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4840:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4852:6:20","type":""}],"src":"4793:262:20"},{"body":{"nodeType":"YulBlock","src":"5126:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5143:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5166:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5148:17:20"},"nodeType":"YulFunctionCall","src":"5148:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5136:6:20"},"nodeType":"YulFunctionCall","src":"5136:37:20"},"nodeType":"YulExpressionStatement","src":"5136:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5114:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5121:3:20","type":""}],"src":"5061:118:20"},{"body":{"nodeType":"YulBlock","src":"5244:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5261:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5266:14:20"},"nodeType":"YulFunctionCall","src":"5266:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:20"},"nodeType":"YulFunctionCall","src":"5254:34:20"},"nodeType":"YulExpressionStatement","src":"5254:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5232:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5239:3:20","type":""}],"src":"5185:109:20"},{"body":{"nodeType":"YulBlock","src":"5390:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5400:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5446:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5414:31:20"},"nodeType":"YulFunctionCall","src":"5414:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5404:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5461:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5526:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5531:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5468:57:20"},"nodeType":"YulFunctionCall","src":"5468:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5461:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5580:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:20"},"nodeType":"YulFunctionCall","src":"5569:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5587:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5592:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5547:21:20"},"nodeType":"YulFunctionCall","src":"5547:52:20"},"nodeType":"YulExpressionStatement","src":"5547:52:20"},{"nodeType":"YulAssignment","src":"5608:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5619:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5646:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5624:21:20"},"nodeType":"YulFunctionCall","src":"5624:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:20"},"nodeType":"YulFunctionCall","src":"5615:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5608:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5371:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5378:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5386:3:20","type":""}],"src":"5300:360:20"},{"body":{"nodeType":"YulBlock","src":"5758:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5768:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5815:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5782:32:20"},"nodeType":"YulFunctionCall","src":"5782:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5772:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5830:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5896:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5901:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5837:58:20"},"nodeType":"YulFunctionCall","src":"5837:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5830:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5943:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5939:3:20"},"nodeType":"YulFunctionCall","src":"5939:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5957:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5962:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5917:21:20"},"nodeType":"YulFunctionCall","src":"5917:52:20"},"nodeType":"YulExpressionStatement","src":"5917:52:20"},{"nodeType":"YulAssignment","src":"5978:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5989:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6016:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5994:21:20"},"nodeType":"YulFunctionCall","src":"5994:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:20"},"nodeType":"YulFunctionCall","src":"5985:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5978:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5739:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5746:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5754:3:20","type":""}],"src":"5666:364:20"},{"body":{"nodeType":"YulBlock","src":"6146:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6156:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6203:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6170:32:20"},"nodeType":"YulFunctionCall","src":"6170:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6160:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6218:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6307:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6225:76:20"},"nodeType":"YulFunctionCall","src":"6225:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6349:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6356:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:20"},"nodeType":"YulFunctionCall","src":"6345:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"6363:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6368:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6323:21:20"},"nodeType":"YulFunctionCall","src":"6323:52:20"},"nodeType":"YulExpressionStatement","src":"6323:52:20"},{"nodeType":"YulAssignment","src":"6384:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6395:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6400:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:20"},"nodeType":"YulFunctionCall","src":"6391:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6384:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6127:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6134:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6142:3:20","type":""}],"src":"6036:377:20"},{"body":{"nodeType":"YulBlock","src":"6565:220:20","statements":[{"nodeType":"YulAssignment","src":"6575:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6641:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6582:58:20"},"nodeType":"YulFunctionCall","src":"6582:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6575:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6747:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"6658:88:20"},"nodeType":"YulFunctionCall","src":"6658:93:20"},"nodeType":"YulExpressionStatement","src":"6658:93:20"},{"nodeType":"YulAssignment","src":"6760:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6771:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:20"},"nodeType":"YulFunctionCall","src":"6767:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6760:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6553:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6561:3:20","type":""}],"src":"6419:366:20"},{"body":{"nodeType":"YulBlock","src":"6937:220:20","statements":[{"nodeType":"YulAssignment","src":"6947:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7013:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7018:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6954:58:20"},"nodeType":"YulFunctionCall","src":"6954:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6947:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7119:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7030:88:20"},"nodeType":"YulFunctionCall","src":"7030:93:20"},"nodeType":"YulExpressionStatement","src":"7030:93:20"},{"nodeType":"YulAssignment","src":"7132:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7143:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:20"},"nodeType":"YulFunctionCall","src":"7139:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7132:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6925:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6933:3:20","type":""}],"src":"6791:366:20"},{"body":{"nodeType":"YulBlock","src":"7309:220:20","statements":[{"nodeType":"YulAssignment","src":"7319:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7385:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7326:58:20"},"nodeType":"YulFunctionCall","src":"7326:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7319:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"7402:88:20"},"nodeType":"YulFunctionCall","src":"7402:93:20"},"nodeType":"YulExpressionStatement","src":"7402:93:20"},{"nodeType":"YulAssignment","src":"7504:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7515:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7520:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7511:3:20"},"nodeType":"YulFunctionCall","src":"7511:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7504:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7297:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:20","type":""}],"src":"7163:366:20"},{"body":{"nodeType":"YulBlock","src":"7681:220:20","statements":[{"nodeType":"YulAssignment","src":"7691:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7757:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7762:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7698:58:20"},"nodeType":"YulFunctionCall","src":"7698:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7691:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7863:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"7774:88:20"},"nodeType":"YulFunctionCall","src":"7774:93:20"},"nodeType":"YulExpressionStatement","src":"7774:93:20"},{"nodeType":"YulAssignment","src":"7876:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:20"},"nodeType":"YulFunctionCall","src":"7883:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7876:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7669:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7677:3:20","type":""}],"src":"7535:366:20"},{"body":{"nodeType":"YulBlock","src":"8053:220:20","statements":[{"nodeType":"YulAssignment","src":"8063:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8129:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8070:58:20"},"nodeType":"YulFunctionCall","src":"8070:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8063:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8235:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"8146:88:20"},"nodeType":"YulFunctionCall","src":"8146:93:20"},"nodeType":"YulExpressionStatement","src":"8146:93:20"},{"nodeType":"YulAssignment","src":"8248:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8259:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8264:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:20"},"nodeType":"YulFunctionCall","src":"8255:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8248:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8041:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8049:3:20","type":""}],"src":"7907:366:20"},{"body":{"nodeType":"YulBlock","src":"8425:220:20","statements":[{"nodeType":"YulAssignment","src":"8435:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8501:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8442:58:20"},"nodeType":"YulFunctionCall","src":"8442:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8435:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8607:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"8518:88:20"},"nodeType":"YulFunctionCall","src":"8518:93:20"},"nodeType":"YulExpressionStatement","src":"8518:93:20"},{"nodeType":"YulAssignment","src":"8620:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8631:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:20"},"nodeType":"YulFunctionCall","src":"8627:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8620:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8413:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8421:3:20","type":""}],"src":"8279:366:20"},{"body":{"nodeType":"YulBlock","src":"8797:220:20","statements":[{"nodeType":"YulAssignment","src":"8807:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8878:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8814:58:20"},"nodeType":"YulFunctionCall","src":"8814:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8979:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"8890:88:20"},"nodeType":"YulFunctionCall","src":"8890:93:20"},"nodeType":"YulExpressionStatement","src":"8890:93:20"},{"nodeType":"YulAssignment","src":"8992:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:20"},"nodeType":"YulFunctionCall","src":"8999:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8992:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8785:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8793:3:20","type":""}],"src":"8651:366:20"},{"body":{"nodeType":"YulBlock","src":"9169:220:20","statements":[{"nodeType":"YulAssignment","src":"9179:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9245:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9250:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9186:58:20"},"nodeType":"YulFunctionCall","src":"9186:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9179:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9351:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"9262:88:20"},"nodeType":"YulFunctionCall","src":"9262:93:20"},"nodeType":"YulExpressionStatement","src":"9262:93:20"},{"nodeType":"YulAssignment","src":"9364:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9380:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:20"},"nodeType":"YulFunctionCall","src":"9371:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9364:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9157:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9165:3:20","type":""}],"src":"9023:366:20"},{"body":{"nodeType":"YulBlock","src":"9541:220:20","statements":[{"nodeType":"YulAssignment","src":"9551:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9617:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9622:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9558:58:20"},"nodeType":"YulFunctionCall","src":"9558:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9551:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9723:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"9634:88:20"},"nodeType":"YulFunctionCall","src":"9634:93:20"},"nodeType":"YulExpressionStatement","src":"9634:93:20"},{"nodeType":"YulAssignment","src":"9736:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:20"},"nodeType":"YulFunctionCall","src":"9743:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9736:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9529:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9537:3:20","type":""}],"src":"9395:366:20"},{"body":{"nodeType":"YulBlock","src":"9832:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9849:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9872:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9854:17:20"},"nodeType":"YulFunctionCall","src":"9854:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:20"},"nodeType":"YulFunctionCall","src":"9842:37:20"},"nodeType":"YulExpressionStatement","src":"9842:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9827:3:20","type":""}],"src":"9767:118:20"},{"body":{"nodeType":"YulBlock","src":"10075:251:20","statements":[{"nodeType":"YulAssignment","src":"10086:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10175:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10184:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10093:81:20"},"nodeType":"YulFunctionCall","src":"10093:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:20"}]},{"nodeType":"YulAssignment","src":"10198:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10287:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10296:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10205:81:20"},"nodeType":"YulFunctionCall","src":"10205:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10198:3:20"}]},{"nodeType":"YulAssignment","src":"10310:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"10317:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10310:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10046:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10052:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10071:3:20","type":""}],"src":"9891:435:20"},{"body":{"nodeType":"YulBlock","src":"10430:124:20","statements":[{"nodeType":"YulAssignment","src":"10440:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10452:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10463:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10448:3:20"},"nodeType":"YulFunctionCall","src":"10448:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10440:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10520:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10544:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10529:3:20"},"nodeType":"YulFunctionCall","src":"10529:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10476:43:20"},"nodeType":"YulFunctionCall","src":"10476:71:20"},"nodeType":"YulExpressionStatement","src":"10476:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10402:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10414:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10425:4:20","type":""}],"src":"10332:222:20"},{"body":{"nodeType":"YulBlock","src":"10760:440:20","statements":[{"nodeType":"YulAssignment","src":"10770:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10793:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:20"},"nodeType":"YulFunctionCall","src":"10778:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10770:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10864:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10875:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10860:3:20"},"nodeType":"YulFunctionCall","src":"10860:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10807:43:20"},"nodeType":"YulFunctionCall","src":"10807:71:20"},"nodeType":"YulExpressionStatement","src":"10807:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10932:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:20"},"nodeType":"YulFunctionCall","src":"10941:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10888:43:20"},"nodeType":"YulFunctionCall","src":"10888:72:20"},"nodeType":"YulExpressionStatement","src":"10888:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11014:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11027:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11038:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:20"},"nodeType":"YulFunctionCall","src":"11023:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10970:43:20"},"nodeType":"YulFunctionCall","src":"10970:72:20"},"nodeType":"YulExpressionStatement","src":"10970:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11063:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11074:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:20"},"nodeType":"YulFunctionCall","src":"11059:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11083:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11089:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11079:3:20"},"nodeType":"YulFunctionCall","src":"11079:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11052:6:20"},"nodeType":"YulFunctionCall","src":"11052:48:20"},"nodeType":"YulExpressionStatement","src":"11052:48:20"},{"nodeType":"YulAssignment","src":"11109:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11179:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"11188:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11117:61:20"},"nodeType":"YulFunctionCall","src":"11117:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11109:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10708:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10720:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10728:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10736:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10744:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10755:4:20","type":""}],"src":"10560:640:20"},{"body":{"nodeType":"YulBlock","src":"11298:118:20","statements":[{"nodeType":"YulAssignment","src":"11308:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11320:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11331:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:20"},"nodeType":"YulFunctionCall","src":"11316:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11308:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11382:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11395:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11406:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11391:3:20"},"nodeType":"YulFunctionCall","src":"11391:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11344:37:20"},"nodeType":"YulFunctionCall","src":"11344:65:20"},"nodeType":"YulExpressionStatement","src":"11344:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11270:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11282:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11293:4:20","type":""}],"src":"11206:210:20"},{"body":{"nodeType":"YulBlock","src":"11540:195:20","statements":[{"nodeType":"YulAssignment","src":"11550:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11562:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11573:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:20"},"nodeType":"YulFunctionCall","src":"11558:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11550:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11597:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11608:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11593:3:20"},"nodeType":"YulFunctionCall","src":"11593:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11616:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11622:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11612:3:20"},"nodeType":"YulFunctionCall","src":"11612:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11586:6:20"},"nodeType":"YulFunctionCall","src":"11586:47:20"},"nodeType":"YulExpressionStatement","src":"11586:47:20"},{"nodeType":"YulAssignment","src":"11642:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11714:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"11723:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11650:63:20"},"nodeType":"YulFunctionCall","src":"11650:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11642:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11524:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11535:4:20","type":""}],"src":"11422:313:20"},{"body":{"nodeType":"YulBlock","src":"11912:248:20","statements":[{"nodeType":"YulAssignment","src":"11922:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11945:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11930:3:20"},"nodeType":"YulFunctionCall","src":"11930:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11922:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11969:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11980:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11965:3:20"},"nodeType":"YulFunctionCall","src":"11965:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11994:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11984:3:20"},"nodeType":"YulFunctionCall","src":"11984:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11958:6:20"},"nodeType":"YulFunctionCall","src":"11958:47:20"},"nodeType":"YulExpressionStatement","src":"11958:47:20"},{"nodeType":"YulAssignment","src":"12014:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12148:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12022:124:20"},"nodeType":"YulFunctionCall","src":"12022:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12014:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11892:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11907:4:20","type":""}],"src":"11741:419:20"},{"body":{"nodeType":"YulBlock","src":"12337:248:20","statements":[{"nodeType":"YulAssignment","src":"12347:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12355:3:20"},"nodeType":"YulFunctionCall","src":"12355:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12347:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12394:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12405:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12390:3:20"},"nodeType":"YulFunctionCall","src":"12390:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12413:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12409:3:20"},"nodeType":"YulFunctionCall","src":"12409:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12383:6:20"},"nodeType":"YulFunctionCall","src":"12383:47:20"},"nodeType":"YulExpressionStatement","src":"12383:47:20"},{"nodeType":"YulAssignment","src":"12439:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12573:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12447:124:20"},"nodeType":"YulFunctionCall","src":"12447:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12439:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12317:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12332:4:20","type":""}],"src":"12166:419:20"},{"body":{"nodeType":"YulBlock","src":"12762:248:20","statements":[{"nodeType":"YulAssignment","src":"12772:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12784:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12780:3:20"},"nodeType":"YulFunctionCall","src":"12780:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12772:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12819:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12815:3:20"},"nodeType":"YulFunctionCall","src":"12815:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12838:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12844:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12834:3:20"},"nodeType":"YulFunctionCall","src":"12834:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12808:6:20"},"nodeType":"YulFunctionCall","src":"12808:47:20"},"nodeType":"YulExpressionStatement","src":"12808:47:20"},{"nodeType":"YulAssignment","src":"12864:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12872:124:20"},"nodeType":"YulFunctionCall","src":"12872:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12864:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12742:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12757:4:20","type":""}],"src":"12591:419:20"},{"body":{"nodeType":"YulBlock","src":"13187:248:20","statements":[{"nodeType":"YulAssignment","src":"13197:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13209:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13220:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13205:3:20"},"nodeType":"YulFunctionCall","src":"13205:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13197:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13244:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13255:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13240:3:20"},"nodeType":"YulFunctionCall","src":"13240:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13263:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13269:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13259:3:20"},"nodeType":"YulFunctionCall","src":"13259:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:20"},"nodeType":"YulFunctionCall","src":"13233:47:20"},"nodeType":"YulExpressionStatement","src":"13233:47:20"},{"nodeType":"YulAssignment","src":"13289:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13423:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13297:124:20"},"nodeType":"YulFunctionCall","src":"13297:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13289:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13167:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13182:4:20","type":""}],"src":"13016:419:20"},{"body":{"nodeType":"YulBlock","src":"13612:248:20","statements":[{"nodeType":"YulAssignment","src":"13622:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13634:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:20"},"nodeType":"YulFunctionCall","src":"13630:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13622:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13669:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13665:3:20"},"nodeType":"YulFunctionCall","src":"13665:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13694:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13684:3:20"},"nodeType":"YulFunctionCall","src":"13684:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13658:6:20"},"nodeType":"YulFunctionCall","src":"13658:47:20"},"nodeType":"YulExpressionStatement","src":"13658:47:20"},{"nodeType":"YulAssignment","src":"13714:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13722:124:20"},"nodeType":"YulFunctionCall","src":"13722:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13714:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13592:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13607:4:20","type":""}],"src":"13441:419:20"},{"body":{"nodeType":"YulBlock","src":"14037:248:20","statements":[{"nodeType":"YulAssignment","src":"14047:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14059:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14070:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:20"},"nodeType":"YulFunctionCall","src":"14055:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14047:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14094:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14105:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14090:3:20"},"nodeType":"YulFunctionCall","src":"14090:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14113:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14119:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14109:3:20"},"nodeType":"YulFunctionCall","src":"14109:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14083:6:20"},"nodeType":"YulFunctionCall","src":"14083:47:20"},"nodeType":"YulExpressionStatement","src":"14083:47:20"},{"nodeType":"YulAssignment","src":"14139:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14273:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14147:124:20"},"nodeType":"YulFunctionCall","src":"14147:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14139:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14017:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14032:4:20","type":""}],"src":"13866:419:20"},{"body":{"nodeType":"YulBlock","src":"14462:248:20","statements":[{"nodeType":"YulAssignment","src":"14472:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14484:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14495:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14480:3:20"},"nodeType":"YulFunctionCall","src":"14480:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14472:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14530:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14515:3:20"},"nodeType":"YulFunctionCall","src":"14515:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14538:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14544:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14534:3:20"},"nodeType":"YulFunctionCall","src":"14534:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14508:6:20"},"nodeType":"YulFunctionCall","src":"14508:47:20"},"nodeType":"YulExpressionStatement","src":"14508:47:20"},{"nodeType":"YulAssignment","src":"14564:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14698:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14572:124:20"},"nodeType":"YulFunctionCall","src":"14572:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14564:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14442:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14457:4:20","type":""}],"src":"14291:419:20"},{"body":{"nodeType":"YulBlock","src":"14887:248:20","statements":[{"nodeType":"YulAssignment","src":"14897:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14909:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14920:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14905:3:20"},"nodeType":"YulFunctionCall","src":"14905:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14897:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14955:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14940:3:20"},"nodeType":"YulFunctionCall","src":"14940:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14963:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14969:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14959:3:20"},"nodeType":"YulFunctionCall","src":"14959:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14933:6:20"},"nodeType":"YulFunctionCall","src":"14933:47:20"},"nodeType":"YulExpressionStatement","src":"14933:47:20"},{"nodeType":"YulAssignment","src":"14989:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15123:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14997:124:20"},"nodeType":"YulFunctionCall","src":"14997:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14867:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14882:4:20","type":""}],"src":"14716:419:20"},{"body":{"nodeType":"YulBlock","src":"15312:248:20","statements":[{"nodeType":"YulAssignment","src":"15322:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15334:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15345:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:20"},"nodeType":"YulFunctionCall","src":"15330:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15322:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15369:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15380:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15365:3:20"},"nodeType":"YulFunctionCall","src":"15365:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15388:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15394:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15384:3:20"},"nodeType":"YulFunctionCall","src":"15384:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15358:6:20"},"nodeType":"YulFunctionCall","src":"15358:47:20"},"nodeType":"YulExpressionStatement","src":"15358:47:20"},{"nodeType":"YulAssignment","src":"15414:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15422:124:20"},"nodeType":"YulFunctionCall","src":"15422:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15414:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15292:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15307:4:20","type":""}],"src":"15141:419:20"},{"body":{"nodeType":"YulBlock","src":"15664:124:20","statements":[{"nodeType":"YulAssignment","src":"15674:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15686:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15697:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:20"},"nodeType":"YulFunctionCall","src":"15682:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15674:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15754:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15767:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15778:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15763:3:20"},"nodeType":"YulFunctionCall","src":"15763:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15710:43:20"},"nodeType":"YulFunctionCall","src":"15710:71:20"},"nodeType":"YulExpressionStatement","src":"15710:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15636:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15648:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15659:4:20","type":""}],"src":"15566:222:20"},{"body":{"nodeType":"YulBlock","src":"15835:88:20","statements":[{"nodeType":"YulAssignment","src":"15845:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15855:18:20"},"nodeType":"YulFunctionCall","src":"15855:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15845:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15904:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"15912:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15884:19:20"},"nodeType":"YulFunctionCall","src":"15884:33:20"},"nodeType":"YulExpressionStatement","src":"15884:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15819:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15828:6:20","type":""}],"src":"15794:129:20"},{"body":{"nodeType":"YulBlock","src":"15969:35:20","statements":[{"nodeType":"YulAssignment","src":"15979:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15995:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15989:5:20"},"nodeType":"YulFunctionCall","src":"15989:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15979:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15962:6:20","type":""}],"src":"15929:75:20"},{"body":{"nodeType":"YulBlock","src":"16076:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"16181:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16183:16:20"},"nodeType":"YulFunctionCall","src":"16183:18:20"},"nodeType":"YulExpressionStatement","src":"16183:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16153:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16161:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16150:2:20"},"nodeType":"YulFunctionCall","src":"16150:30:20"},"nodeType":"YulIf","src":"16147:2:20"},{"nodeType":"YulAssignment","src":"16213:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16243:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16221:21:20"},"nodeType":"YulFunctionCall","src":"16221:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16213:4:20"}]},{"nodeType":"YulAssignment","src":"16287:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16299:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"16305:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16295:3:20"},"nodeType":"YulFunctionCall","src":"16295:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16287:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16060:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16071:4:20","type":""}],"src":"16010:307:20"},{"body":{"nodeType":"YulBlock","src":"16381:40:20","statements":[{"nodeType":"YulAssignment","src":"16392:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16408:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16402:5:20"},"nodeType":"YulFunctionCall","src":"16402:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16392:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16364:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16374:6:20","type":""}],"src":"16323:98:20"},{"body":{"nodeType":"YulBlock","src":"16486:40:20","statements":[{"nodeType":"YulAssignment","src":"16497:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16513:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16507:5:20"},"nodeType":"YulFunctionCall","src":"16507:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16497:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16469:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16479:6:20","type":""}],"src":"16427:99:20"},{"body":{"nodeType":"YulBlock","src":"16627:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16644:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16649:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:20"},"nodeType":"YulFunctionCall","src":"16637:19:20"},"nodeType":"YulExpressionStatement","src":"16637:19:20"},{"nodeType":"YulAssignment","src":"16665:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16684:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16689:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16680:3:20"},"nodeType":"YulFunctionCall","src":"16680:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16665:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16599:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16604:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16615:11:20","type":""}],"src":"16532:168:20"},{"body":{"nodeType":"YulBlock","src":"16802:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16819:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16824:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16812:6:20"},"nodeType":"YulFunctionCall","src":"16812:19:20"},"nodeType":"YulExpressionStatement","src":"16812:19:20"},{"nodeType":"YulAssignment","src":"16840:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16859:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16864:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16855:3:20"},"nodeType":"YulFunctionCall","src":"16855:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16840:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16774:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16779:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16790:11:20","type":""}],"src":"16706:169:20"},{"body":{"nodeType":"YulBlock","src":"16995:34:20","statements":[{"nodeType":"YulAssignment","src":"17005:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17020:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17005:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16967:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16972:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16983:11:20","type":""}],"src":"16881:148:20"},{"body":{"nodeType":"YulBlock","src":"17079:261:20","statements":[{"nodeType":"YulAssignment","src":"17089:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17112:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17094:17:20"},"nodeType":"YulFunctionCall","src":"17094:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17089:1:20"}]},{"nodeType":"YulAssignment","src":"17123:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17146:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17128:17:20"},"nodeType":"YulFunctionCall","src":"17128:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17123:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17286:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17288:16:20"},"nodeType":"YulFunctionCall","src":"17288:18:20"},"nodeType":"YulExpressionStatement","src":"17288:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17207:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17214:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17282:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17210:3:20"},"nodeType":"YulFunctionCall","src":"17210:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17204:2:20"},"nodeType":"YulFunctionCall","src":"17204:81:20"},"nodeType":"YulIf","src":"17201:2:20"},{"nodeType":"YulAssignment","src":"17318:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17329:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17332:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17325:3:20"},"nodeType":"YulFunctionCall","src":"17325:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17318:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17066:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17069:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17075:3:20","type":""}],"src":"17035:305:20"},{"body":{"nodeType":"YulBlock","src":"17388:143:20","statements":[{"nodeType":"YulAssignment","src":"17398:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17421:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17403:17:20"},"nodeType":"YulFunctionCall","src":"17403:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17398:1:20"}]},{"nodeType":"YulAssignment","src":"17432:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17455:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17437:17:20"},"nodeType":"YulFunctionCall","src":"17437:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17432:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17479:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"17481:16:20"},"nodeType":"YulFunctionCall","src":"17481:18:20"},"nodeType":"YulExpressionStatement","src":"17481:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17476:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17469:6:20"},"nodeType":"YulFunctionCall","src":"17469:9:20"},"nodeType":"YulIf","src":"17466:2:20"},{"nodeType":"YulAssignment","src":"17511:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17520:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17523:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17516:3:20"},"nodeType":"YulFunctionCall","src":"17516:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"17511:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17377:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17380:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17386:1:20","type":""}],"src":"17346:185:20"},{"body":{"nodeType":"YulBlock","src":"17582:146:20","statements":[{"nodeType":"YulAssignment","src":"17592:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17615:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17597:17:20"},"nodeType":"YulFunctionCall","src":"17597:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17592:1:20"}]},{"nodeType":"YulAssignment","src":"17626:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17649:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17631:17:20"},"nodeType":"YulFunctionCall","src":"17631:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17626:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17673:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17675:16:20"},"nodeType":"YulFunctionCall","src":"17675:18:20"},"nodeType":"YulExpressionStatement","src":"17675:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17667:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17670:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17664:2:20"},"nodeType":"YulFunctionCall","src":"17664:8:20"},"nodeType":"YulIf","src":"17661:2:20"},{"nodeType":"YulAssignment","src":"17705:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17717:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17720:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17713:3:20"},"nodeType":"YulFunctionCall","src":"17713:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17705:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17568:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17571:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17577:4:20","type":""}],"src":"17537:191:20"},{"body":{"nodeType":"YulBlock","src":"17779:51:20","statements":[{"nodeType":"YulAssignment","src":"17789:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17818:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17800:17:20"},"nodeType":"YulFunctionCall","src":"17800:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17789:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17761:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17771:7:20","type":""}],"src":"17734:96:20"},{"body":{"nodeType":"YulBlock","src":"17878:48:20","statements":[{"nodeType":"YulAssignment","src":"17888:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17913:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17906:6:20"},"nodeType":"YulFunctionCall","src":"17906:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17899:6:20"},"nodeType":"YulFunctionCall","src":"17899:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17888:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17860:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17870:7:20","type":""}],"src":"17836:90:20"},{"body":{"nodeType":"YulBlock","src":"17976:105:20","statements":[{"nodeType":"YulAssignment","src":"17986:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18001:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18008:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17997:3:20"},"nodeType":"YulFunctionCall","src":"17997:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17986:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17958:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17968:7:20","type":""}],"src":"17932:149:20"},{"body":{"nodeType":"YulBlock","src":"18132:81:20","statements":[{"nodeType":"YulAssignment","src":"18142:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18157:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18164:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18153:3:20"},"nodeType":"YulFunctionCall","src":"18153:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18142:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18114:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18124:7:20","type":""}],"src":"18087:126:20"},{"body":{"nodeType":"YulBlock","src":"18264:32:20","statements":[{"nodeType":"YulAssignment","src":"18274:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"18285:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18274:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18246:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18256:7:20","type":""}],"src":"18219:77:20"},{"body":{"nodeType":"YulBlock","src":"18353:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18376:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"18381:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18386:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18363:12:20"},"nodeType":"YulFunctionCall","src":"18363:30:20"},"nodeType":"YulExpressionStatement","src":"18363:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18434:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18439:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:20"},"nodeType":"YulFunctionCall","src":"18430:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"18448:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:20"},"nodeType":"YulFunctionCall","src":"18423:27:20"},"nodeType":"YulExpressionStatement","src":"18423:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18335:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18340:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"18345:6:20","type":""}],"src":"18302:154:20"},{"body":{"nodeType":"YulBlock","src":"18511:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18521:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18530:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18525:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18590:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18615:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18620:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18611:3:20"},"nodeType":"YulFunctionCall","src":"18611:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18634:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18639:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18630:3:20"},"nodeType":"YulFunctionCall","src":"18630:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18624:5:20"},"nodeType":"YulFunctionCall","src":"18624:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18604:6:20"},"nodeType":"YulFunctionCall","src":"18604:39:20"},"nodeType":"YulExpressionStatement","src":"18604:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18551:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18554:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18548:2:20"},"nodeType":"YulFunctionCall","src":"18548:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18562:19:20","statements":[{"nodeType":"YulAssignment","src":"18564:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18573:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"18576:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18569:3:20"},"nodeType":"YulFunctionCall","src":"18569:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18564:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"18544:3:20","statements":[]},"src":"18540:113:20"},{"body":{"nodeType":"YulBlock","src":"18687:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18737:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18742:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:20"},"nodeType":"YulFunctionCall","src":"18733:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:20"},"nodeType":"YulFunctionCall","src":"18726:27:20"},"nodeType":"YulExpressionStatement","src":"18726:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18668:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18671:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18665:2:20"},"nodeType":"YulFunctionCall","src":"18665:13:20"},"nodeType":"YulIf","src":"18662:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18493:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18498:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"18503:6:20","type":""}],"src":"18462:307:20"},{"body":{"nodeType":"YulBlock","src":"18826:269:20","statements":[{"nodeType":"YulAssignment","src":"18836:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18850:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18856:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18846:3:20"},"nodeType":"YulFunctionCall","src":"18846:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18836:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"18867:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18897:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18903:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18893:3:20"},"nodeType":"YulFunctionCall","src":"18893:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18871:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18944:51:20","statements":[{"nodeType":"YulAssignment","src":"18958:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18972:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18980:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18968:3:20"},"nodeType":"YulFunctionCall","src":"18968:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18958:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18924:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18917:6:20"},"nodeType":"YulFunctionCall","src":"18917:26:20"},"nodeType":"YulIf","src":"18914:2:20"},{"body":{"nodeType":"YulBlock","src":"19047:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19061:16:20"},"nodeType":"YulFunctionCall","src":"19061:18:20"},"nodeType":"YulExpressionStatement","src":"19061:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19011:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19034:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19042:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19031:2:20"},"nodeType":"YulFunctionCall","src":"19031:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19008:2:20"},"nodeType":"YulFunctionCall","src":"19008:38:20"},"nodeType":"YulIf","src":"19005:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18810:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18819:6:20","type":""}],"src":"18775:320:20"},{"body":{"nodeType":"YulBlock","src":"19144:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19154:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19176:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19206:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19184:21:20"},"nodeType":"YulFunctionCall","src":"19184:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19172:3:20"},"nodeType":"YulFunctionCall","src":"19172:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19158:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"19323:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19325:16:20"},"nodeType":"YulFunctionCall","src":"19325:18:20"},"nodeType":"YulExpressionStatement","src":"19325:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19266:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"19278:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19263:2:20"},"nodeType":"YulFunctionCall","src":"19263:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19302:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19314:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19299:2:20"},"nodeType":"YulFunctionCall","src":"19299:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19260:2:20"},"nodeType":"YulFunctionCall","src":"19260:62:20"},"nodeType":"YulIf","src":"19257:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19361:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19365:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19354:6:20"},"nodeType":"YulFunctionCall","src":"19354:22:20"},"nodeType":"YulExpressionStatement","src":"19354:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19130:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"19138:4:20","type":""}],"src":"19101:281:20"},{"body":{"nodeType":"YulBlock","src":"19431:190:20","statements":[{"nodeType":"YulAssignment","src":"19441:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19468:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19450:17:20"},"nodeType":"YulFunctionCall","src":"19450:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19441:5:20"}]},{"body":{"nodeType":"YulBlock","src":"19564:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19566:16:20"},"nodeType":"YulFunctionCall","src":"19566:18:20"},"nodeType":"YulExpressionStatement","src":"19566:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19489:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19496:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19486:2:20"},"nodeType":"YulFunctionCall","src":"19486:77:20"},"nodeType":"YulIf","src":"19483:2:20"},{"nodeType":"YulAssignment","src":"19595:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19606:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19613:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19602:3:20"},"nodeType":"YulFunctionCall","src":"19602:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19595:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19417:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19427:3:20","type":""}],"src":"19388:233:20"},{"body":{"nodeType":"YulBlock","src":"19661:142:20","statements":[{"nodeType":"YulAssignment","src":"19671:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19694:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19676:17:20"},"nodeType":"YulFunctionCall","src":"19676:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19671:1:20"}]},{"nodeType":"YulAssignment","src":"19705:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19728:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19710:17:20"},"nodeType":"YulFunctionCall","src":"19710:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19705:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19752:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"19754:16:20"},"nodeType":"YulFunctionCall","src":"19754:18:20"},"nodeType":"YulExpressionStatement","src":"19754:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19749:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19742:6:20"},"nodeType":"YulFunctionCall","src":"19742:9:20"},"nodeType":"YulIf","src":"19739:2:20"},{"nodeType":"YulAssignment","src":"19783:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19792:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19795:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"19788:3:20"},"nodeType":"YulFunctionCall","src":"19788:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"19783:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19650:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19653:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"19659:1:20","type":""}],"src":"19627:176:20"},{"body":{"nodeType":"YulBlock","src":"19837:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19854:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19857:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19847:6:20"},"nodeType":"YulFunctionCall","src":"19847:88:20"},"nodeType":"YulExpressionStatement","src":"19847:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19951:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19954:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:20"},"nodeType":"YulFunctionCall","src":"19944:15:20"},"nodeType":"YulExpressionStatement","src":"19944:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19975:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19978:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19968:6:20"},"nodeType":"YulFunctionCall","src":"19968:15:20"},"nodeType":"YulExpressionStatement","src":"19968:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19809:180:20"},{"body":{"nodeType":"YulBlock","src":"20023:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20040:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20043:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20033:6:20"},"nodeType":"YulFunctionCall","src":"20033:88:20"},"nodeType":"YulExpressionStatement","src":"20033:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20137:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20140:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20130:6:20"},"nodeType":"YulFunctionCall","src":"20130:15:20"},"nodeType":"YulExpressionStatement","src":"20130:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20161:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20164:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20154:6:20"},"nodeType":"YulFunctionCall","src":"20154:15:20"},"nodeType":"YulExpressionStatement","src":"20154:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19995:180:20"},{"body":{"nodeType":"YulBlock","src":"20209:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20226:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20229:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20219:6:20"},"nodeType":"YulFunctionCall","src":"20219:88:20"},"nodeType":"YulExpressionStatement","src":"20219:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20323:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20326:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20316:6:20"},"nodeType":"YulFunctionCall","src":"20316:15:20"},"nodeType":"YulExpressionStatement","src":"20316:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20347:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20350:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20340:6:20"},"nodeType":"YulFunctionCall","src":"20340:15:20"},"nodeType":"YulExpressionStatement","src":"20340:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20181:180:20"},{"body":{"nodeType":"YulBlock","src":"20395:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20412:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20415:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20405:6:20"},"nodeType":"YulFunctionCall","src":"20405:88:20"},"nodeType":"YulExpressionStatement","src":"20405:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20509:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20512:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20502:6:20"},"nodeType":"YulFunctionCall","src":"20502:15:20"},"nodeType":"YulExpressionStatement","src":"20502:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20533:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20536:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20526:6:20"},"nodeType":"YulFunctionCall","src":"20526:15:20"},"nodeType":"YulExpressionStatement","src":"20526:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20367:180:20"},{"body":{"nodeType":"YulBlock","src":"20601:54:20","statements":[{"nodeType":"YulAssignment","src":"20611:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20629:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"20636:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20625:3:20"},"nodeType":"YulFunctionCall","src":"20625:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20645:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20641:3:20"},"nodeType":"YulFunctionCall","src":"20641:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20621:3:20"},"nodeType":"YulFunctionCall","src":"20621:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20611:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20584:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20594:6:20","type":""}],"src":"20553:102:20"},{"body":{"nodeType":"YulBlock","src":"20767:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20789:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20797:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20785:3:20"},"nodeType":"YulFunctionCall","src":"20785:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"20801:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20778:6:20"},"nodeType":"YulFunctionCall","src":"20778:58:20"},"nodeType":"YulExpressionStatement","src":"20778:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20857:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20865:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20853:3:20"},"nodeType":"YulFunctionCall","src":"20853:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"20870:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20846:6:20"},"nodeType":"YulFunctionCall","src":"20846:45:20"},"nodeType":"YulExpressionStatement","src":"20846:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20759:6:20","type":""}],"src":"20661:237:20"},{"body":{"nodeType":"YulBlock","src":"21010:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21032:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21040:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21028:3:20"},"nodeType":"YulFunctionCall","src":"21028:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21044:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21021:6:20"},"nodeType":"YulFunctionCall","src":"21021:58:20"},"nodeType":"YulExpressionStatement","src":"21021:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21100:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21108:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21096:3:20"},"nodeType":"YulFunctionCall","src":"21096:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21113:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21089:6:20"},"nodeType":"YulFunctionCall","src":"21089:32:20"},"nodeType":"YulExpressionStatement","src":"21089:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21002:6:20","type":""}],"src":"20904:224:20"},{"body":{"nodeType":"YulBlock","src":"21240:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21262:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21270:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21258:3:20"},"nodeType":"YulFunctionCall","src":"21258:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21274:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21251:6:20"},"nodeType":"YulFunctionCall","src":"21251:58:20"},"nodeType":"YulExpressionStatement","src":"21251:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21330:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21338:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21326:3:20"},"nodeType":"YulFunctionCall","src":"21326:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21343:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21319:6:20"},"nodeType":"YulFunctionCall","src":"21319:31:20"},"nodeType":"YulExpressionStatement","src":"21319:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21232:6:20","type":""}],"src":"21134:223:20"},{"body":{"nodeType":"YulBlock","src":"21469:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21491:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21499:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21487:3:20"},"nodeType":"YulFunctionCall","src":"21487:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21503:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21480:6:20"},"nodeType":"YulFunctionCall","src":"21480:51:20"},"nodeType":"YulExpressionStatement","src":"21480:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21461:6:20","type":""}],"src":"21363:175:20"},{"body":{"nodeType":"YulBlock","src":"21650:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21672:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21668:3:20"},"nodeType":"YulFunctionCall","src":"21668:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21684:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21661:6:20"},"nodeType":"YulFunctionCall","src":"21661:58:20"},"nodeType":"YulExpressionStatement","src":"21661:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21740:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21748:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21736:3:20"},"nodeType":"YulFunctionCall","src":"21736:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21753:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21729:6:20"},"nodeType":"YulFunctionCall","src":"21729:36:20"},"nodeType":"YulExpressionStatement","src":"21729:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21642:6:20","type":""}],"src":"21544:228:20"},{"body":{"nodeType":"YulBlock","src":"21884:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21906:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21914:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21902:3:20"},"nodeType":"YulFunctionCall","src":"21902:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"21918:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21895:6:20"},"nodeType":"YulFunctionCall","src":"21895:58:20"},"nodeType":"YulExpressionStatement","src":"21895:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21974:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21982:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21970:3:20"},"nodeType":"YulFunctionCall","src":"21970:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"21987:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21963:6:20"},"nodeType":"YulFunctionCall","src":"21963:57:20"},"nodeType":"YulExpressionStatement","src":"21963:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21876:6:20","type":""}],"src":"21778:249:20"},{"body":{"nodeType":"YulBlock","src":"22139:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22161:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22169:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22157:3:20"},"nodeType":"YulFunctionCall","src":"22157:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22173:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22150:6:20"},"nodeType":"YulFunctionCall","src":"22150:50:20"},"nodeType":"YulExpressionStatement","src":"22150:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22131:6:20","type":""}],"src":"22033:174:20"},{"body":{"nodeType":"YulBlock","src":"22319:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22341:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22349:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22337:3:20"},"nodeType":"YulFunctionCall","src":"22337:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22353:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22330:6:20"},"nodeType":"YulFunctionCall","src":"22330:58:20"},"nodeType":"YulExpressionStatement","src":"22330:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22409:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22417:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22405:3:20"},"nodeType":"YulFunctionCall","src":"22405:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"22422:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22398:6:20"},"nodeType":"YulFunctionCall","src":"22398:28:20"},"nodeType":"YulExpressionStatement","src":"22398:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22311:6:20","type":""}],"src":"22213:220:20"},{"body":{"nodeType":"YulBlock","src":"22545:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22567:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22575:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:20"},"nodeType":"YulFunctionCall","src":"22563:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"22579:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22556:6:20"},"nodeType":"YulFunctionCall","src":"22556:58:20"},"nodeType":"YulExpressionStatement","src":"22556:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22635:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22643:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22631:3:20"},"nodeType":"YulFunctionCall","src":"22631:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"22648:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22624:6:20"},"nodeType":"YulFunctionCall","src":"22624:41:20"},"nodeType":"YulExpressionStatement","src":"22624:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22537:6:20","type":""}],"src":"22439:233:20"},{"body":{"nodeType":"YulBlock","src":"22721:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"22778:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22787:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22790:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22780:6:20"},"nodeType":"YulFunctionCall","src":"22780:12:20"},"nodeType":"YulExpressionStatement","src":"22780:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22744:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22769:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22751:17:20"},"nodeType":"YulFunctionCall","src":"22751:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22741:2:20"},"nodeType":"YulFunctionCall","src":"22741:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22734:6:20"},"nodeType":"YulFunctionCall","src":"22734:43:20"},"nodeType":"YulIf","src":"22731:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22714:5:20","type":""}],"src":"22678:122:20"},{"body":{"nodeType":"YulBlock","src":"22846:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"22900:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22909:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22912:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22902:6:20"},"nodeType":"YulFunctionCall","src":"22902:12:20"},"nodeType":"YulExpressionStatement","src":"22902:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22869:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22891:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22876:14:20"},"nodeType":"YulFunctionCall","src":"22876:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22866:2:20"},"nodeType":"YulFunctionCall","src":"22866:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22859:6:20"},"nodeType":"YulFunctionCall","src":"22859:40:20"},"nodeType":"YulIf","src":"22856:2:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22839:5:20","type":""}],"src":"22806:116:20"},{"body":{"nodeType":"YulBlock","src":"22970:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"23026:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23035:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23038:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23028:6:20"},"nodeType":"YulFunctionCall","src":"23028:12:20"},"nodeType":"YulExpressionStatement","src":"23028:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22993:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23017:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23000:16:20"},"nodeType":"YulFunctionCall","src":"23000:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22990:2:20"},"nodeType":"YulFunctionCall","src":"22990:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22983:6:20"},"nodeType":"YulFunctionCall","src":"22983:42:20"},"nodeType":"YulIf","src":"22980:2:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22963:5:20","type":""}],"src":"22928:120:20"},{"body":{"nodeType":"YulBlock","src":"23097:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"23154:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23163:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23166:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23156:6:20"},"nodeType":"YulFunctionCall","src":"23156:12:20"},"nodeType":"YulExpressionStatement","src":"23156:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23120:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23145:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23127:17:20"},"nodeType":"YulFunctionCall","src":"23127:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23117:2:20"},"nodeType":"YulFunctionCall","src":"23117:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23110:6:20"},"nodeType":"YulFunctionCall","src":"23110:43:20"},"nodeType":"YulIf","src":"23107:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23090:5:20","type":""}],"src":"23054:122:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611625565b6102bc565b6040516100fb9190611936565b60405180910390f35b61010c61039e565b6040516101199190611951565b60405180910390f35b61013c60048036038101906101379190611677565b610430565b60405161014991906118cf565b60405180910390f35b61016c600480360381019061016791906115e9565b610476565b005b610188600480360381019061018391906114e3565b61058e565b005b6101a4600480360381019061019f91906114e3565b6105ee565b005b6101c060048036038101906101bb9190611677565b61060e565b6040516101cd91906118cf565b60405180910390f35b6101f060048036038101906101eb919061147e565b6106c0565b6040516101fd9190611a93565b60405180910390f35b61020e610778565b60405161021b9190611951565b60405180910390f35b61023e600480360381019061023991906115ad565b61080a565b005b61025a60048036038101906102559190611532565b610820565b005b61027660048036038101906102719190611677565b610882565b6040516102839190611951565b60405180910390f35b6102a660048036038101906102a191906114a7565b6108ea565b6040516102b39190611936565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611cb8565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611a53565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a13565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a73565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611a33565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906119f3565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611cb8565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611cb8565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611a73565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d29291906118ab565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f18161117d565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611a33565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906119b3565b60405180910390fd5b610c7a8383836111e9565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611bce565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611b47565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111ee565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e56906119d3565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611936565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111f3565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611973565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611178565b600082905060005b6000821461104a57808061103390611d1b565b915050600a826110439190611b9d565b9150611020565b60008167ffffffffffffffff81111561108c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110be5781602001600182028036833780820191505090505b5090505b60008514611171576001826110d79190611bce565b9150600a856110e69190611d64565b60306110f29190611b47565b60f81b81838151811061112e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561116a9190611b9d565b94506110c2565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006112148473ffffffffffffffffffffffffffffffffffffffff1661138a565b1561137d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261123d610a33565b8786866040518563ffffffff1660e01b815260040161125f94939291906118ea565b602060405180830381600087803b15801561127957600080fd5b505af19250505080156112aa57506040513d601f19601f820116820180604052508101906112a7919061164e565b60015b61132d573d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50600081511415611325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131c90611973565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611382565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006113c06113bb84611ad3565b611aae565b9050828152602081018484840111156113d857600080fd5b6113e3848285611c76565b509392505050565b6000813590506113fa816120dd565b92915050565b60008135905061140f816120f4565b92915050565b6000813590506114248161210b565b92915050565b6000815190506114398161210b565b92915050565b600082601f83011261145057600080fd5b81356114608482602086016113ad565b91505092915050565b60008135905061147881612122565b92915050565b60006020828403121561149057600080fd5b600061149e848285016113eb565b91505092915050565b600080604083850312156114ba57600080fd5b60006114c8858286016113eb565b92505060206114d9858286016113eb565b9150509250929050565b6000806000606084860312156114f857600080fd5b6000611506868287016113eb565b9350506020611517868287016113eb565b925050604061152886828701611469565b9150509250925092565b6000806000806080858703121561154857600080fd5b6000611556878288016113eb565b9450506020611567878288016113eb565b935050604061157887828801611469565b925050606085013567ffffffffffffffff81111561159557600080fd5b6115a18782880161143f565b91505092959194509250565b600080604083850312156115c057600080fd5b60006115ce858286016113eb565b92505060206115df85828601611400565b9150509250929050565b600080604083850312156115fc57600080fd5b600061160a858286016113eb565b925050602061161b85828601611469565b9150509250929050565b60006020828403121561163757600080fd5b600061164584828501611415565b91505092915050565b60006020828403121561166057600080fd5b600061166e8482850161142a565b91505092915050565b60006020828403121561168957600080fd5b600061169784828501611469565b91505092915050565b6116a981611c02565b82525050565b6116b881611c14565b82525050565b60006116c982611b04565b6116d38185611b1a565b93506116e3818560208601611c85565b6116ec81611e51565b840191505092915050565b600061170282611b0f565b61170c8185611b2b565b935061171c818560208601611c85565b61172581611e51565b840191505092915050565b600061173b82611b0f565b6117458185611b3c565b9350611755818560208601611c85565b80840191505092915050565b600061176e603283611b2b565b915061177982611e62565b604082019050919050565b6000611791602583611b2b565b915061179c82611eb1565b604082019050919050565b60006117b4602483611b2b565b91506117bf82611f00565b604082019050919050565b60006117d7601983611b2b565b91506117e282611f4f565b602082019050919050565b60006117fa602983611b2b565b915061180582611f78565b604082019050919050565b600061181d603e83611b2b565b915061182882611fc7565b604082019050919050565b6000611840601883611b2b565b915061184b82612016565b602082019050919050565b6000611863602183611b2b565b915061186e8261203f565b604082019050919050565b6000611886602e83611b2b565b91506118918261208e565b604082019050919050565b6118a581611c6c565b82525050565b60006118b78285611730565b91506118c38284611730565b91508190509392505050565b60006020820190506118e460008301846116a0565b92915050565b60006080820190506118ff60008301876116a0565b61190c60208301866116a0565b611919604083018561189c565b818103606083015261192b81846116be565b905095945050505050565b600060208201905061194b60008301846116af565b92915050565b6000602082019050818103600083015261196b81846116f7565b905092915050565b6000602082019050818103600083015261198c81611761565b9050919050565b600060208201905081810360008301526119ac81611784565b9050919050565b600060208201905081810360008301526119cc816117a7565b9050919050565b600060208201905081810360008301526119ec816117ca565b9050919050565b60006020820190508181036000830152611a0c816117ed565b9050919050565b60006020820190508181036000830152611a2c81611810565b9050919050565b60006020820190508181036000830152611a4c81611833565b9050919050565b60006020820190508181036000830152611a6c81611856565b9050919050565b60006020820190508181036000830152611a8c81611879565b9050919050565b6000602082019050611aa8600083018461189c565b92915050565b6000611ab8611ac9565b9050611ac48282611cea565b919050565b6000604051905090565b600067ffffffffffffffff821115611aee57611aed611e22565b5b611af782611e51565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b5282611c6c565b9150611b5d83611c6c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b9257611b91611d95565b5b828201905092915050565b6000611ba882611c6c565b9150611bb383611c6c565b925082611bc357611bc2611dc4565b5b828204905092915050565b6000611bd982611c6c565b9150611be483611c6c565b925082821015611bf757611bf6611d95565b5b828203905092915050565b6000611c0d82611c4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ca3578082015181840152602081019050611c88565b83811115611cb2576000848401525b50505050565b60006002820490506001821680611cd057607f821691505b60208210811415611ce457611ce3611df3565b5b50919050565b611cf382611e51565b810181811067ffffffffffffffff82111715611d1257611d11611e22565b5b80604052505050565b6000611d2682611c6c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d5957611d58611d95565b5b600182019050919050565b6000611d6f82611c6c565b9150611d7a83611c6c565b925082611d8a57611d89611dc4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6120e681611c02565b81146120f157600080fd5b50565b6120fd81611c14565b811461210857600080fd5b50565b61211481611c20565b811461211f57600080fd5b50565b61212b81611c6c565b811461213657600080fd5b5056fea2646970667358221220db9d3f8c937313de0fca2b6f27913452c61faf6c42edbc7896d362c37024134664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x117D JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1171 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x112E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP5 POP PUSH2 0x10C2 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x138A JUMP JUMPDEST ISZERO PUSH2 0x137D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x123D PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12AA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x132D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C0 PUSH2 0x13BB DUP5 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x20DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140F DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x210B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1478 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14D9 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1517 DUP7 DUP3 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1528 DUP7 DUP3 DUP8 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1567 DUP8 DUP3 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1578 DUP8 DUP3 DUP9 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A1 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DF DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x161B DUP6 DUP3 DUP7 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1645 DUP5 DUP3 DUP6 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x142A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP5 DUP3 DUP6 ADD PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A9 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C9 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x16D3 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x16E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1B2B JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x1745 DUP2 DUP6 PUSH2 0x1B3C JUMP JUMPDEST SWAP4 POP PUSH2 0x1755 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176E PUSH1 0x32 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1779 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1791 PUSH1 0x25 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x179C DUP3 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x24 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 PUSH1 0x19 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FA PUSH1 0x29 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D PUSH1 0x3E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1828 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1840 PUSH1 0x18 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH1 0x21 DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1886 PUSH1 0x2E DUP4 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 DUP6 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 DUP5 PUSH2 0x1730 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196B DUP2 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AC DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19EC DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2C DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4C DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6C DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB8 PUSH2 0x1AC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC4 DUP3 DUP3 PUSH2 0x1CEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF7 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP3 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x1DF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1E22 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1D95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7A DUP4 PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D8A JUMPI PUSH2 0x1D89 PUSH2 0x1DC4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20E6 DUP2 PUSH2 0x1C02 JUMP JUMPDEST DUP2 EQ PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2114 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x212B DUP2 PUSH2 0x1C6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP14 EXTCODEHASH DUP13 SWAP4 PUSH20 0x13DE0FCA2B6F27913452C61FAF6C42EDBC7896D3 PUSH3 0xC37024 SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"628:13718:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3467:407;;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:15:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:6:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:12:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:343:20:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:133::-;544:5;582:6;569:20;560:29;;598:30;622:5;598:30;:::i;:::-;550:84;;;;:::o;640:137::-;685:5;723:6;710:20;701:29;;739:32;765:5;739:32;:::i;:::-;691:86;;;;:::o;783:141::-;839:5;870:6;864:13;855:22;;886:32;912:5;886:32;:::i;:::-;845:79;;;;:::o;943:271::-;998:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1065:1;1062;1055:12;1014:2;1105:6;1092:20;1130:78;1204:3;1196:6;1189:4;1181:6;1177:17;1130:78;:::i;:::-;1121:87;;1004:210;;;;;:::o;1220:139::-;1266:5;1304:6;1291:20;1282:29;;1320:33;1347:5;1320:33;:::i;:::-;1272:87;;;;:::o;1365:262::-;1424:6;1473:2;1461:9;1452:7;1448:23;1444:32;1441:2;;;1489:1;1486;1479:12;1441:2;1532:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;:::i;:::-;1547:63;;1503:117;1431:196;;;;:::o;1633:407::-;1701:6;1709;1758:2;1746:9;1737:7;1733:23;1729:32;1726:2;;;1774:1;1771;1764:12;1726:2;1817:1;1842:53;1887:7;1878:6;1867:9;1863:22;1842:53;:::i;:::-;1832:63;;1788:117;1944:2;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1915:118;1716:324;;;;;:::o;2046:552::-;2123:6;2131;2139;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2204:1;2201;2194:12;2156:2;2247:1;2272:53;2317:7;2308:6;2297:9;2293:22;2272:53;:::i;:::-;2262:63;;2218:117;2374:2;2400:53;2445:7;2436:6;2425:9;2421:22;2400:53;:::i;:::-;2390:63;;2345:118;2502:2;2528:53;2573:7;2564:6;2553:9;2549:22;2528:53;:::i;:::-;2518:63;;2473:118;2146:452;;;;;:::o;2604:809::-;2699:6;2707;2715;2723;2772:3;2760:9;2751:7;2747:23;2743:33;2740:2;;;2789:1;2786;2779:12;2740:2;2832:1;2857:53;2902:7;2893:6;2882:9;2878:22;2857:53;:::i;:::-;2847:63;;2803:117;2959:2;2985:53;3030:7;3021:6;3010:9;3006:22;2985:53;:::i;:::-;2975:63;;2930:118;3087:2;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3058:118;3243:2;3232:9;3228:18;3215:32;3274:18;3266:6;3263:30;3260:2;;;3306:1;3303;3296:12;3260:2;3334:62;3388:7;3379:6;3368:9;3364:22;3334:62;:::i;:::-;3324:72;;3186:220;2730:683;;;;;;;:::o;3419:401::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3600:1;3625:53;3670:7;3661:6;3650:9;3646:22;3625:53;:::i;:::-;3615:63;;3571:117;3727:2;3753:50;3795:7;3786:6;3775:9;3771:22;3753:50;:::i;:::-;3743:60;;3698:115;3499:321;;;;;:::o;3826:407::-;3894:6;3902;3951:2;3939:9;3930:7;3926:23;3922:32;3919:2;;;3967:1;3964;3957:12;3919:2;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3909:324;;;;;:::o;4239:260::-;4297:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4362:1;4359;4352:12;4314:2;4405:1;4430:52;4474:7;4465:6;4454:9;4450:22;4430:52;:::i;:::-;4420:62;;4376:116;4304:195;;;;:::o;4505:282::-;4574:6;4623:2;4611:9;4602:7;4598:23;4594:32;4591:2;;;4639:1;4636;4629:12;4591:2;4682:1;4707:63;4762:7;4753:6;4742:9;4738:22;4707:63;:::i;:::-;4697:73;;4653:127;4581:206;;;;:::o;4793:262::-;4852:6;4901:2;4889:9;4880:7;4876:23;4872:32;4869:2;;;4917:1;4914;4907:12;4869:2;4960:1;4985:53;5030:7;5021:6;5010:9;5006:22;4985:53;:::i;:::-;4975:63;;4931:117;4859:196;;;;:::o;5061:118::-;5148:24;5166:5;5148:24;:::i;:::-;5143:3;5136:37;5126:53;;:::o;5185:109::-;5266:21;5281:5;5266:21;:::i;:::-;5261:3;5254:34;5244:50;;:::o;5300:360::-;5386:3;5414:38;5446:5;5414:38;:::i;:::-;5468:70;5531:6;5526:3;5468:70;:::i;:::-;5461:77;;5547:52;5592:6;5587:3;5580:4;5573:5;5569:16;5547:52;:::i;:::-;5624:29;5646:6;5624:29;:::i;:::-;5619:3;5615:39;5608:46;;5390:270;;;;;:::o;5666:364::-;5754:3;5782:39;5815:5;5782:39;:::i;:::-;5837:71;5901:6;5896:3;5837:71;:::i;:::-;5830:78;;5917:52;5962:6;5957:3;5950:4;5943:5;5939:16;5917:52;:::i;:::-;5994:29;6016:6;5994:29;:::i;:::-;5989:3;5985:39;5978:46;;5758:272;;;;;:::o;6036:377::-;6142:3;6170:39;6203:5;6170:39;:::i;:::-;6225:89;6307:6;6302:3;6225:89;:::i;:::-;6218:96;;6323:52;6368:6;6363:3;6356:4;6349:5;6345:16;6323:52;:::i;:::-;6400:6;6395:3;6391:16;6384:23;;6146:267;;;;;:::o;6419:366::-;6561:3;6582:67;6646:2;6641:3;6582:67;:::i;:::-;6575:74;;6658:93;6747:3;6658:93;:::i;:::-;6776:2;6771:3;6767:12;6760:19;;6565:220;;;:::o;6791:366::-;6933:3;6954:67;7018:2;7013:3;6954:67;:::i;:::-;6947:74;;7030:93;7119:3;7030:93;:::i;:::-;7148:2;7143:3;7139:12;7132:19;;6937:220;;;:::o;7163:366::-;7305:3;7326:67;7390:2;7385:3;7326:67;:::i;:::-;7319:74;;7402:93;7491:3;7402:93;:::i;:::-;7520:2;7515:3;7511:12;7504:19;;7309:220;;;:::o;7535:366::-;7677:3;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7681:220;;;:::o;7907:366::-;8049:3;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;8053:220;;;:::o;8279:366::-;8421:3;8442:67;8506:2;8501:3;8442:67;:::i;:::-;8435:74;;8518:93;8607:3;8518:93;:::i;:::-;8636:2;8631:3;8627:12;8620:19;;8425:220;;;:::o;8651:366::-;8793:3;8814:67;8878:2;8873:3;8814:67;:::i;:::-;8807:74;;8890:93;8979:3;8890:93;:::i;:::-;9008:2;9003:3;8999:12;8992:19;;8797:220;;;:::o;9023:366::-;9165:3;9186:67;9250:2;9245:3;9186:67;:::i;:::-;9179:74;;9262:93;9351:3;9262:93;:::i;:::-;9380:2;9375:3;9371:12;9364:19;;9169:220;;;:::o;9395:366::-;9537:3;9558:67;9622:2;9617:3;9558:67;:::i;:::-;9551:74;;9634:93;9723:3;9634:93;:::i;:::-;9752:2;9747:3;9743:12;9736:19;;9541:220;;;:::o;9767:118::-;9854:24;9872:5;9854:24;:::i;:::-;9849:3;9842:37;9832:53;;:::o;9891:435::-;10071:3;10093:95;10184:3;10175:6;10093:95;:::i;:::-;10086:102;;10205:95;10296:3;10287:6;10205:95;:::i;:::-;10198:102;;10317:3;10310:10;;10075:251;;;;;:::o;10332:222::-;10425:4;10463:2;10452:9;10448:18;10440:26;;10476:71;10544:1;10533:9;10529:17;10520:6;10476:71;:::i;:::-;10430:124;;;;:::o;10560:640::-;10755:4;10793:3;10782:9;10778:19;10770:27;;10807:71;10875:1;10864:9;10860:17;10851:6;10807:71;:::i;:::-;10888:72;10956:2;10945:9;10941:18;10932:6;10888:72;:::i;:::-;10970;11038:2;11027:9;11023:18;11014:6;10970:72;:::i;:::-;11089:9;11083:4;11079:20;11074:2;11063:9;11059:18;11052:48;11117:76;11188:4;11179:6;11117:76;:::i;:::-;11109:84;;10760:440;;;;;;;:::o;11206:210::-;11293:4;11331:2;11320:9;11316:18;11308:26;;11344:65;11406:1;11395:9;11391:17;11382:6;11344:65;:::i;:::-;11298:118;;;;:::o;11422:313::-;11535:4;11573:2;11562:9;11558:18;11550:26;;11622:9;11616:4;11612:20;11608:1;11597:9;11593:17;11586:47;11650:78;11723:4;11714:6;11650:78;:::i;:::-;11642:86;;11540:195;;;;:::o;11741:419::-;11907:4;11945:2;11934:9;11930:18;11922:26;;11994:9;11988:4;11984:20;11980:1;11969:9;11965:17;11958:47;12022:131;12148:4;12022:131;:::i;:::-;12014:139;;11912:248;;;:::o;12166:419::-;12332:4;12370:2;12359:9;12355:18;12347:26;;12419:9;12413:4;12409:20;12405:1;12394:9;12390:17;12383:47;12447:131;12573:4;12447:131;:::i;:::-;12439:139;;12337:248;;;:::o;12591:419::-;12757:4;12795:2;12784:9;12780:18;12772:26;;12844:9;12838:4;12834:20;12830:1;12819:9;12815:17;12808:47;12872:131;12998:4;12872:131;:::i;:::-;12864:139;;12762:248;;;:::o;13016:419::-;13182:4;13220:2;13209:9;13205:18;13197:26;;13269:9;13263:4;13259:20;13255:1;13244:9;13240:17;13233:47;13297:131;13423:4;13297:131;:::i;:::-;13289:139;;13187:248;;;:::o;13441:419::-;13607:4;13645:2;13634:9;13630:18;13622:26;;13694:9;13688:4;13684:20;13680:1;13669:9;13665:17;13658:47;13722:131;13848:4;13722:131;:::i;:::-;13714:139;;13612:248;;;:::o;13866:419::-;14032:4;14070:2;14059:9;14055:18;14047:26;;14119:9;14113:4;14109:20;14105:1;14094:9;14090:17;14083:47;14147:131;14273:4;14147:131;:::i;:::-;14139:139;;14037:248;;;:::o;14291:419::-;14457:4;14495:2;14484:9;14480:18;14472:26;;14544:9;14538:4;14534:20;14530:1;14519:9;14515:17;14508:47;14572:131;14698:4;14572:131;:::i;:::-;14564:139;;14462:248;;;:::o;14716:419::-;14882:4;14920:2;14909:9;14905:18;14897:26;;14969:9;14963:4;14959:20;14955:1;14944:9;14940:17;14933:47;14997:131;15123:4;14997:131;:::i;:::-;14989:139;;14887:248;;;:::o;15141:419::-;15307:4;15345:2;15334:9;15330:18;15322:26;;15394:9;15388:4;15384:20;15380:1;15369:9;15365:17;15358:47;15422:131;15548:4;15422:131;:::i;:::-;15414:139;;15312:248;;;:::o;15566:222::-;15659:4;15697:2;15686:9;15682:18;15674:26;;15710:71;15778:1;15767:9;15763:17;15754:6;15710:71;:::i;:::-;15664:124;;;;:::o;15794:129::-;15828:6;15855:20;;:::i;:::-;15845:30;;15884:33;15912:4;15904:6;15884:33;:::i;:::-;15835:88;;;:::o;15929:75::-;15962:6;15995:2;15989:9;15979:19;;15969:35;:::o;16010:307::-;16071:4;16161:18;16153:6;16150:30;16147:2;;;16183:18;;:::i;:::-;16147:2;16221:29;16243:6;16221:29;:::i;:::-;16213:37;;16305:4;16299;16295:15;16287:23;;16076:241;;;:::o;16323:98::-;16374:6;16408:5;16402:12;16392:22;;16381:40;;;:::o;16427:99::-;16479:6;16513:5;16507:12;16497:22;;16486:40;;;:::o;16532:168::-;16615:11;16649:6;16644:3;16637:19;16689:4;16684:3;16680:14;16665:29;;16627:73;;;;:::o;16706:169::-;16790:11;16824:6;16819:3;16812:19;16864:4;16859:3;16855:14;16840:29;;16802:73;;;;:::o;16881:148::-;16983:11;17020:3;17005:18;;16995:34;;;;:::o;17035:305::-;17075:3;17094:20;17112:1;17094:20;:::i;:::-;17089:25;;17128:20;17146:1;17128:20;:::i;:::-;17123:25;;17282:1;17214:66;17210:74;17207:1;17204:81;17201:2;;;17288:18;;:::i;:::-;17201:2;17332:1;17329;17325:9;17318:16;;17079:261;;;;:::o;17346:185::-;17386:1;17403:20;17421:1;17403:20;:::i;:::-;17398:25;;17437:20;17455:1;17437:20;:::i;:::-;17432:25;;17476:1;17466:2;;17481:18;;:::i;:::-;17466:2;17523:1;17520;17516:9;17511:14;;17388:143;;;;:::o;17537:191::-;17577:4;17597:20;17615:1;17597:20;:::i;:::-;17592:25;;17631:20;17649:1;17631:20;:::i;:::-;17626:25;;17670:1;17667;17664:8;17661:2;;;17675:18;;:::i;:::-;17661:2;17720:1;17717;17713:9;17705:17;;17582:146;;;;:::o;17734:96::-;17771:7;17800:24;17818:5;17800:24;:::i;:::-;17789:35;;17779:51;;;:::o;17836:90::-;17870:7;17913:5;17906:13;17899:21;17888:32;;17878:48;;;:::o;17932:149::-;17968:7;18008:66;18001:5;17997:78;17986:89;;17976:105;;;:::o;18087:126::-;18124:7;18164:42;18157:5;18153:54;18142:65;;18132:81;;;:::o;18219:77::-;18256:7;18285:5;18274:16;;18264:32;;;:::o;18302:154::-;18386:6;18381:3;18376;18363:30;18448:1;18439:6;18434:3;18430:16;18423:27;18353:103;;;:::o;18462:307::-;18530:1;18540:113;18554:6;18551:1;18548:13;18540:113;;;18639:1;18634:3;18630:11;18624:18;18620:1;18615:3;18611:11;18604:39;18576:2;18573:1;18569:10;18564:15;;18540:113;;;18671:6;18668:1;18665:13;18662:2;;;18751:1;18742:6;18737:3;18733:16;18726:27;18662:2;18511:258;;;;:::o;18775:320::-;18819:6;18856:1;18850:4;18846:12;18836:22;;18903:1;18897:4;18893:12;18924:18;18914:2;;18980:4;18972:6;18968:17;18958:27;;18914:2;19042;19034:6;19031:14;19011:18;19008:38;19005:2;;;19061:18;;:::i;:::-;19005:2;18826:269;;;;:::o;19101:281::-;19184:27;19206:4;19184:27;:::i;:::-;19176:6;19172:40;19314:6;19302:10;19299:22;19278:18;19266:10;19263:34;19260:62;19257:2;;;19325:18;;:::i;:::-;19257:2;19365:10;19361:2;19354:22;19144:238;;;:::o;19388:233::-;19427:3;19450:24;19468:5;19450:24;:::i;:::-;19441:33;;19496:66;19489:5;19486:77;19483:2;;;19566:18;;:::i;:::-;19483:2;19613:1;19606:5;19602:13;19595:20;;19431:190;;;:::o;19627:176::-;19659:1;19676:20;19694:1;19676:20;:::i;:::-;19671:25;;19710:20;19728:1;19710:20;:::i;:::-;19705:25;;19749:1;19739:2;;19754:18;;:::i;:::-;19739:2;19795:1;19792;19788:9;19783:14;;19661:142;;;;:::o;19809:180::-;19857:77;19854:1;19847:88;19954:4;19951:1;19944:15;19978:4;19975:1;19968:15;19995:180;20043:77;20040:1;20033:88;20140:4;20137:1;20130:15;20164:4;20161:1;20154:15;20181:180;20229:77;20226:1;20219:88;20326:4;20323:1;20316:15;20350:4;20347:1;20340:15;20367:180;20415:77;20412:1;20405:88;20512:4;20509:1;20502:15;20536:4;20533:1;20526:15;20553:102;20594:6;20645:2;20641:7;20636:2;20629:5;20625:14;20621:28;20611:38;;20601:54;;;:::o;20661:237::-;20801:34;20797:1;20789:6;20785:14;20778:58;20870:20;20865:2;20857:6;20853:15;20846:45;20767:131;:::o;20904:224::-;21044:34;21040:1;21032:6;21028:14;21021:58;21113:7;21108:2;21100:6;21096:15;21089:32;21010:118;:::o;21134:223::-;21274:34;21270:1;21262:6;21258:14;21251:58;21343:6;21338:2;21330:6;21326:15;21319:31;21240:117;:::o;21363:175::-;21503:27;21499:1;21491:6;21487:14;21480:51;21469:69;:::o;21544:228::-;21684:34;21680:1;21672:6;21668:14;21661:58;21753:11;21748:2;21740:6;21736:15;21729:36;21650:122;:::o;21778:249::-;21918:34;21914:1;21906:6;21902:14;21895:58;21987:32;21982:2;21974:6;21970:15;21963:57;21884:143;:::o;22033:174::-;22173:26;22169:1;22161:6;22157:14;22150:50;22139:68;:::o;22213:220::-;22353:34;22349:1;22341:6;22337:14;22330:58;22422:3;22417:2;22409:6;22405:15;22398:28;22319:114;:::o;22439:233::-;22579:34;22575:1;22567:6;22563:14;22556:58;22648:16;22643:2;22635:6;22631:15;22624:41;22545:127;:::o;22678:122::-;22751:24;22769:5;22751:24;:::i;:::-;22744:5;22741:35;22731:2;;22790:1;22787;22780:12;22731:2;22721:79;:::o;22806:116::-;22876:21;22891:5;22876:21;:::i;:::-;22869:5;22866:32;22856:2;;22912:1;22909;22902:12;22856:2;22846:76;:::o;22928:120::-;23000:23;23017:5;23000:23;:::i;:::-;22993:5;22990:34;22980:2;;23038:1;23035;23028:12;22980:2;22970:78;:::o;23054:122::-;23127:24;23145:5;23127:24;:::i;:::-;23120:5;23117:35;23107:2;;23166:1;23163;23156:12;23107:2;23097:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1711800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1624","getApproved(uint256)":"2634","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"1682","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"2124","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"969","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":345,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":349,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":345,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":349,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1333,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1337,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1340,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1344,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd254622f387abed5de0b86dc404dec231eb83f9f7f76fb1ea323d611df986064736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 SLOAD PUSH3 0x2F387A 0xBE 0xD5 0xDE SIGNEXTEND DUP7 0xDC BLOCKHASH 0x4D 0xEC 0x23 0x1E 0xB8 EXTCODEHASH SWAP16 PUSH32 0x76FB1EA323D611DF986064736F6C634300080400330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd254622f387abed5de0b86dc404dec231eb83f9f7f76fb1ea323d611df986064736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 SLOAD PUSH3 0x2F387A 0xBE 0xD5 0xDE SIGNEXTEND DUP7 0xDC BLOCKHASH 0x4D 0xEC 0x23 0x1E 0xB8 EXTCODEHASH SWAP16 PUSH32 0x76FB1EA323D611DF986064736F6C634300080400330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"devdoc":{"details":"Provides a set of functions to operate with Base64 strings. _Available since v4.5._","kind":"dev","methods":{},"stateVariables":{"_TABLE":{"details":"Base64 Encoding/Decoding Table"}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ff99c870616d28ca2deac152037aaa32267a8019bc86da57fe4ac4a9d3606db64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF99C870616D28CA2DEAC152037AAA32267A8019BC86DA57FE4AC4A9D3606DB64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"231:3302:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ff99c870616d28ca2deac152037aaa32267a8019bc86da57fe4ac4a9d3606db64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF99C870616D28CA2DEAC152037AAA32267A8019BC86DA57FE4AC4A9D3606DB64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"231:3302:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a83ebd19446944e6ba80c8778d5afff4d43a35c74d88c713440c5171725240e364736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 RETURNDATACOPY 0xBD NOT DIFFICULTY PUSH10 0x44E6BA80C8778D5AFFF4 0xD4 GASPRICE CALLDATALOAD 0xC7 0x4D DUP9 0xC7 SGT DIFFICULTY 0xC MLOAD PUSH18 0x725240E364736F6C63430008040033000000 ","sourceMap":"161:2235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a83ebd19446944e6ba80c8778d5afff4d43a35c74d88c713440c5171725240e364736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 RETURNDATACOPY 0xBD NOT DIFFICULTY PUSH10 0x44E6BA80C8778D5AFFF4 0xD4 GASPRICE CALLDATALOAD 0xC7 0x4D DUP9 0xC7 SGT DIFFICULTY 0xC MLOAD PUSH18 0x725240E364736F6C63430008040033000000 ","sourceMap":"161:2235:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/INFTCollection.sol":{"INFTCollection":{"abi":[{"inputs":[],"name":"batchSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRevealed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealPendingMetadata","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealedCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"}],"name":"setRevealBatchSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealInterval","type":"uint256"}],"name":"setRevealInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shouldReveal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchSize()":"f4daaba1","lastRevealed()":"7b4fab5a","maxSupply()":"d5abeb01","mint(uint256)":"a0712d68","mintCost()":"bdb4b848","revealInterval()":"247cd8ad","revealPendingMetadata()":"96634a40","revealedCount()":"bbd78e93","setRevealBatchSize(uint256)":"aaae4e23","setRevealInterval(uint256)":"5c65d81f","shouldReveal()":"cf3b94cd","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"batchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRevealed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealPendingMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"}],\"name\":\"setRevealBatchSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"}],\"name\":\"setRevealInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReveal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/INFTCollection.sol\":\"INFTCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface INFTCollection {\\n    function mint(uint256 _amount) external payable;\\n\\n    function withdrawProceeds() external;\\n\\n    function revealedCount() external view returns(uint256);\\n\\n    function lastRevealed() external view returns(uint256);\\n\\n    function batchSize() external view returns(uint256);\\n\\n    function revealInterval() external view returns(uint256);\\n\\n    function mintCost() external view returns (uint256);\\n\\n    function maxSupply() external view returns (uint256);\\n\\n    function shouldReveal() external view returns (bool);\\n\\n    function revealPendingMetadata() external returns (uint256 requestId);\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\\n\\n    function setRevealInterval(uint256 _revealInterval) external;\\n}\\n\",\"keccak256\":\"0x7d1a0ec803647708dfc18e7e377c954e6fbd106c7da7d0da0904d0fb475bb157\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTCollection.sol":{"NFTCollection":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_mintCost","type":"uint256"},{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"},{"internalType":"uint256","name":"_revealInterval","type":"uint256"},{"internalType":"address","name":"_vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"_vrfSubscriptionId","type":"uint64"},{"internalType":"bytes32","name":"_vrfGasLane","type":"bytes32"},{"internalType":"uint32","name":"_vrfCallbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InsufficientLINK","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"MaxSupplyReached","type":"error"},{"inputs":[],"name":"NonExistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RevealCriteriaNotMet","type":"error"},{"inputs":[],"name":"RevealInProgress","type":"error"},{"inputs":[],"name":"WithdrawProceedsFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"BatchRevealFinished","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"BatchRevealRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"batchDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRevealed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revealPendingMetadata","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealedCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealBatchSize","type":"uint256"}],"name":"setRevealBatchSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revealInterval","type":"uint256"}],"name":"setRevealInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shouldReveal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6500:20","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:20","statements":[{"nodeType":"YulAssignment","src":"112:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:20"},"nodeType":"YulFunctionCall","src":"137:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:20"},"nodeType":"YulFunctionCall","src":"121:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:20"},"nodeType":"YulFunctionCall","src":"196:21:20"},"nodeType":"YulExpressionStatement","src":"196:21:20"},{"nodeType":"YulVariableDeclaration","src":"226:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:20"},"nodeType":"YulFunctionCall","src":"237:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:20"},"nodeType":"YulFunctionCall","src":"293:12:20"},"nodeType":"YulExpressionStatement","src":"293:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:20"},"nodeType":"YulFunctionCall","src":"265:25:20"},"nodeType":"YulIf","src":"262:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:20"},"nodeType":"YulFunctionCall","src":"316:39:20"},"nodeType":"YulExpressionStatement","src":"316:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:20","type":""}],"src":"7:354:20"},{"body":{"nodeType":"YulBlock","src":"430:80:20","statements":[{"nodeType":"YulAssignment","src":"440:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"455:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:20"},"nodeType":"YulFunctionCall","src":"449:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"440:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"471:26:20"},"nodeType":"YulFunctionCall","src":"471:33:20"},"nodeType":"YulExpressionStatement","src":"471:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"416:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"424:5:20","type":""}],"src":"367:143:20"},{"body":{"nodeType":"YulBlock","src":"579:80:20","statements":[{"nodeType":"YulAssignment","src":"589:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"604:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"598:5:20"},"nodeType":"YulFunctionCall","src":"598:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"589:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"620:26:20"},"nodeType":"YulFunctionCall","src":"620:33:20"},"nodeType":"YulExpressionStatement","src":"620:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"557:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"565:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"573:5:20","type":""}],"src":"516:143:20"},{"body":{"nodeType":"YulBlock","src":"752:215:20","statements":[{"body":{"nodeType":"YulBlock","src":"801:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"810:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"813:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"803:6:20"},"nodeType":"YulFunctionCall","src":"803:12:20"},"nodeType":"YulExpressionStatement","src":"803:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"788:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"776:3:20"},"nodeType":"YulFunctionCall","src":"776:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"795:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"772:3:20"},"nodeType":"YulFunctionCall","src":"772:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"765:6:20"},"nodeType":"YulFunctionCall","src":"765:35:20"},"nodeType":"YulIf","src":"762:2:20"},{"nodeType":"YulVariableDeclaration","src":"826:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"846:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"840:5:20"},"nodeType":"YulFunctionCall","src":"840:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"830:6:20","type":""}]},{"nodeType":"YulAssignment","src":"862:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"934:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"942:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:20"},"nodeType":"YulFunctionCall","src":"930:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"949:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"957:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"871:58:20"},"nodeType":"YulFunctionCall","src":"871:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"862:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"730:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"738:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"746:5:20","type":""}],"src":"679:288:20"},{"body":{"nodeType":"YulBlock","src":"1036:80:20","statements":[{"nodeType":"YulAssignment","src":"1046:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1061:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1055:5:20"},"nodeType":"YulFunctionCall","src":"1055:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1046:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1104:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1077:26:20"},"nodeType":"YulFunctionCall","src":"1077:33:20"},"nodeType":"YulExpressionStatement","src":"1077:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1014:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1022:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1030:5:20","type":""}],"src":"973:143:20"},{"body":{"nodeType":"YulBlock","src":"1184:79:20","statements":[{"nodeType":"YulAssignment","src":"1194:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1209:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1203:5:20"},"nodeType":"YulFunctionCall","src":"1203:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1251:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1225:25:20"},"nodeType":"YulFunctionCall","src":"1225:32:20"},"nodeType":"YulExpressionStatement","src":"1225:32:20"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1162:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1170:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1178:5:20","type":""}],"src":"1122:141:20"},{"body":{"nodeType":"YulBlock","src":"1331:79:20","statements":[{"nodeType":"YulAssignment","src":"1341:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1356:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1350:5:20"},"nodeType":"YulFunctionCall","src":"1350:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1341:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1398:5:20"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1372:25:20"},"nodeType":"YulFunctionCall","src":"1372:32:20"},"nodeType":"YulExpressionStatement","src":"1372:32:20"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1309:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1317:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1325:5:20","type":""}],"src":"1269:141:20"},{"body":{"nodeType":"YulBlock","src":"1664:1655:20","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:20"},"nodeType":"YulFunctionCall","src":"1713:12:20"},"nodeType":"YulExpressionStatement","src":"1713:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:20"},"nodeType":"YulFunctionCall","src":"1681:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1706:3:20","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:20"},"nodeType":"YulFunctionCall","src":"1677:33:20"},"nodeType":"YulIf","src":"1674:2:20"},{"nodeType":"YulBlock","src":"1737:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1752:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1776:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:20"},"nodeType":"YulFunctionCall","src":"1772:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1766:5:20"},"nodeType":"YulFunctionCall","src":"1766:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1756:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1837:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1849:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1839:6:20"},"nodeType":"YulFunctionCall","src":"1839:12:20"},"nodeType":"YulExpressionStatement","src":"1839:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1809:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1817:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1806:2:20"},"nodeType":"YulFunctionCall","src":"1806:30:20"},"nodeType":"YulIf","src":"1803:2:20"},{"nodeType":"YulAssignment","src":"1867:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1923:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1934:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1919:3:20"},"nodeType":"YulFunctionCall","src":"1919:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1943:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1877:41:20"},"nodeType":"YulFunctionCall","src":"1877:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1867:6:20"}]}]},{"nodeType":"YulBlock","src":"1971:225:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1986:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2021:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:20"},"nodeType":"YulFunctionCall","src":"2006:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2000:5:20"},"nodeType":"YulFunctionCall","src":"2000:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1990:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2072:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2081:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2084:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2074:6:20"},"nodeType":"YulFunctionCall","src":"2074:12:20"},"nodeType":"YulExpressionStatement","src":"2074:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2044:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2052:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2041:2:20"},"nodeType":"YulFunctionCall","src":"2041:30:20"},"nodeType":"YulIf","src":"2038:2:20"},{"nodeType":"YulAssignment","src":"2102:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:20"},"nodeType":"YulFunctionCall","src":"2154:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2112:41:20"},"nodeType":"YulFunctionCall","src":"2112:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2102:6:20"}]}]},{"nodeType":"YulBlock","src":"2206:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2221:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2235:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2225:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2251:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:20"},"nodeType":"YulFunctionCall","src":"2293:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2261:31:20"},"nodeType":"YulFunctionCall","src":"2261:64:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2251:6:20"}]}]},{"nodeType":"YulBlock","src":"2345:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2390:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2447:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:20"},"nodeType":"YulFunctionCall","src":"2432:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2456:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2400:31:20"},"nodeType":"YulFunctionCall","src":"2400:64:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2390:6:20"}]}]},{"nodeType":"YulBlock","src":"2484:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2499:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2513:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2530:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2587:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:20"},"nodeType":"YulFunctionCall","src":"2572:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2596:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2540:31:20"},"nodeType":"YulFunctionCall","src":"2540:64:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2530:6:20"}]}]},{"nodeType":"YulBlock","src":"2624:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2639:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2653:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2643:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2670:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2727:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:20"},"nodeType":"YulFunctionCall","src":"2712:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2736:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2680:31:20"},"nodeType":"YulFunctionCall","src":"2680:64:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2670:6:20"}]}]},{"nodeType":"YulBlock","src":"2764:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2779:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2793:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2783:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2810:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2856:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2867:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2852:3:20"},"nodeType":"YulFunctionCall","src":"2852:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2876:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2820:31:20"},"nodeType":"YulFunctionCall","src":"2820:64:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2810:6:20"}]}]},{"nodeType":"YulBlock","src":"2904:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2919:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2933:3:20","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2923:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2950:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2995:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3006:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2991:3:20"},"nodeType":"YulFunctionCall","src":"2991:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3015:7:20"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"2960:30:20"},"nodeType":"YulFunctionCall","src":"2960:63:20"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2950:6:20"}]}]},{"nodeType":"YulBlock","src":"3043:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3058:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3072:3:20","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3062:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3089:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3135:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3146:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3131:3:20"},"nodeType":"YulFunctionCall","src":"3131:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3155:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"3099:31:20"},"nodeType":"YulFunctionCall","src":"3099:64:20"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"3089:6:20"}]}]},{"nodeType":"YulBlock","src":"3183:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3198:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3212:3:20","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3202:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3229:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3285:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3270:3:20"},"nodeType":"YulFunctionCall","src":"3270:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3294:7:20"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3239:30:20"},"nodeType":"YulFunctionCall","src":"3239:63:20"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"3229:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint64t_bytes32t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1562:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1573:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1585:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1593:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1601:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1609:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1617:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1625:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1633:6:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1641:6:20","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1649:6:20","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1657:6:20","type":""}],"src":"1416:1903:20"},{"body":{"nodeType":"YulBlock","src":"3366:88:20","statements":[{"nodeType":"YulAssignment","src":"3376:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3386:18:20"},"nodeType":"YulFunctionCall","src":"3386:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3376:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3435:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"3443:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3415:19:20"},"nodeType":"YulFunctionCall","src":"3415:33:20"},"nodeType":"YulExpressionStatement","src":"3415:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3350:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3359:6:20","type":""}],"src":"3325:129:20"},{"body":{"nodeType":"YulBlock","src":"3500:35:20","statements":[{"nodeType":"YulAssignment","src":"3510:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3526:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3520:5:20"},"nodeType":"YulFunctionCall","src":"3520:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3510:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3493:6:20","type":""}],"src":"3460:75:20"},{"body":{"nodeType":"YulBlock","src":"3608:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"3713:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3715:16:20"},"nodeType":"YulFunctionCall","src":"3715:18:20"},"nodeType":"YulExpressionStatement","src":"3715:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3685:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3693:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3682:2:20"},"nodeType":"YulFunctionCall","src":"3682:30:20"},"nodeType":"YulIf","src":"3679:2:20"},{"nodeType":"YulAssignment","src":"3745:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3775:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3753:21:20"},"nodeType":"YulFunctionCall","src":"3753:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3745:4:20"}]},{"nodeType":"YulAssignment","src":"3819:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3831:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3837:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:20"},"nodeType":"YulFunctionCall","src":"3827:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3819:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3592:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3603:4:20","type":""}],"src":"3541:308:20"},{"body":{"nodeType":"YulBlock","src":"3900:51:20","statements":[{"nodeType":"YulAssignment","src":"3910:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3939:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3921:17:20"},"nodeType":"YulFunctionCall","src":"3921:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3910:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3882:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3892:7:20","type":""}],"src":"3855:96:20"},{"body":{"nodeType":"YulBlock","src":"4002:32:20","statements":[{"nodeType":"YulAssignment","src":"4012:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4023:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4012:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3984:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3994:7:20","type":""}],"src":"3957:77:20"},{"body":{"nodeType":"YulBlock","src":"4085:81:20","statements":[{"nodeType":"YulAssignment","src":"4095:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4110:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4117:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4106:3:20"},"nodeType":"YulFunctionCall","src":"4106:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4095:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4067:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4077:7:20","type":""}],"src":"4040:126:20"},{"body":{"nodeType":"YulBlock","src":"4217:32:20","statements":[{"nodeType":"YulAssignment","src":"4227:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4238:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4227:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4199:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4209:7:20","type":""}],"src":"4172:77:20"},{"body":{"nodeType":"YulBlock","src":"4299:49:20","statements":[{"nodeType":"YulAssignment","src":"4309:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4324:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4331:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4320:3:20"},"nodeType":"YulFunctionCall","src":"4320:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4309:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4281:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4291:7:20","type":""}],"src":"4255:93:20"},{"body":{"nodeType":"YulBlock","src":"4398:57:20","statements":[{"nodeType":"YulAssignment","src":"4408:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4430:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4419:3:20"},"nodeType":"YulFunctionCall","src":"4419:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4408:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4380:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4390:7:20","type":""}],"src":"4354:101:20"},{"body":{"nodeType":"YulBlock","src":"4510:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4520:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4529:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4524:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4589:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4614:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4619:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4610:3:20"},"nodeType":"YulFunctionCall","src":"4610:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4633:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4638:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4629:3:20"},"nodeType":"YulFunctionCall","src":"4629:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4623:5:20"},"nodeType":"YulFunctionCall","src":"4623:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4603:6:20"},"nodeType":"YulFunctionCall","src":"4603:39:20"},"nodeType":"YulExpressionStatement","src":"4603:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4550:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"4553:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4547:2:20"},"nodeType":"YulFunctionCall","src":"4547:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4561:19:20","statements":[{"nodeType":"YulAssignment","src":"4563:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4572:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"4575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:20"},"nodeType":"YulFunctionCall","src":"4568:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4563:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"4543:3:20","statements":[]},"src":"4539:113:20"},{"body":{"nodeType":"YulBlock","src":"4686:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4736:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4741:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4732:3:20"},"nodeType":"YulFunctionCall","src":"4732:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"4750:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4725:6:20"},"nodeType":"YulFunctionCall","src":"4725:27:20"},"nodeType":"YulExpressionStatement","src":"4725:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4667:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"4670:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4664:2:20"},"nodeType":"YulFunctionCall","src":"4664:13:20"},"nodeType":"YulIf","src":"4661:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4492:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4497:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4502:6:20","type":""}],"src":"4461:307:20"},{"body":{"nodeType":"YulBlock","src":"4825:269:20","statements":[{"nodeType":"YulAssignment","src":"4835:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4849:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4855:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4845:3:20"},"nodeType":"YulFunctionCall","src":"4845:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4835:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4866:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4896:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4902:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4892:3:20"},"nodeType":"YulFunctionCall","src":"4892:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4870:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4943:51:20","statements":[{"nodeType":"YulAssignment","src":"4957:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4971:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4979:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4967:3:20"},"nodeType":"YulFunctionCall","src":"4967:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4957:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4923:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4916:6:20"},"nodeType":"YulFunctionCall","src":"4916:26:20"},"nodeType":"YulIf","src":"4913:2:20"},{"body":{"nodeType":"YulBlock","src":"5046:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5060:16:20"},"nodeType":"YulFunctionCall","src":"5060:18:20"},"nodeType":"YulExpressionStatement","src":"5060:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5010:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5033:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5041:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5030:2:20"},"nodeType":"YulFunctionCall","src":"5030:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5007:2:20"},"nodeType":"YulFunctionCall","src":"5007:38:20"},"nodeType":"YulIf","src":"5004:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4809:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4818:6:20","type":""}],"src":"4774:320:20"},{"body":{"nodeType":"YulBlock","src":"5143:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5153:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5175:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5205:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5183:21:20"},"nodeType":"YulFunctionCall","src":"5183:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:20"},"nodeType":"YulFunctionCall","src":"5171:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5157:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5322:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5324:16:20"},"nodeType":"YulFunctionCall","src":"5324:18:20"},"nodeType":"YulExpressionStatement","src":"5324:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5265:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"5277:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5262:2:20"},"nodeType":"YulFunctionCall","src":"5262:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5301:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5313:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5298:2:20"},"nodeType":"YulFunctionCall","src":"5298:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5259:2:20"},"nodeType":"YulFunctionCall","src":"5259:62:20"},"nodeType":"YulIf","src":"5256:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5360:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5353:6:20"},"nodeType":"YulFunctionCall","src":"5353:22:20"},"nodeType":"YulExpressionStatement","src":"5353:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5129:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"5137:4:20","type":""}],"src":"5100:281:20"},{"body":{"nodeType":"YulBlock","src":"5415:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5432:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5435:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5425:6:20"},"nodeType":"YulFunctionCall","src":"5425:88:20"},"nodeType":"YulExpressionStatement","src":"5425:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5529:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5532:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5522:6:20"},"nodeType":"YulFunctionCall","src":"5522:15:20"},"nodeType":"YulExpressionStatement","src":"5522:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5553:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5556:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5546:6:20"},"nodeType":"YulFunctionCall","src":"5546:15:20"},"nodeType":"YulExpressionStatement","src":"5546:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5387:180:20"},{"body":{"nodeType":"YulBlock","src":"5601:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5618:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5621:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:20"},"nodeType":"YulFunctionCall","src":"5611:88:20"},"nodeType":"YulExpressionStatement","src":"5611:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5718:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5708:6:20"},"nodeType":"YulFunctionCall","src":"5708:15:20"},"nodeType":"YulExpressionStatement","src":"5708:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5739:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5742:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5732:6:20"},"nodeType":"YulFunctionCall","src":"5732:15:20"},"nodeType":"YulExpressionStatement","src":"5732:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5573:180:20"},{"body":{"nodeType":"YulBlock","src":"5807:54:20","statements":[{"nodeType":"YulAssignment","src":"5817:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5835:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5842:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:20"},"nodeType":"YulFunctionCall","src":"5831:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5851:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5847:3:20"},"nodeType":"YulFunctionCall","src":"5847:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5827:3:20"},"nodeType":"YulFunctionCall","src":"5827:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5817:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5790:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5800:6:20","type":""}],"src":"5759:102:20"},{"body":{"nodeType":"YulBlock","src":"5910:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"5967:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5976:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5979:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5969:6:20"},"nodeType":"YulFunctionCall","src":"5969:12:20"},"nodeType":"YulExpressionStatement","src":"5969:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5933:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5958:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5940:17:20"},"nodeType":"YulFunctionCall","src":"5940:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5930:2:20"},"nodeType":"YulFunctionCall","src":"5930:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5923:6:20"},"nodeType":"YulFunctionCall","src":"5923:43:20"},"nodeType":"YulIf","src":"5920:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:20","type":""}],"src":"5867:122:20"},{"body":{"nodeType":"YulBlock","src":"6038:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6095:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6104:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6107:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6097:6:20"},"nodeType":"YulFunctionCall","src":"6097:12:20"},"nodeType":"YulExpressionStatement","src":"6097:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6061:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6086:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6068:17:20"},"nodeType":"YulFunctionCall","src":"6068:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6058:2:20"},"nodeType":"YulFunctionCall","src":"6058:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6051:6:20"},"nodeType":"YulFunctionCall","src":"6051:43:20"},"nodeType":"YulIf","src":"6048:2:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6031:5:20","type":""}],"src":"5995:122:20"},{"body":{"nodeType":"YulBlock","src":"6166:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6223:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6232:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6235:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6225:6:20"},"nodeType":"YulFunctionCall","src":"6225:12:20"},"nodeType":"YulExpressionStatement","src":"6225:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6189:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6214:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6196:17:20"},"nodeType":"YulFunctionCall","src":"6196:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6186:2:20"},"nodeType":"YulFunctionCall","src":"6186:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6179:6:20"},"nodeType":"YulFunctionCall","src":"6179:43:20"},"nodeType":"YulIf","src":"6176:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6159:5:20","type":""}],"src":"6123:122:20"},{"body":{"nodeType":"YulBlock","src":"6293:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"6349:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6358:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6361:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6351:6:20"},"nodeType":"YulFunctionCall","src":"6351:12:20"},"nodeType":"YulExpressionStatement","src":"6351:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6316:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6323:16:20"},"nodeType":"YulFunctionCall","src":"6323:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6313:2:20"},"nodeType":"YulFunctionCall","src":"6313:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6306:6:20"},"nodeType":"YulFunctionCall","src":"6306:42:20"},"nodeType":"YulIf","src":"6303:2:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6286:5:20","type":""}],"src":"6251:120:20"},{"body":{"nodeType":"YulBlock","src":"6419:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"6475:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6484:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6487:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6477:6:20"},"nodeType":"YulFunctionCall","src":"6477:12:20"},"nodeType":"YulExpressionStatement","src":"6477:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6442:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6466:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"6449:16:20"},"nodeType":"YulFunctionCall","src":"6449:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6439:2:20"},"nodeType":"YulFunctionCall","src":"6439:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6432:6:20"},"nodeType":"YulFunctionCall","src":"6432:42:20"},"nodeType":"YulIf","src":"6429:2:20"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6412:5:20","type":""}],"src":"6377:120:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_addresst_uint64t_bytes32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405242600e553480156200001657600080fd5b5060405162005d4b38038062005d4b83398181016040528101906200003c9190620003d2565b838a8a6200005f620000536200017160201b60201c565b6200017960201b60201c565b8160019080519060200190620000779291906200023d565b508060029080519060200190620000909291906200023d565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508760a081815250508660c081815250508373ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508267ffffffffffffffff166101008167ffffffffffffffff1660c01b815250508161012081815250508063ffffffff166101408163ffffffff1660e01b8152505085600c8190555084600d819055505050505050505050505062000752565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200024b90620005f5565b90600052602060002090601f0160209004810192826200026f5760008555620002bb565b82601f106200028a57805160ff1916838001178555620002bb565b82800160010185558215620002bb579182015b82811115620002ba5782518255916020019190600101906200029d565b5b509050620002ca9190620002ce565b5090565b5b80821115620002e9576000816000905550600101620002cf565b5090565b600062000304620002fe846200051d565b620004f4565b9050828152602081018484840111156200031d57600080fd5b6200032a848285620005bf565b509392505050565b6000815190506200034381620006d0565b92915050565b6000815190506200035a81620006ea565b92915050565b600082601f8301126200037257600080fd5b815162000384848260208601620002ed565b91505092915050565b6000815190506200039e8162000704565b92915050565b600081519050620003b5816200071e565b92915050565b600081519050620003cc8162000738565b92915050565b6000806000806000806000806000806101408b8d031215620003f357600080fd5b60008b015167ffffffffffffffff8111156200040e57600080fd5b6200041c8d828e0162000360565b9a505060208b015167ffffffffffffffff8111156200043a57600080fd5b620004488d828e0162000360565b99505060406200045b8d828e016200038d565b98505060606200046e8d828e016200038d565b9750506080620004818d828e016200038d565b96505060a0620004948d828e016200038d565b95505060c0620004a78d828e0162000332565b94505060e0620004ba8d828e01620003bb565b935050610100620004ce8d828e0162000349565b925050610120620004e28d828e01620003a4565b9150509295989b9194979a5092959850565b60006200050062000513565b90506200050e82826200062b565b919050565b6000604051905090565b600067ffffffffffffffff8211156200053b576200053a62000690565b5b6200054682620006bf565b9050602081019050919050565b6000620005608262000571565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60005b83811015620005df578082015181840152602081019050620005c2565b83811115620005ef576000848401525b50505050565b600060028204905060018216806200060e57607f821691505b6020821081141562000625576200062462000661565b5b50919050565b6200063682620006bf565b810181811067ffffffffffffffff8211171562000658576200065762000690565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006db8162000553565b8114620006e757600080fd5b50565b620006f58162000567565b81146200070157600080fd5b50565b6200070f8162000591565b81146200071b57600080fd5b50565b62000729816200059b565b81146200073557600080fd5b50565b6200074381620005ab565b81146200074f57600080fd5b50565b60805160601c60a05160c05160e05160601c6101005160c01c610120516101405160e01c61557d620007ce60003960006111e4015260006111a0015260006111c10152600061116401526000818161137d01526114b201526000818161131701526115e3015260008181610b120152610b66015261557d6000f3fe60806040526004361061020f5760003560e01c80637b4fab5a11610118578063bbd78e93116100a0578063d5abeb011161006f578063d5abeb0114610791578063e985e9c5146107bc578063f2fde38b146107f9578063f4daaba114610822578063f81909661461084d5761020f565b8063bbd78e93146106d3578063bdb4b848146106fe578063c87b56dd14610729578063cf3b94cd146107665761020f565b806396634a40116100e757806396634a4014610611578063a0712d681461063c578063a22cb46514610658578063aaae4e2314610681578063b88d4fde146106aa5761020f565b80637b4fab5a146105795780638da5cb5b146105a45780639038e693146105cf57806395d89b41146105e65761020f565b80632f745c591161019b5780635c65d81f1161016a5780635c65d81f146104815780636352211e146104aa5780636e04ff0d146104e757806370a0823114610525578063715018a6146105625761020f565b80632f745c59146103b557806342842e0e146103f25780634585e33b1461041b5780634f6ccce7146104445761020f565b8063095ea7b3116101e2578063095ea7b3146102e457806318160ddd1461030d5780631fe543e31461033857806323b872dd14610361578063247cd8ad1461038a5761020f565b806301ffc9a71461021457806306f130561461025157806306fdde031461027c578063081812fc146102a7575b600080fd5b34801561022057600080fd5b5061023b60048036038101906102369190613ccf565b61088c565b60405161024891906144f2565b60405180910390f35b34801561025d57600080fd5b50610266610906565b60405161027391906147b2565b60405180910390f35b34801561028857600080fd5b50610291610913565b60405161029e9190614590565b60405180910390f35b3480156102b357600080fd5b506102ce60048036038101906102c99190613d66565b6109a5565b6040516102db9190614462565b60405180910390f35b3480156102f057600080fd5b5061030b60048036038101906103069190613c93565b6109eb565b005b34801561031957600080fd5b50610322610b03565b60405161032f91906147b2565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190613db8565b610b10565b005b34801561036d57600080fd5b5061038860048036038101906103839190613b8d565b610bd0565b005b34801561039657600080fd5b5061039f610c30565b6040516103ac91906147b2565b60405180910390f35b3480156103c157600080fd5b506103dc60048036038101906103d79190613c93565b610c3a565b6040516103e991906147b2565b60405180910390f35b3480156103fe57600080fd5b5061041960048036038101906104149190613b8d565b610cdf565b005b34801561042757600080fd5b50610442600480360381019061043d9190613d21565b610cff565b005b34801561045057600080fd5b5061046b60048036038101906104669190613d66565b610d0c565b60405161047891906147b2565b60405180910390f35b34801561048d57600080fd5b506104a860048036038101906104a39190613d66565b610da3565b005b3480156104b657600080fd5b506104d160048036038101906104cc9190613d66565b610db5565b6040516104de9190614462565b60405180910390f35b3480156104f357600080fd5b5061050e60048036038101906105099190613d21565b610e67565b60405161051c92919061450d565b60405180910390f35b34801561053157600080fd5b5061054c60048036038101906105479190613b28565b610e95565b60405161055991906147b2565b60405180910390f35b34801561056e57600080fd5b50610577610f4d565b005b34801561058557600080fd5b5061058e610f61565b60405161059b91906147b2565b60405180910390f35b3480156105b057600080fd5b506105b9610f6b565b6040516105c69190614462565b60405180910390f35b3480156105db57600080fd5b506105e4610f94565b005b3480156105f257600080fd5b506105fb611049565b6040516106089190614590565b60405180910390f35b34801561061d57600080fd5b506106266110db565b60405161063391906147b2565b60405180910390f35b61065660048036038101906106519190613d66565b6112ce565b005b34801561066457600080fd5b5061067f600480360381019061067a9190613c57565b61141a565b005b34801561068d57600080fd5b506106a860048036038101906106a39190613d66565b611430565b005b3480156106b657600080fd5b506106d160048036038101906106cc9190613bdc565b611442565b005b3480156106df57600080fd5b506106e86114a4565b6040516106f591906147b2565b60405180910390f35b34801561070a57600080fd5b506107136114ae565b60405161072091906147b2565b60405180910390f35b34801561073557600080fd5b50610750600480360381019061074b9190613d66565b6114d6565b60405161075d9190614590565b60405180910390f35b34801561077257600080fd5b5061077b611556565b60405161078891906144f2565b60405180910390f35b34801561079d57600080fd5b506107a66115df565b6040516107b391906147b2565b60405180910390f35b3480156107c857600080fd5b506107e360048036038101906107de9190613b51565b611607565b6040516107f091906144f2565b60405180910390f35b34801561080557600080fd5b50610820600480360381019061081b9190613b28565b61169b565b005b34801561082e57600080fd5b5061083761171f565b60405161084491906147b2565b60405180910390f35b34801561085957600080fd5b50610874600480360381019061086f9190613d66565b611729565b604051610883939291906147f6565b60405180910390f35b6000610897826117bf565b806108ff57507fe7fb86c6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000601080549050905090565b60606001805461092290614bad565b80601f016020809104026020016040519081016040528092919081815260200182805461094e90614bad565b801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b5050505050905090565b60006109b082611839565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109f682610db5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5e90614752565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a86611884565b73ffffffffffffffffffffffffffffffffffffffff161480610ab55750610ab481610aaf611884565b611607565b5b610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb906146d2565b60405180910390fd5b610afe838361188c565b505050565b6000600980549050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc257337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610bb992919061447d565b60405180910390fd5b610bcc8282611945565b5050565b610be1610bdb611884565b82611993565b610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1790614792565b60405180910390fd5b610c2b838383611a28565b505050565b6000600d54905090565b6000610c4583610e95565b8210610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d906145d2565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610cfa83838360405180602001604052806000815250611442565b505050565b610d076110db565b505050565b6000610d16610b03565b8210610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90614772565b60405180910390fd5b60098281548110610d91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b610dab611c8f565b80600d8190555050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590614732565b60405180910390fd5b80915050919050565b60006060600f60009054906101000a900460ff16158015610e8c5750610e8b611556565b5b91509250929050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd906146b2565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f55611c8f565b610f5f6000611d0d565b565b6000600e54905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f9c611c8f565b6000610fa6610f6b565b73ffffffffffffffffffffffffffffffffffffffff1647604051610fc990614420565b60006040518083038185875af1925050503d8060008114611006576040519150601f19603f3d011682016040523d82523d6000602084013e61100b565b606091505b5050905080611046576040517f0ca5b23000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60606002805461105890614bad565b80601f016020809104026020016040519081016040528092919081815260200182805461108490614bad565b80156110d15780601f106110a6576101008083540402835291602001916110d1565b820191906000526020600020905b8154815290600101906020018083116110b457829003601f168201915b5050505050905090565b6000600f60009054906101000a900460ff1615611124576040517fd0cf055400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61112c611556565b611162576040517f4e628ebc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161122595949392919061453d565b602060405180830381600087803b15801561123f57600080fd5b505af1158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112779190613d8f565b90506001600f60006101000a81548160ff0219169083151502179055507f8d83bdd6db199ff596cec09ea8e4f4e50da2dcb4020bc2a1cf072c507056b1ea816040516112c391906147b2565b60405180910390a190565b60006112d8610b03565b90506000821415611315576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000828261134291906148fd565b111561137a576040517fd05cb60900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b817f00000000000000000000000000000000000000000000000000000000000000006113a691906149bb565b3410156113df576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600190505b828111611415576114023382846113fd91906148fd565b611dd1565b808061140d90614c10565b9150506113e6565b505050565b61142c611425611884565b8383611def565b5050565b611438611c8f565b80600c8190555050565b61145361144d611884565b83611993565b611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990614792565b60405180910390fd5b61149e84848484611f5c565b50505050565b6000600b54905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606114e182611fb8565b611517576040517f9430a17e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061152384612024565b9150915060006115338383612178565b9050600061154082612770565b905061154b81612803565b945050505050919050565b600080600b54611564610b03565b61156e9190614a50565b905060008114156115835760009150506115dc565b600080600c541180156115985750600c548210155b156115a257600190505b600080600d541180156115c35750600d54600e54426115c19190614a50565b115b156115cd57600190505b81806115d65750805b93505050505b90565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116a3611c8f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170a90614612565b60405180910390fd5b61171c81611d0d565b50565b6000600c54905090565b60008060008060108581548110611769577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611832575061183182612853565b5b9050919050565b61184281611fb8565b611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187890614732565b60405180910390fd5b50565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166118ff83610db5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61198f81600081518110611982577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151612935565b5050565b60008061199f83610db5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119e157506119e08185611607565b5b80611a1f57508373ffffffffffffffffffffffffffffffffffffffff16611a07846109a5565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a4882610db5565b73ffffffffffffffffffffffffffffffffffffffff1614611a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9590614632565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0590614672565b60405180910390fd5b611b19838383612a33565b611b2460008261188c565b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b749190614a50565b925050819055506001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bcb91906148fd565b92505081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611c8a838383612b47565b505050565b611c97611884565b73ffffffffffffffffffffffffffffffffffffffff16611cb5610f6b565b73ffffffffffffffffffffffffffffffffffffffff1614611d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0290614712565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611deb828260405180602001604052806000815250612b4c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5590614692565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611f4f91906144f2565b60405180910390a3505050565b611f67848484611a28565b611f7384848484612ba7565b611fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa9906145f2565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60008060005b6010805490508110156121725760108181548110612071577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016000015484101580156120dc5750601081815481106120c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016001015484105b1561215f576010818154811061211b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600201548460405160200161213f9291906147cd565b6040516020818303038152906040528051906020012060001c9250600191505b808061216a90614c10565b91505061202a565b50915091565b6060612182613914565b6040518060a001604052806062815260200161537c60629139816000600481106121d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018190525082156124fd576040518060c00160405280608d81526020016154bb608d913981600160048110612236577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018190525061224661393b565b6000612253866020612d3e565b905060005b60068160ff16101561231557600061229b83600b846122779190614a15565b60ff16600b6001866122899190614953565b6122939190614a15565b60ff16613038565b9050806040516020016122ae9190614435565b604051602081830303815290604052848360ff16600681106122f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018190525050808061230d90614c59565b915050612258565b5081600060068110612350577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260016006811061238f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151836002600681106123ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518460036006811061240d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518560046006811061244c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518660056006811061248b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040516020016124a596959493929190614342565b604051602081830303815290604052836002600481106124ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018190525050506125d1565b6040518060c00160405280609d815260200161541e609d913981600160048110612550577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201819052506040518060400160405280600181526020017f3f00000000000000000000000000000000000000000000000000000000000000815250816002600481106125c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201819052505b6040518060400160405280600d81526020017f3c2f746578743e3c2f7376673e0000000000000000000000000000000000000081525081600360048110612641577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018190525080600060048110612683577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151816001600481106126c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600260048110612701577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015183600360048110612740577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040516020016127589493929190614304565b60405160208183030381529060405291505092915050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006127d6846040516020016127c291906142c9565b6040516020818303038152906040526131a6565b905081816040516020016127eb9291906142e0565b60405160208183030381529060405292505050919050565b606061282d82604051602001612819919061439a565b6040516020818303038152906040526131a6565b60405160200161283d91906143fe565b6040516020818303038152906040529050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061291e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061292e575061292d82613330565b5b9050919050565b600061293f610b03565b905060006001600b5461295291906148fd565b9050600060018361296391906148fd565b905060106040518060600160405280848152602001838152602001868152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020155505082600b8190555042600e819055506000600f60006101000a81548160ff0219169083151502179055507fa39d9410abe7578bfbf71501989f175c50a6950b6595718dd8092474541c889b8282604051612a259291906147cd565b60405180910390a150505050565b612a3e83838361339a565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612a8157612a7c8161339f565b612ac0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612abf57612abe83826133e8565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612b0357612afe81613555565b612b42565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612b4157612b408282613698565b5b5b505050565b505050565b612b568383613717565b612b636000848484612ba7565b612ba2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b99906145f2565b60405180910390fd5b505050565b6000612bc88473ffffffffffffffffffffffffffffffffffffffff166138f1565b15612d31578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612bf1611884565b8786866040518563ffffffff1660e01b8152600401612c1394939291906144a6565b602060405180830381600087803b158015612c2d57600080fd5b505af1925050508015612c5e57506040513d601f19601f82011682018060405250810190612c5b9190613cf8565b60015b612ce1573d8060008114612c8e576040519150601f19603f3d011682016040523d82523d6000602084013e612c93565b606091505b50600081511415612cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd0906145f2565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612d36565b600190505b949350505050565b606060006002836002612d5191906149bb565b612d5b91906148fd565b67ffffffffffffffff811115612d9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612dcc5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612e2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612eb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612ef491906149bb565b612efe91906148fd565b90505b6001811115612fea577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612f66577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110612fa3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612fe390614b83565b9050612f01565b506000841461302e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613025906145b2565b60405180910390fd5b8091505092915050565b606060008490506000848461304d9190614a50565b67ffffffffffffffff81111561308c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156130be5781602001600182028036833780820191505090505b50905060008590505b8481101561319957828181518110613108577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b8287836131209190614a50565b81518110613157577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061319190614c10565b9150506130c7565b5080925050509392505050565b60606000825114156131c95760405180602001604052806000815250905061332b565b60006040518060600160405280604081526020016153de60409139905060006003600285516131f891906148fd565b613202919061498a565b600461320e91906149bb565b67ffffffffffffffff81111561324d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561327f5781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156132eb576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050613290565b5050600386510660018114613307576002811461331a57613322565b603d6001830353603d6002830353613322565b603d60018303535b50505080925050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133f584610e95565b6133ff9190614a50565b90506000600860008481526020019081526020016000205490508181146134e4576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816008600083815260200190815260200160002081905550505b6008600084815260200190815260200160002060009055600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016009805490506135699190614a50565b90506000600a60008481526020019081526020016000205490506000600983815481106135bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508060098381548110613607577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555081600a600083815260200190815260200160002081905550600a600085815260200190815260200160002060009055600980548061367c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006136a383610e95565b905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806008600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161377e906146f2565b60405180910390fd5b61379081611fb8565b156137d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137c790614652565b60405180910390fd5b6137dc60008383612a33565b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461382c91906148fd565b92505081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46138ed60008383612b47565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60405180608001604052806004905b60608152602001906001900390816139235790505090565b6040518060c001604052806006905b606081526020019060019003908161394a5790505090565b600061397561397084614852565b61482d565b9050808382526020820190508285602086028201111561399457600080fd5b60005b858110156139c457816139aa8882613afe565b845260208401935060208301925050600181019050613997565b5050509392505050565b60006139e16139dc8461487e565b61482d565b9050828152602081018484840111156139f957600080fd5b613a04848285614b41565b509392505050565b600081359050613a1b8161531f565b92915050565b600082601f830112613a3257600080fd5b8135613a42848260208601613962565b91505092915050565b600081359050613a5a81615336565b92915050565b600081359050613a6f8161534d565b92915050565b600081519050613a848161534d565b92915050565b60008083601f840112613a9c57600080fd5b8235905067ffffffffffffffff811115613ab557600080fd5b602083019150836001820283011115613acd57600080fd5b9250929050565b600082601f830112613ae557600080fd5b8135613af58482602086016139ce565b91505092915050565b600081359050613b0d81615364565b92915050565b600081519050613b2281615364565b92915050565b600060208284031215613b3a57600080fd5b6000613b4884828501613a0c565b91505092915050565b60008060408385031215613b6457600080fd5b6000613b7285828601613a0c565b9250506020613b8385828601613a0c565b9150509250929050565b600080600060608486031215613ba257600080fd5b6000613bb086828701613a0c565b9350506020613bc186828701613a0c565b9250506040613bd286828701613afe565b9150509250925092565b60008060008060808587031215613bf257600080fd5b6000613c0087828801613a0c565b9450506020613c1187828801613a0c565b9350506040613c2287828801613afe565b925050606085013567ffffffffffffffff811115613c3f57600080fd5b613c4b87828801613ad4565b91505092959194509250565b60008060408385031215613c6a57600080fd5b6000613c7885828601613a0c565b9250506020613c8985828601613a4b565b9150509250929050565b60008060408385031215613ca657600080fd5b6000613cb485828601613a0c565b9250506020613cc585828601613afe565b9150509250929050565b600060208284031215613ce157600080fd5b6000613cef84828501613a60565b91505092915050565b600060208284031215613d0a57600080fd5b6000613d1884828501613a75565b91505092915050565b60008060208385031215613d3457600080fd5b600083013567ffffffffffffffff811115613d4e57600080fd5b613d5a85828601613a8a565b92509250509250929050565b600060208284031215613d7857600080fd5b6000613d8684828501613afe565b91505092915050565b600060208284031215613da157600080fd5b6000613daf84828501613b13565b91505092915050565b60008060408385031215613dcb57600080fd5b6000613dd985828601613afe565b925050602083013567ffffffffffffffff811115613df657600080fd5b613e0285828601613a21565b9150509250929050565b613e1581614a84565b82525050565b613e2481614a96565b82525050565b613e3381614aa2565b82525050565b6000613e44826148af565b613e4e81856148c5565b9350613e5e818560208601614b50565b613e6781614d3f565b840191505092915050565b6000613e7d826148ba565b613e8781856148e1565b9350613e97818560208601614b50565b613ea081614d3f565b840191505092915050565b6000613eb6826148ba565b613ec081856148f2565b9350613ed0818560208601614b50565b80840191505092915050565b6000613ee96020836148e1565b9150613ef482614d50565b602082019050919050565b6000613f0c602b836148e1565b9150613f1782614d79565b604082019050919050565b6000613f2f6032836148e1565b9150613f3a82614dc8565b604082019050919050565b6000613f526026836148e1565b9150613f5d82614e17565b604082019050919050565b6000613f756025836148e1565b9150613f8082614e66565b604082019050919050565b6000613f98601c836148e1565b9150613fa382614eb5565b602082019050919050565b6000613fbb6008836148f2565b9150613fc682614ede565b600882019050919050565b6000613fde600e836148f2565b9150613fe982614f07565b600e82019050919050565b60006140016024836148e1565b915061400c82614f30565b604082019050919050565b60006140246019836148e1565b915061402f82614f7f565b602082019050919050565b60006140476011836148f2565b915061405282614fa8565b601182019050919050565b600061406a6029836148e1565b915061407582614fd1565b604082019050919050565b600061408d6001836148f2565b915061409882615020565b600182019050919050565b60006140b06025836148f2565b91506140bb82615049565b602582019050919050565b60006140d36009836148f2565b91506140de82615098565b600982019050919050565b60006140f6603e836148e1565b9150614101826150c1565b604082019050919050565b60006141196020836148e1565b915061412482615110565b602082019050919050565b600061413c6001836148f2565b915061414782615139565b600182019050919050565b600061415f6020836148e1565b915061416a82615162565b602082019050919050565b60006141826001836148f2565b915061418d8261518b565b600182019050919050565b60006141a56018836148e1565b91506141b0826151b4565b602082019050919050565b60006141c86021836148e1565b91506141d3826151dd565b604082019050919050565b60006141eb601d836148f2565b91506141f68261522c565b601d82019050919050565b600061420e6000836148d6565b915061421982615255565b600082019050919050565b6000614231602c836148e1565b915061423c82615258565b604082019050919050565b6000614254602e836148e1565b915061425f826152a7565b604082019050919050565b60006142776016836148f2565b9150614282826152f6565b601682019050919050565b61429681614ad8565b82525050565b6142a581614b06565b82525050565b6142b481614b10565b82525050565b6142c381614b20565b82525050565b60006142d58284613eab565b915081905092915050565b60006142ec8285613eab565b91506142f88284613eab565b91508190509392505050565b60006143108287613eab565b915061431c8286613eab565b91506143288285613eab565b91506143348284613eab565b915081905095945050505050565b600061434e8289613eab565b915061435a8288613eab565b91506143668287613eab565b91506143728286613eab565b915061437e8285613eab565b915061438a8284613eab565b9150819050979650505050505050565b60006143a582614175565b91506143b082613fd1565b91506143bb826140a3565b91506143c68261403a565b91506143d1826140c6565b91506143dd8284613eab565b91506143e882614080565b91506143f38261412f565b915081905092915050565b6000614409826141de565b91506144158284613eab565b915081905092915050565b600061442b82614201565b9150819050919050565b60006144408261426a565b915061444c8284613eab565b915061445782613fae565b915081905092915050565b60006020820190506144776000830184613e0c565b92915050565b60006040820190506144926000830185613e0c565b61449f6020830184613e0c565b9392505050565b60006080820190506144bb6000830187613e0c565b6144c86020830186613e0c565b6144d5604083018561429c565b81810360608301526144e78184613e39565b905095945050505050565b60006020820190506145076000830184613e1b565b92915050565b60006040820190506145226000830185613e1b565b81810360208301526145348184613e39565b90509392505050565b600060a0820190506145526000830188613e2a565b61455f60208301876142ba565b61456c604083018661428d565b61457960608301856142ab565b61458660808301846142ab565b9695505050505050565b600060208201905081810360008301526145aa8184613e72565b905092915050565b600060208201905081810360008301526145cb81613edc565b9050919050565b600060208201905081810360008301526145eb81613eff565b9050919050565b6000602082019050818103600083015261460b81613f22565b9050919050565b6000602082019050818103600083015261462b81613f45565b9050919050565b6000602082019050818103600083015261464b81613f68565b9050919050565b6000602082019050818103600083015261466b81613f8b565b9050919050565b6000602082019050818103600083015261468b81613ff4565b9050919050565b600060208201905081810360008301526146ab81614017565b9050919050565b600060208201905081810360008301526146cb8161405d565b9050919050565b600060208201905081810360008301526146eb816140e9565b9050919050565b6000602082019050818103600083015261470b8161410c565b9050919050565b6000602082019050818103600083015261472b81614152565b9050919050565b6000602082019050818103600083015261474b81614198565b9050919050565b6000602082019050818103600083015261476b816141bb565b9050919050565b6000602082019050818103600083015261478b81614224565b9050919050565b600060208201905081810360008301526147ab81614247565b9050919050565b60006020820190506147c7600083018461429c565b92915050565b60006040820190506147e2600083018561429c565b6147ef602083018461429c565b9392505050565b600060608201905061480b600083018661429c565b614818602083018561429c565b614825604083018461429c565b949350505050565b6000614837614848565b90506148438282614bdf565b919050565b6000604051905090565b600067ffffffffffffffff82111561486d5761486c614d10565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561489957614898614d10565b5b6148a282614d3f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061490882614b06565b915061491383614b06565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561494857614947614c83565b5b828201905092915050565b600061495e82614b34565b915061496983614b34565b92508260ff0382111561497f5761497e614c83565b5b828201905092915050565b600061499582614b06565b91506149a083614b06565b9250826149b0576149af614cb2565b5b828204905092915050565b60006149c682614b06565b91506149d183614b06565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614a0a57614a09614c83565b5b828202905092915050565b6000614a2082614b34565b9150614a2b83614b34565b92508160ff0483118215151615614a4557614a44614c83565b5b828202905092915050565b6000614a5b82614b06565b9150614a6683614b06565b925082821015614a7957614a78614c83565b5b828203905092915050565b6000614a8f82614ae6565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015614b6e578082015181840152602081019050614b53565b83811115614b7d576000848401525b50505050565b6000614b8e82614b06565b91506000821415614ba257614ba1614c83565b5b600182039050919050565b60006002820490506001821680614bc557607f821691505b60208210811415614bd957614bd8614ce1565b5b50919050565b614be882614d3f565b810181811067ffffffffffffffff82111715614c0757614c06614d10565b5b80604052505050565b6000614c1b82614b06565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614c4e57614c4d614c83565b5b600182019050919050565b6000614c6482614b34565b915060ff821415614c7857614c77614c83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f3c2f747370616e3e000000000000000000000000000000000000000000000000600082015250565b7f226e616d65223a224e4654222c20000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f2261747472696275746573223a22222c20000000000000000000000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b7f226465736372697074696f6e223a2242617463682d72657665616c6564204e4660008201527f5421222c20000000000000000000000000000000000000000000000000000000602082015250565b7f22696d616765223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f7d00000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f7b00000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b50565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b7f3c747370616e20783d223136222064793d223536223e00000000000000000000600082015250565b61532881614a84565b811461533357600080fd5b50565b61533f81614a96565b811461534a57600080fd5b50565b61535681614aac565b811461536157600080fd5b50565b61536d81614b06565b811461537857600080fd5b5056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a2033353070783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2239302220793d223239352220636c6173733d2262617365223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20353970783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420636c6173733d2262617365223ea264697066735822122007b9aa726c47c574fcca79070496365ead9237214c8c799611974748d795e0ff64736f6c63430008040033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE TIMESTAMP PUSH1 0xE SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5D4B CODESIZE SUB DUP1 PUSH3 0x5D4B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x3D2 JUMP JUMPDEST DUP4 DUP11 DUP11 PUSH3 0x5F PUSH3 0x53 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x179 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x77 SWAP3 SWAP2 SWAP1 PUSH3 0x23D JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x90 SWAP3 SWAP2 SWAP1 PUSH3 0x23D JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP8 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP7 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP2 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP6 PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x752 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x24B SWAP1 PUSH3 0x5F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x26F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x28A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CA SWAP2 SWAP1 PUSH3 0x2CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x304 PUSH3 0x2FE DUP5 PUSH3 0x51D JUMP JUMPDEST PUSH3 0x4F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32A DUP5 DUP3 DUP6 PUSH3 0x5BF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x343 DUP2 PUSH3 0x6D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x35A DUP2 PUSH3 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x39E DUP2 PUSH3 0x704 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3B5 DUP2 PUSH3 0x71E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3CC DUP2 PUSH3 0x738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP12 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x41C DUP14 DUP3 DUP15 ADD PUSH3 0x360 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 DUP12 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x448 DUP14 DUP3 DUP15 ADD PUSH3 0x360 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x45B DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x46E DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x481 DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x494 DUP14 DUP3 DUP15 ADD PUSH3 0x38D JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x4A7 DUP14 DUP3 DUP15 ADD PUSH3 0x332 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x4BA DUP14 DUP3 DUP15 ADD PUSH3 0x3BB JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x4CE DUP14 DUP3 DUP15 ADD PUSH3 0x349 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x4E2 DUP14 DUP3 DUP15 ADD PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x500 PUSH3 0x513 JUMP JUMPDEST SWAP1 POP PUSH3 0x50E DUP3 DUP3 PUSH3 0x62B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x53B JUMPI PUSH3 0x53A PUSH3 0x690 JUMP JUMPDEST JUMPDEST PUSH3 0x546 DUP3 PUSH3 0x6BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x560 DUP3 PUSH3 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5EF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x60E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x625 JUMPI PUSH3 0x624 PUSH3 0x661 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x636 DUP3 PUSH3 0x6BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x658 JUMPI PUSH3 0x657 PUSH3 0x690 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6DB DUP2 PUSH3 0x553 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F5 DUP2 PUSH3 0x567 JUMP JUMPDEST DUP2 EQ PUSH3 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x70F DUP2 PUSH3 0x591 JUMP JUMPDEST DUP2 EQ PUSH3 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x729 DUP2 PUSH3 0x59B JUMP JUMPDEST DUP2 EQ PUSH3 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x743 DUP2 PUSH3 0x5AB JUMP JUMPDEST DUP2 EQ PUSH3 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0xC0 SHR PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0xE0 SHR PUSH2 0x557D PUSH3 0x7CE PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x11E4 ADD MSTORE PUSH1 0x0 PUSH2 0x11A0 ADD MSTORE PUSH1 0x0 PUSH2 0x11C1 ADD MSTORE PUSH1 0x0 PUSH2 0x1164 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x137D ADD MSTORE PUSH2 0x14B2 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1317 ADD MSTORE PUSH2 0x15E3 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xB12 ADD MSTORE PUSH2 0xB66 ADD MSTORE PUSH2 0x557D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B4FAB5A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xBBD78E93 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xF4DAABA1 EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0xF8190966 EQ PUSH2 0x84D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xBBD78E93 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xBDB4B848 EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0xCF3B94CD EQ PUSH2 0x766 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x96634A40 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x96634A40 EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xAAAE4E23 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6AA JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x7B4FAB5A EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E6 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x5C65D81F GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x5C65D81F EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x562 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x444 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x247CD8AD EQ PUSH2 0x38A JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6F13056 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x3DB8 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x3B8D JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3B8D JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x450D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x577 PUSH2 0xF4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58E PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x626 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH2 0x141A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E8 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x713 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x750 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77B PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A6 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x820 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x837 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x883 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x897 DUP3 PUSH2 0x17BF JUMP JUMPDEST DUP1 PUSH2 0x8FF JUMPI POP PUSH32 0xE7FB86C600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x922 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x970 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B0 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x4752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA86 PUSH2 0x1884 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAB5 JUMPI POP PUSH2 0xAB4 DUP2 PUSH2 0xAAF PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST JUMPDEST PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x46D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAFE DUP4 DUP4 PUSH2 0x188C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC2 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x447D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBCC DUP3 DUP3 PUSH2 0x1945 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBE1 PUSH2 0xBDB PUSH2 0x1884 JUMP JUMPDEST DUP3 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP1 PUSH2 0x4792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2B DUP4 DUP4 DUP4 PUSH2 0x1A28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 DUP4 PUSH2 0xE95 JUMP JUMPDEST DUP3 LT PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x45D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1442 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD07 PUSH2 0x10DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD16 PUSH2 0xB03 JUMP JUMPDEST DUP3 LT PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP1 PUSH2 0x4772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDAB PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE8B PUSH2 0x1556 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x46B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xF5F PUSH1 0x0 PUSH2 0x1D0D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF9C PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH2 0xF6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFC9 SWAP1 PUSH2 0x4420 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA5B23000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1058 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1084 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0CF055400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112C PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E628EBC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1225 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x453D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x3D8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D83BDD6DB199FF596CEC09EA8E4F4E50DA2DCB4020BC2A1CF072C507056B1EA DUP2 PUSH1 0x40 MLOAD PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D8 PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 DUP3 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST GT ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH32 0x0 PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x1415 JUMPI PUSH2 0x1402 CALLER DUP3 DUP5 PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x140D SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1425 PUSH2 0x1884 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1DEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1453 PUSH2 0x144D PUSH2 0x1884 JUMP JUMPDEST DUP4 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x4792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14E1 DUP3 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9430A17E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1523 DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1533 DUP4 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x2770 JUMP JUMPDEST SWAP1 POP PUSH2 0x154B DUP2 PUSH2 0x2803 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD PUSH2 0x1564 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD GT DUP1 ISZERO PUSH2 0x1598 JUMPI POP PUSH1 0xC SLOAD DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x15A2 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD GT DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x15CD JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 DUP1 PUSH2 0x15D6 JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A3 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP1 PUSH2 0x4612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x1D0D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1769 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1832 JUMPI POP PUSH2 0x1831 DUP3 PUSH2 0x2853 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1842 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18FF DUP4 PUSH2 0xDB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x198F DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1982 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2935 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x199F DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19E1 JUMPI POP PUSH2 0x19E0 DUP2 DUP6 PUSH2 0x1607 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A1F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A07 DUP5 PUSH2 0x9A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A48 DUP3 PUSH2 0xDB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A95 SWAP1 PUSH2 0x4632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B05 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B19 DUP4 DUP4 DUP4 PUSH2 0x2A33 JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x0 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B74 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BCB SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C8A DUP4 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C97 PUSH2 0x1884 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB5 PUSH2 0xF6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D02 SWAP1 PUSH2 0x4712 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1DEB DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2B4C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E55 SWAP1 PUSH2 0x4692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F4F SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1F67 DUP5 DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x1F73 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1FB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA9 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2172 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2071 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x20DC JUMPI POP PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x215F JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x213F SWAP3 SWAP2 SWAP1 PUSH2 0x47CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x216A SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x202A JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2182 PUSH2 0x3914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x62 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x537C PUSH1 0x62 SWAP2 CODECOPY DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x21D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP3 ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54BB PUSH1 0x8D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2236 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x2246 PUSH2 0x393B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2253 DUP7 PUSH1 0x20 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2315 JUMPI PUSH1 0x0 PUSH2 0x229B DUP4 PUSH1 0xB DUP5 PUSH2 0x2277 SWAP2 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x1 DUP7 PUSH2 0x2289 SWAP2 SWAP1 PUSH2 0x4953 JUMP JUMPDEST PUSH2 0x2293 SWAP2 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x3038 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22AE SWAP2 SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP4 PUSH1 0xFF AND PUSH1 0x6 DUP2 LT PUSH2 0x22F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x230D SWAP1 PUSH2 0x4C59 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2258 JUMP JUMPDEST POP DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x2350 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x238F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x23CE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x240D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x244C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x248B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24A5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x24EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP POP PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x541E PUSH1 0x9D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2550 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x25C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3C2F746578743E3C2F7376673E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2641 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x2683 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x26C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2701 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2740 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2758 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x27D6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27C2 SWAP2 SWAP1 PUSH2 0x42C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x31A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27EB SWAP3 SWAP2 SWAP1 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x282D DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x439A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x43FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x291E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x292E JUMPI POP PUSH2 0x292D DUP3 PUSH2 0x3330 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293F PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x2952 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2963 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA39D9410ABE7578BFBF71501989F175C50A6950B6595718DD8092474541C889B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2A25 SWAP3 SWAP2 SWAP1 PUSH2 0x47CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A3E DUP4 DUP4 DUP4 PUSH2 0x339A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A81 JUMPI PUSH2 0x2A7C DUP2 PUSH2 0x339F JUMP JUMPDEST PUSH2 0x2AC0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2ABF JUMPI PUSH2 0x2ABE DUP4 DUP3 PUSH2 0x33E8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B03 JUMPI PUSH2 0x2AFE DUP2 PUSH2 0x3555 JUMP JUMPDEST PUSH2 0x2B42 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B41 JUMPI PUSH2 0x2B40 DUP3 DUP3 PUSH2 0x3698 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2B56 DUP4 DUP4 PUSH2 0x3717 JUMP JUMPDEST PUSH2 0x2B63 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x2BA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B99 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38F1 JUMP JUMPDEST ISZERO PUSH2 0x2D31 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2BF1 PUSH2 0x1884 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C13 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2C5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C5B SWAP2 SWAP1 PUSH2 0x3CF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2CE1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2CD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD0 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2D51 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2D5B SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DCC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E2A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2EB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2EF4 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2EFE SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FEA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2F66 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FA3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x2FE3 SWAP1 PUSH2 0x4B83 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F01 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x302E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3025 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP5 DUP5 PUSH2 0x304D SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x308C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3199 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3108 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0x3120 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3157 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x3191 SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30C7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x31C9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x332B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53DE PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x31F8 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x3202 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x4 PUSH2 0x320E SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x324D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x327F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x32EB JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x3290 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x3307 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x331A JUMPI PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x33F5 DUP5 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x33FF SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x34E4 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x3569 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x35BF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3607 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x367C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A3 DUP4 PUSH2 0xE95 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377E SWAP1 PUSH2 0x46F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3790 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST ISZERO PUSH2 0x37D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C7 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37DC PUSH1 0x0 DUP4 DUP4 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x382C SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x38ED PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3923 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x394A JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3975 PUSH2 0x3970 DUP5 PUSH2 0x4852 JUMP JUMPDEST PUSH2 0x482D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x39C4 JUMPI DUP2 PUSH2 0x39AA DUP9 DUP3 PUSH2 0x3AFE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3997 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E1 PUSH2 0x39DC DUP5 PUSH2 0x487E JUMP JUMPDEST PUSH2 0x482D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x39F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A04 DUP5 DUP3 DUP6 PUSH2 0x4B41 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A1B DUP2 PUSH2 0x531F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A42 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A5A DUP2 PUSH2 0x5336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A6F DUP2 PUSH2 0x534D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A84 DUP2 PUSH2 0x534D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3ACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AF5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B0D DUP2 PUSH2 0x5364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B22 DUP2 PUSH2 0x5364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B48 DUP5 DUP3 DUP6 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B72 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B83 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BB0 DUP7 DUP3 DUP8 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BC1 DUP7 DUP3 DUP8 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3BD2 DUP7 DUP3 DUP8 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C00 DUP8 DUP3 DUP9 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3C11 DUP8 DUP3 DUP9 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3C22 DUP8 DUP3 DUP9 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C4B DUP8 DUP3 DUP9 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C78 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C89 DUP6 DUP3 DUP7 ADD PUSH2 0x3A4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CB4 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CEF DUP5 DUP3 DUP6 ADD PUSH2 0x3A60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D18 DUP5 DUP3 DUP6 ADD PUSH2 0x3A75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D5A DUP6 DUP3 DUP7 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D86 DUP5 DUP3 DUP6 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DAF DUP5 DUP3 DUP6 ADD PUSH2 0x3B13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD9 DUP6 DUP3 DUP7 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E02 DUP6 DUP3 DUP7 ADD PUSH2 0x3A21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E15 DUP2 PUSH2 0x4A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E24 DUP2 PUSH2 0x4A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E33 DUP2 PUSH2 0x4AA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E44 DUP3 PUSH2 0x48AF JUMP JUMPDEST PUSH2 0x3E4E DUP2 DUP6 PUSH2 0x48C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST PUSH2 0x3E67 DUP2 PUSH2 0x4D3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7D DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH2 0x3E87 DUP2 DUP6 PUSH2 0x48E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST PUSH2 0x3EA0 DUP2 PUSH2 0x4D3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB6 DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH2 0x3EC0 DUP2 DUP6 PUSH2 0x48F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3ED0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE9 PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF4 DUP3 PUSH2 0x4D50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F0C PUSH1 0x2B DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F17 DUP3 PUSH2 0x4D79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2F PUSH1 0x32 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3A DUP3 PUSH2 0x4DC8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F52 PUSH1 0x26 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5D DUP3 PUSH2 0x4E17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F75 PUSH1 0x25 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F80 DUP3 PUSH2 0x4E66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F98 PUSH1 0x1C DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA3 DUP3 PUSH2 0x4EB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH1 0x8 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FC6 DUP3 PUSH2 0x4EDE JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FDE PUSH1 0xE DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FE9 DUP3 PUSH2 0x4F07 JUMP JUMPDEST PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 PUSH1 0x24 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x400C DUP3 PUSH2 0x4F30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4024 PUSH1 0x19 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x402F DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4047 PUSH1 0x11 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4052 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406A PUSH1 0x29 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4075 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408D PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4098 DUP3 PUSH2 0x5020 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B0 PUSH1 0x25 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x40BB DUP3 PUSH2 0x5049 JUMP JUMPDEST PUSH1 0x25 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 PUSH1 0x9 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x40DE DUP3 PUSH2 0x5098 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F6 PUSH1 0x3E DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4101 DUP3 PUSH2 0x50C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4119 PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4124 DUP3 PUSH2 0x5110 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413C PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4147 DUP3 PUSH2 0x5139 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415F PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x416A DUP3 PUSH2 0x5162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4182 PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x418D DUP3 PUSH2 0x518B JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A5 PUSH1 0x18 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B0 DUP3 PUSH2 0x51B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C8 PUSH1 0x21 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D3 DUP3 PUSH2 0x51DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EB PUSH1 0x1D DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F6 DUP3 PUSH2 0x522C JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420E PUSH1 0x0 DUP4 PUSH2 0x48D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4219 DUP3 PUSH2 0x5255 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4231 PUSH1 0x2C DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x423C DUP3 PUSH2 0x5258 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4254 PUSH1 0x2E DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x425F DUP3 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4277 PUSH1 0x16 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4282 DUP3 PUSH2 0x52F6 JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 DUP2 PUSH2 0x4AD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A5 DUP2 PUSH2 0x4B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42B4 DUP2 PUSH2 0x4B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42C3 DUP2 PUSH2 0x4B20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D5 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42EC DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x42F8 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4310 DUP3 DUP8 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x431C DUP3 DUP7 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4328 DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4334 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434E DUP3 DUP10 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x435A DUP3 DUP9 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4366 DUP3 DUP8 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4372 DUP3 DUP7 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x437E DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x438A DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A5 DUP3 PUSH2 0x4175 JUMP JUMPDEST SWAP2 POP PUSH2 0x43B0 DUP3 PUSH2 0x3FD1 JUMP JUMPDEST SWAP2 POP PUSH2 0x43BB DUP3 PUSH2 0x40A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x43C6 DUP3 PUSH2 0x403A JUMP JUMPDEST SWAP2 POP PUSH2 0x43D1 DUP3 PUSH2 0x40C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x43DD DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x43E8 DUP3 PUSH2 0x4080 JUMP JUMPDEST SWAP2 POP PUSH2 0x43F3 DUP3 PUSH2 0x412F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4409 DUP3 PUSH2 0x41DE JUMP JUMPDEST SWAP2 POP PUSH2 0x4415 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442B DUP3 PUSH2 0x4201 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4440 DUP3 PUSH2 0x426A JUMP JUMPDEST SWAP2 POP PUSH2 0x444C DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4457 DUP3 PUSH2 0x3FAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4477 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4492 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x449F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x44BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x44C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x44D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x44E7 DUP2 DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4522 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E1B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4534 DUP2 DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4552 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3E2A JUMP JUMPDEST PUSH2 0x455F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x456C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x428D JUMP JUMPDEST PUSH2 0x4579 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x42AB JUMP JUMPDEST PUSH2 0x4586 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x42AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45AA DUP2 DUP5 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45CB DUP2 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45EB DUP2 PUSH2 0x3EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x460B DUP2 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x462B DUP2 PUSH2 0x3F45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x464B DUP2 PUSH2 0x3F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x3F8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x468B DUP2 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46AB DUP2 PUSH2 0x4017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46CB DUP2 PUSH2 0x405D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46EB DUP2 PUSH2 0x40E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x470B DUP2 PUSH2 0x410C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x472B DUP2 PUSH2 0x4152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x474B DUP2 PUSH2 0x4198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x476B DUP2 PUSH2 0x41BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x478B DUP2 PUSH2 0x4224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47AB DUP2 PUSH2 0x4247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x47E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x47EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x480B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x4818 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x4825 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4837 PUSH2 0x4848 JUMP JUMPDEST SWAP1 POP PUSH2 0x4843 DUP3 DUP3 PUSH2 0x4BDF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x486D JUMPI PUSH2 0x486C PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4899 JUMPI PUSH2 0x4898 PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST PUSH2 0x48A2 DUP3 PUSH2 0x4D3F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4908 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x4913 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4948 JUMPI PUSH2 0x4947 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495E DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x4969 DUP4 PUSH2 0x4B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x497F JUMPI PUSH2 0x497E PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4995 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x49A0 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49B0 JUMPI PUSH2 0x49AF PUSH2 0x4CB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C6 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x49D1 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A0A JUMPI PUSH2 0x4A09 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A20 DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2B DUP4 PUSH2 0x4B34 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A45 JUMPI PUSH2 0x4A44 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5B DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A66 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4A79 JUMPI PUSH2 0x4A78 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8F DUP3 PUSH2 0x4AE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B53 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4B7D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8E DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x4BA2 JUMPI PUSH2 0x4BA1 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4BC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4BD9 JUMPI PUSH2 0x4BD8 PUSH2 0x4CE1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BE8 DUP3 PUSH2 0x4D3F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4C07 JUMPI PUSH2 0x4C06 PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1B DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4C4E JUMPI PUSH2 0x4C4D PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C64 DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x4C78 JUMPI PUSH2 0x4C77 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C2F747370616E3E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226E616D65223A224E4654222C20000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A22222C20000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2242617463682D72657665616C6564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5421222C20000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x22696D616765223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C747370616E20783D223136222064793D223536223E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5328 DUP2 PUSH2 0x4A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x5333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x533F DUP2 PUSH2 0x4A96 JUMP JUMPDEST DUP2 EQ PUSH2 0x534A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5356 DUP2 PUSH2 0x4AAC JUMP JUMPDEST DUP2 EQ PUSH2 0x5361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x536D DUP2 PUSH2 0x4B06 JUMP JUMPDEST DUP2 EQ PUSH2 0x5378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID EXTCODECOPY PUSH20 0x766720786D6C6E733D22687474703A2F2F777777 0x2E PUSH24 0x332E6F72672F323030302F73766722207072657365727665 COINBASE PUSH20 0x70656374526174696F3D22784D696E594D696E20 PUSH14 0x656574222076696577426F783D22 ADDRESS KECCAK256 ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS 0x22 RETURNDATACOPY COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x2E PUSH3 0x617365 KECCAK256 PUSH28 0x2066696C6C3A2077686974653B20666F6E742D66616D696C793A2073 PUSH6 0x7269663B2066 PUSH16 0x6E742D73697A653A2033353070783B20 PUSH30 0x3C2F7374796C653E3C726563742077696474683D22313030252220686569 PUSH8 0x68743D2231303025 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420783D2239302220793D223239352220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH3 0x617365 0x22 RETURNDATACOPY EXTCODECOPY PUSH20 0x74796C653E2E62617365207B2066696C6C3A2077 PUSH9 0x6974653B20666F6E74 0x2D PUSH7 0x616D696C793A20 PUSH20 0x657269663B20666F6E742D73697A653A20353970 PUSH25 0x3B207D3C2F7374796C653E3C726563742077696474683D2231 ADDRESS ADDRESS 0x25 0x22 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420636C6173733D2262617365223EA2646970 PUSH7 0x735822122007B9 0xAA PUSH19 0x6C47C574FCCA79070496365EAD9237214C8C79 SWAP7 GT SWAP8 SELFBALANCE 0x48 0xD7 SWAP6 0xE0 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"527:11165:19:-:0;;;1072:15;1039:48;;1924:773;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2301:17;2267:5;2274:7;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1464:5:6;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;5616:15:2;5599:32;;;;;;;;;;;;5556:80;2343:10:19::2;2330:23;;;;::::0;::::2;2375:9;2363:21;;;;::::0;::::2;2441:17;2394:65;;;;;;;;;;::::0;::::2;2491:18;2469:40;;;;;;;;;;::::0;::::2;2534:11;2519:26;;;;::::0;::::2;2580:20;2555:45;;;;;;;;;;::::0;::::2;2630:16;2610:17;:36;;;;2675:15;2656:16;:34;;;;1924:773:::0;;;;;;;;;;527:11165;;640:96:14;693:7;719:10;712:17;;640:96;:::o;2433:187:5:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;527:11165:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:20:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:143::-;424:5;455:6;449:13;440:22;;471:33;498:5;471:33;:::i;:::-;430:80;;;;:::o;516:143::-;573:5;604:6;598:13;589:22;;620:33;647:5;620:33;:::i;:::-;579:80;;;;:::o;679:288::-;746:5;795:3;788:4;780:6;776:17;772:27;762:2;;813:1;810;803:12;762:2;846:6;840:13;871:90;957:3;949:6;942:4;934:6;930:17;871:90;:::i;:::-;862:99;;752:215;;;;;:::o;973:143::-;1030:5;1061:6;1055:13;1046:22;;1077:33;1104:5;1077:33;:::i;:::-;1036:80;;;;:::o;1122:141::-;1178:5;1209:6;1203:13;1194:22;;1225:32;1251:5;1225:32;:::i;:::-;1184:79;;;;:::o;1269:141::-;1325:5;1356:6;1350:13;1341:22;;1372:32;1398:5;1372:32;:::i;:::-;1331:79;;;;:::o;1416:1903::-;1585:6;1593;1601;1609;1617;1625;1633;1641;1649;1657;1706:3;1694:9;1685:7;1681:23;1677:33;1674:2;;;1723:1;1720;1713:12;1674:2;1787:1;1776:9;1772:17;1766:24;1817:18;1809:6;1806:30;1803:2;;;1849:1;1846;1839:12;1803:2;1877:74;1943:7;1934:6;1923:9;1919:22;1877:74;:::i;:::-;1867:84;;1737:224;2021:2;2010:9;2006:18;2000:25;2052:18;2044:6;2041:30;2038:2;;;2084:1;2081;2074:12;2038:2;2112:74;2178:7;2169:6;2158:9;2154:22;2112:74;:::i;:::-;2102:84;;1971:225;2235:2;2261:64;2317:7;2308:6;2297:9;2293:22;2261:64;:::i;:::-;2251:74;;2206:129;2374:2;2400:64;2456:7;2447:6;2436:9;2432:22;2400:64;:::i;:::-;2390:74;;2345:129;2513:3;2540:64;2596:7;2587:6;2576:9;2572:22;2540:64;:::i;:::-;2530:74;;2484:130;2653:3;2680:64;2736:7;2727:6;2716:9;2712:22;2680:64;:::i;:::-;2670:74;;2624:130;2793:3;2820:64;2876:7;2867:6;2856:9;2852:22;2820:64;:::i;:::-;2810:74;;2764:130;2933:3;2960:63;3015:7;3006:6;2995:9;2991:22;2960:63;:::i;:::-;2950:73;;2904:129;3072:3;3099:64;3155:7;3146:6;3135:9;3131:22;3099:64;:::i;:::-;3089:74;;3043:130;3212:3;3239:63;3294:7;3285:6;3274:9;3270:22;3239:63;:::i;:::-;3229:73;;3183:129;1664:1655;;;;;;;;;;;;;:::o;3325:129::-;3359:6;3386:20;;:::i;:::-;3376:30;;3415:33;3443:4;3435:6;3415:33;:::i;:::-;3366:88;;;:::o;3460:75::-;3493:6;3526:2;3520:9;3510:19;;3500:35;:::o;3541:308::-;3603:4;3693:18;3685:6;3682:30;3679:2;;;3715:18;;:::i;:::-;3679:2;3753:29;3775:6;3753:29;:::i;:::-;3745:37;;3837:4;3831;3827:15;3819:23;;3608:241;;;:::o;3855:96::-;3892:7;3921:24;3939:5;3921:24;:::i;:::-;3910:35;;3900:51;;;:::o;3957:77::-;3994:7;4023:5;4012:16;;4002:32;;;:::o;4040:126::-;4077:7;4117:42;4110:5;4106:54;4095:65;;4085:81;;;:::o;4172:77::-;4209:7;4238:5;4227:16;;4217:32;;;:::o;4255:93::-;4291:7;4331:10;4324:5;4320:22;4309:33;;4299:49;;;:::o;4354:101::-;4390:7;4430:18;4423:5;4419:30;4408:41;;4398:57;;;:::o;4461:307::-;4529:1;4539:113;4553:6;4550:1;4547:13;4539:113;;;4638:1;4633:3;4629:11;4623:18;4619:1;4614:3;4610:11;4603:39;4575:2;4572:1;4568:10;4563:15;;4539:113;;;4670:6;4667:1;4664:13;4661:2;;;4750:1;4741:6;4736:3;4732:16;4725:27;4661:2;4510:258;;;;:::o;4774:320::-;4818:6;4855:1;4849:4;4845:12;4835:22;;4902:1;4896:4;4892:12;4923:18;4913:2;;4979:4;4971:6;4967:17;4957:27;;4913:2;5041;5033:6;5030:14;5010:18;5007:38;5004:2;;;5060:18;;:::i;:::-;5004:2;4825:269;;;;:::o;5100:281::-;5183:27;5205:4;5183:27;:::i;:::-;5175:6;5171:40;5313:6;5301:10;5298:22;5277:18;5265:10;5262:34;5259:62;5256:2;;;5324:18;;:::i;:::-;5256:2;5364:10;5360:2;5353:22;5143:238;;;:::o;5387:180::-;5435:77;5432:1;5425:88;5532:4;5529:1;5522:15;5556:4;5553:1;5546:15;5573:180;5621:77;5618:1;5611:88;5718:4;5715:1;5708:15;5742:4;5739:1;5732:15;5759:102;5800:6;5851:2;5847:7;5842:2;5835:5;5831:14;5827:28;5817:38;;5807:54;;;:::o;5867:122::-;5940:24;5958:5;5940:24;:::i;:::-;5933:5;5930:35;5920:2;;5979:1;5976;5969:12;5920:2;5910:79;:::o;5995:122::-;6068:24;6086:5;6068:24;:::i;:::-;6061:5;6058:35;6048:2;;6107:1;6104;6097:12;6048:2;6038:79;:::o;6123:122::-;6196:24;6214:5;6196:24;:::i;:::-;6189:5;6186:35;6176:2;;6235:1;6232;6225:12;6176:2;6166:79;:::o;6251:120::-;6323:23;6340:5;6323:23;:::i;:::-;6316:5;6313:34;6303:2;;6361:1;6358;6351:12;6303:2;6293:78;:::o;6377:120::-;6449:23;6466:5;6449:23;:::i;:::-;6442:5;6439:34;6429:2;;6487:1;6484;6477:12;6429:2;6419:78;:::o;527:11165:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50314:20","statements":[{"body":{"nodeType":"YulBlock","src":"126:553:20","statements":[{"nodeType":"YulAssignment","src":"136:90:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:20"},"nodeType":"YulFunctionCall","src":"161:64:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:20"},"nodeType":"YulFunctionCall","src":"145:81:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:20"},"nodeType":"YulFunctionCall","src":"261:21:20"},"nodeType":"YulExpressionStatement","src":"261:21:20"},{"nodeType":"YulAssignment","src":"291:23:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:20"},"nodeType":"YulFunctionCall","src":"298:16:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:36:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"411:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"404:6:20"},"nodeType":"YulFunctionCall","src":"404:12:20"},"nodeType":"YulExpressionStatement","src":"404:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:20"},"nodeType":"YulFunctionCall","src":"365:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:20"},"nodeType":"YulFunctionCall","src":"356:27:20"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:20"},"nodeType":"YulFunctionCall","src":"353:36:20"},"nodeType":"YulIf","src":"350:2:20"},{"body":{"nodeType":"YulBlock","src":"495:178:20","statements":[{"nodeType":"YulVariableDeclaration","src":"510:21:20","value":{"name":"src","nodeType":"YulIdentifier","src":"528:3:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"514:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"552:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"578:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"590:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"557:20:20"},"nodeType":"YulFunctionCall","src":"557:37:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"545:6:20"},"nodeType":"YulFunctionCall","src":"545:50:20"},"nodeType":"YulExpressionStatement","src":"545:50:20"},{"nodeType":"YulAssignment","src":"608:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"624:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"615:3:20"},"nodeType":"YulFunctionCall","src":"615:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"608:3:20"}]},{"nodeType":"YulAssignment","src":"642:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"653:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"658:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"649:3:20"},"nodeType":"YulFunctionCall","src":"649:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"642:3:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"457:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"460:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"454:2:20"},"nodeType":"YulFunctionCall","src":"454:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"468:18:20","statements":[{"nodeType":"YulAssignment","src":"470:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"479:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"482:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"475:3:20"},"nodeType":"YulFunctionCall","src":"475:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"470:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"439:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"441:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"450:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"445:1:20","type":""}]}]},"src":"435:238:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:20","type":""}],"src":"24:655:20"},{"body":{"nodeType":"YulBlock","src":"768:260:20","statements":[{"nodeType":"YulAssignment","src":"778:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"844:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"803:40:20"},"nodeType":"YulFunctionCall","src":"803:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"787:15:20"},"nodeType":"YulFunctionCall","src":"787:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"778:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"868:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"875:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:20"},"nodeType":"YulFunctionCall","src":"861:21:20"},"nodeType":"YulExpressionStatement","src":"861:21:20"},{"nodeType":"YulVariableDeclaration","src":"891:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"906:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"913:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:20"},"nodeType":"YulFunctionCall","src":"902:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"895:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"956:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"965:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"958:6:20"},"nodeType":"YulFunctionCall","src":"958:12:20"},"nodeType":"YulExpressionStatement","src":"958:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"937:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:20"},"nodeType":"YulFunctionCall","src":"933:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"951:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:20"},"nodeType":"YulFunctionCall","src":"930:25:20"},"nodeType":"YulIf","src":"927:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1005:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"1010:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1015:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"981:23:20"},"nodeType":"YulFunctionCall","src":"981:41:20"},"nodeType":"YulExpressionStatement","src":"981:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"741:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"746:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"754:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"762:5:20","type":""}],"src":"685:343:20"},{"body":{"nodeType":"YulBlock","src":"1086:87:20","statements":[{"nodeType":"YulAssignment","src":"1096:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1118:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1105:12:20"},"nodeType":"YulFunctionCall","src":"1105:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1096:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1161:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1134:26:20"},"nodeType":"YulFunctionCall","src":"1134:33:20"},"nodeType":"YulExpressionStatement","src":"1134:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1064:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1072:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1080:5:20","type":""}],"src":"1034:139:20"},{"body":{"nodeType":"YulBlock","src":"1273:226:20","statements":[{"body":{"nodeType":"YulBlock","src":"1322:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1331:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1334:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1324:6:20"},"nodeType":"YulFunctionCall","src":"1324:12:20"},"nodeType":"YulExpressionStatement","src":"1324:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1301:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1309:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1297:3:20"},"nodeType":"YulFunctionCall","src":"1297:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1316:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:20"},"nodeType":"YulFunctionCall","src":"1293:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1286:6:20"},"nodeType":"YulFunctionCall","src":"1286:35:20"},"nodeType":"YulIf","src":"1283:2:20"},{"nodeType":"YulVariableDeclaration","src":"1347:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1374:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1361:12:20"},"nodeType":"YulFunctionCall","src":"1361:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1351:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1390:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1466:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1474:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:20"},"nodeType":"YulFunctionCall","src":"1462:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"1481:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"1489:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1399:62:20"},"nodeType":"YulFunctionCall","src":"1399:94:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1390:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1251:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1259:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1267:5:20","type":""}],"src":"1196:303:20"},{"body":{"nodeType":"YulBlock","src":"1554:84:20","statements":[{"nodeType":"YulAssignment","src":"1564:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1586:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1573:12:20"},"nodeType":"YulFunctionCall","src":"1573:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1564:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1626:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1602:23:20"},"nodeType":"YulFunctionCall","src":"1602:30:20"},"nodeType":"YulExpressionStatement","src":"1602:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1532:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1540:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1548:5:20","type":""}],"src":"1505:133:20"},{"body":{"nodeType":"YulBlock","src":"1695:86:20","statements":[{"nodeType":"YulAssignment","src":"1705:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1727:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1714:12:20"},"nodeType":"YulFunctionCall","src":"1714:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1705:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1769:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1743:25:20"},"nodeType":"YulFunctionCall","src":"1743:32:20"},"nodeType":"YulExpressionStatement","src":"1743:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1673:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1681:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1689:5:20","type":""}],"src":"1644:137:20"},{"body":{"nodeType":"YulBlock","src":"1849:79:20","statements":[{"nodeType":"YulAssignment","src":"1859:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1874:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1868:5:20"},"nodeType":"YulFunctionCall","src":"1868:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1859:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1916:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1890:25:20"},"nodeType":"YulFunctionCall","src":"1890:32:20"},"nodeType":"YulExpressionStatement","src":"1890:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1827:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1835:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1843:5:20","type":""}],"src":"1787:141:20"},{"body":{"nodeType":"YulBlock","src":"2021:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"2070:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2079:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2082:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2072:6:20"},"nodeType":"YulFunctionCall","src":"2072:12:20"},"nodeType":"YulExpressionStatement","src":"2072:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2057:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:20"},"nodeType":"YulFunctionCall","src":"2045:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2064:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2041:3:20"},"nodeType":"YulFunctionCall","src":"2041:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2034:6:20"},"nodeType":"YulFunctionCall","src":"2034:35:20"},"nodeType":"YulIf","src":"2031:2:20"},{"nodeType":"YulAssignment","src":"2095:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2118:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2105:12:20"},"nodeType":"YulFunctionCall","src":"2105:20:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:20"}]},{"body":{"nodeType":"YulBlock","src":"2168:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2177:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2180:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2170:6:20"},"nodeType":"YulFunctionCall","src":"2170:12:20"},"nodeType":"YulExpressionStatement","src":"2170:12:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2140:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2148:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2137:2:20"},"nodeType":"YulFunctionCall","src":"2137:30:20"},"nodeType":"YulIf","src":"2134:2:20"},{"nodeType":"YulAssignment","src":"2193:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2209:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2217:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2205:3:20"},"nodeType":"YulFunctionCall","src":"2205:17:20"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2193:8:20"}]},{"body":{"nodeType":"YulBlock","src":"2276:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2285:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2288:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2278:6:20"},"nodeType":"YulFunctionCall","src":"2278:12:20"},"nodeType":"YulExpressionStatement","src":"2278:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2241:8:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2255:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2263:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2251:3:20"},"nodeType":"YulFunctionCall","src":"2251:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2237:3:20"},"nodeType":"YulFunctionCall","src":"2237:32:20"},{"name":"end","nodeType":"YulIdentifier","src":"2271:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2234:2:20"},"nodeType":"YulFunctionCall","src":"2234:41:20"},"nodeType":"YulIf","src":"2231:2:20"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1988:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1996:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2004:8:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2014:6:20","type":""}],"src":"1947:351:20"},{"body":{"nodeType":"YulBlock","src":"2378:210:20","statements":[{"body":{"nodeType":"YulBlock","src":"2427:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2436:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2439:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2429:6:20"},"nodeType":"YulFunctionCall","src":"2429:12:20"},"nodeType":"YulExpressionStatement","src":"2429:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2406:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2414:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2402:3:20"},"nodeType":"YulFunctionCall","src":"2402:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2421:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2398:3:20"},"nodeType":"YulFunctionCall","src":"2398:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2391:6:20"},"nodeType":"YulFunctionCall","src":"2391:35:20"},"nodeType":"YulIf","src":"2388:2:20"},{"nodeType":"YulVariableDeclaration","src":"2452:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2479:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2466:12:20"},"nodeType":"YulFunctionCall","src":"2466:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2456:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2495:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2555:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2563:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2551:3:20"},"nodeType":"YulFunctionCall","src":"2551:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"2570:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"2578:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2504:46:20"},"nodeType":"YulFunctionCall","src":"2504:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2495:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2356:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2364:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2372:5:20","type":""}],"src":"2317:271:20"},{"body":{"nodeType":"YulBlock","src":"2646:87:20","statements":[{"nodeType":"YulAssignment","src":"2656:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2678:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2665:12:20"},"nodeType":"YulFunctionCall","src":"2665:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2656:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2721:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2694:26:20"},"nodeType":"YulFunctionCall","src":"2694:33:20"},"nodeType":"YulExpressionStatement","src":"2694:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2624:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2632:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2640:5:20","type":""}],"src":"2594:139:20"},{"body":{"nodeType":"YulBlock","src":"2802:80:20","statements":[{"nodeType":"YulAssignment","src":"2812:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2827:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2821:5:20"},"nodeType":"YulFunctionCall","src":"2821:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2812:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2870:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2843:26:20"},"nodeType":"YulFunctionCall","src":"2843:33:20"},"nodeType":"YulExpressionStatement","src":"2843:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2788:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:20","type":""}],"src":"2739:143:20"},{"body":{"nodeType":"YulBlock","src":"2954:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"3000:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3009:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3012:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3002:6:20"},"nodeType":"YulFunctionCall","src":"3002:12:20"},"nodeType":"YulExpressionStatement","src":"3002:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2975:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2984:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2971:3:20"},"nodeType":"YulFunctionCall","src":"2971:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2996:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2967:3:20"},"nodeType":"YulFunctionCall","src":"2967:32:20"},"nodeType":"YulIf","src":"2964:2:20"},{"nodeType":"YulBlock","src":"3026:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3041:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3055:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3045:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3070:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3116:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:20"},"nodeType":"YulFunctionCall","src":"3101:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3125:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3080:20:20"},"nodeType":"YulFunctionCall","src":"3080:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3070:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2924:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2935:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2947:6:20","type":""}],"src":"2888:262:20"},{"body":{"nodeType":"YulBlock","src":"3239:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"3285:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3294:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3297:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3287:6:20"},"nodeType":"YulFunctionCall","src":"3287:12:20"},"nodeType":"YulExpressionStatement","src":"3287:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3260:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3269:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3256:3:20"},"nodeType":"YulFunctionCall","src":"3256:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3252:3:20"},"nodeType":"YulFunctionCall","src":"3252:32:20"},"nodeType":"YulIf","src":"3249:2:20"},{"nodeType":"YulBlock","src":"3311:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3326:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3340:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3330:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3355:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3390:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3401:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3386:3:20"},"nodeType":"YulFunctionCall","src":"3386:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3410:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3365:20:20"},"nodeType":"YulFunctionCall","src":"3365:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3355:6:20"}]}]},{"nodeType":"YulBlock","src":"3438:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3453:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3467:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3457:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3483:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3518:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3529:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:20"},"nodeType":"YulFunctionCall","src":"3514:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3538:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3493:20:20"},"nodeType":"YulFunctionCall","src":"3493:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3483:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3201:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3212:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3224:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3232:6:20","type":""}],"src":"3156:407:20"},{"body":{"nodeType":"YulBlock","src":"3669:452:20","statements":[{"body":{"nodeType":"YulBlock","src":"3715:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3724:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3727:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3717:6:20"},"nodeType":"YulFunctionCall","src":"3717:12:20"},"nodeType":"YulExpressionStatement","src":"3717:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3690:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3699:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3686:3:20"},"nodeType":"YulFunctionCall","src":"3686:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3682:3:20"},"nodeType":"YulFunctionCall","src":"3682:32:20"},"nodeType":"YulIf","src":"3679:2:20"},{"nodeType":"YulBlock","src":"3741:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3756:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3770:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3760:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3785:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3820:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3831:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3816:3:20"},"nodeType":"YulFunctionCall","src":"3816:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3840:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3795:20:20"},"nodeType":"YulFunctionCall","src":"3795:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3785:6:20"}]}]},{"nodeType":"YulBlock","src":"3868:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3883:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3887:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3913:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3948:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3959:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3944:3:20"},"nodeType":"YulFunctionCall","src":"3944:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3968:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3923:20:20"},"nodeType":"YulFunctionCall","src":"3923:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3913:6:20"}]}]},{"nodeType":"YulBlock","src":"3996:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4011:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4025:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4015:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4041:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4076:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4087:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4072:3:20"},"nodeType":"YulFunctionCall","src":"4072:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4096:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4051:20:20"},"nodeType":"YulFunctionCall","src":"4051:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4041:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3623:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3634:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3646:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3654:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3662:6:20","type":""}],"src":"3569:552:20"},{"body":{"nodeType":"YulBlock","src":"4253:683:20","statements":[{"body":{"nodeType":"YulBlock","src":"4300:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4312:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4302:6:20"},"nodeType":"YulFunctionCall","src":"4302:12:20"},"nodeType":"YulExpressionStatement","src":"4302:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4274:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4283:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4270:3:20"},"nodeType":"YulFunctionCall","src":"4270:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4295:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4266:3:20"},"nodeType":"YulFunctionCall","src":"4266:33:20"},"nodeType":"YulIf","src":"4263:2:20"},{"nodeType":"YulBlock","src":"4326:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4341:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4355:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4345:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4370:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4416:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:20"},"nodeType":"YulFunctionCall","src":"4401:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4425:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4380:20:20"},"nodeType":"YulFunctionCall","src":"4380:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4370:6:20"}]}]},{"nodeType":"YulBlock","src":"4453:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4468:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4482:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4472:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4498:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4533:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4544:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4529:3:20"},"nodeType":"YulFunctionCall","src":"4529:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4553:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4508:20:20"},"nodeType":"YulFunctionCall","src":"4508:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4498:6:20"}]}]},{"nodeType":"YulBlock","src":"4581:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4596:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4610:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4600:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4626:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4661:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4672:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4657:3:20"},"nodeType":"YulFunctionCall","src":"4657:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4681:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4636:20:20"},"nodeType":"YulFunctionCall","src":"4636:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4626:6:20"}]}]},{"nodeType":"YulBlock","src":"4709:220:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4724:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4755:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4766:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:20"},"nodeType":"YulFunctionCall","src":"4751:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4738:12:20"},"nodeType":"YulFunctionCall","src":"4738:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4728:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4817:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4826:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4829:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4819:6:20"},"nodeType":"YulFunctionCall","src":"4819:12:20"},"nodeType":"YulExpressionStatement","src":"4819:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4789:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4797:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4786:2:20"},"nodeType":"YulFunctionCall","src":"4786:30:20"},"nodeType":"YulIf","src":"4783:2:20"},{"nodeType":"YulAssignment","src":"4847:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4891:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4902:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4887:3:20"},"nodeType":"YulFunctionCall","src":"4887:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4911:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4857:29:20"},"nodeType":"YulFunctionCall","src":"4857:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4847:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4199:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4210:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4222:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4230:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4238:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4246:6:20","type":""}],"src":"4127:809:20"},{"body":{"nodeType":"YulBlock","src":"5022:321:20","statements":[{"body":{"nodeType":"YulBlock","src":"5068:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5077:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5080:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5070:6:20"},"nodeType":"YulFunctionCall","src":"5070:12:20"},"nodeType":"YulExpressionStatement","src":"5070:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5043:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5052:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5039:3:20"},"nodeType":"YulFunctionCall","src":"5039:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5064:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5035:3:20"},"nodeType":"YulFunctionCall","src":"5035:32:20"},"nodeType":"YulIf","src":"5032:2:20"},{"nodeType":"YulBlock","src":"5094:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5109:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5123:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5113:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5138:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5173:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5184:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5169:3:20"},"nodeType":"YulFunctionCall","src":"5169:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5193:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5148:20:20"},"nodeType":"YulFunctionCall","src":"5148:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5138:6:20"}]}]},{"nodeType":"YulBlock","src":"5221:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5236:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5250:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5240:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5266:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5298:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5309:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5294:3:20"},"nodeType":"YulFunctionCall","src":"5294:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5318:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5276:17:20"},"nodeType":"YulFunctionCall","src":"5276:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5266:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4984:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4995:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5007:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5015:6:20","type":""}],"src":"4942:401:20"},{"body":{"nodeType":"YulBlock","src":"5432:324:20","statements":[{"body":{"nodeType":"YulBlock","src":"5478:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5487:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5490:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5480:6:20"},"nodeType":"YulFunctionCall","src":"5480:12:20"},"nodeType":"YulExpressionStatement","src":"5480:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5453:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5462:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5449:3:20"},"nodeType":"YulFunctionCall","src":"5449:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5474:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5445:3:20"},"nodeType":"YulFunctionCall","src":"5445:32:20"},"nodeType":"YulIf","src":"5442:2:20"},{"nodeType":"YulBlock","src":"5504:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5519:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5533:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5523:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5548:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5583:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5594:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5579:3:20"},"nodeType":"YulFunctionCall","src":"5579:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5603:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5558:20:20"},"nodeType":"YulFunctionCall","src":"5558:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5548:6:20"}]}]},{"nodeType":"YulBlock","src":"5631:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5646:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5660:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5650:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5676:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5711:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5722:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5707:3:20"},"nodeType":"YulFunctionCall","src":"5707:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5731:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5686:20:20"},"nodeType":"YulFunctionCall","src":"5686:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5676:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5394:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5405:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5417:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5425:6:20","type":""}],"src":"5349:407:20"},{"body":{"nodeType":"YulBlock","src":"5827:195:20","statements":[{"body":{"nodeType":"YulBlock","src":"5873:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:20"},"nodeType":"YulFunctionCall","src":"5875:12:20"},"nodeType":"YulExpressionStatement","src":"5875:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5848:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5844:3:20"},"nodeType":"YulFunctionCall","src":"5844:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5869:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5840:3:20"},"nodeType":"YulFunctionCall","src":"5840:32:20"},"nodeType":"YulIf","src":"5837:2:20"},{"nodeType":"YulBlock","src":"5899:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5914:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5928:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5918:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5943:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5988:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:20"},"nodeType":"YulFunctionCall","src":"5973:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5997:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5953:19:20"},"nodeType":"YulFunctionCall","src":"5953:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5943:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5797:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5808:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5820:6:20","type":""}],"src":"5762:260:20"},{"body":{"nodeType":"YulBlock","src":"6104:206:20","statements":[{"body":{"nodeType":"YulBlock","src":"6150:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6159:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6162:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6152:6:20"},"nodeType":"YulFunctionCall","src":"6152:12:20"},"nodeType":"YulExpressionStatement","src":"6152:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6125:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6134:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6121:3:20"},"nodeType":"YulFunctionCall","src":"6121:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6146:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6117:3:20"},"nodeType":"YulFunctionCall","src":"6117:32:20"},"nodeType":"YulIf","src":"6114:2:20"},{"nodeType":"YulBlock","src":"6176:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6191:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6205:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6195:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6220:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6265:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6276:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6261:3:20"},"nodeType":"YulFunctionCall","src":"6261:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6285:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"6230:30:20"},"nodeType":"YulFunctionCall","src":"6230:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6220:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6074:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6085:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6097:6:20","type":""}],"src":"6028:282:20"},{"body":{"nodeType":"YulBlock","src":"6401:308:20","statements":[{"body":{"nodeType":"YulBlock","src":"6447:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6456:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6459:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6449:6:20"},"nodeType":"YulFunctionCall","src":"6449:12:20"},"nodeType":"YulExpressionStatement","src":"6449:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6422:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6431:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6418:3:20"},"nodeType":"YulFunctionCall","src":"6418:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6443:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6414:3:20"},"nodeType":"YulFunctionCall","src":"6414:32:20"},"nodeType":"YulIf","src":"6411:2:20"},{"nodeType":"YulBlock","src":"6473:229:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6488:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6530:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6515:3:20"},"nodeType":"YulFunctionCall","src":"6515:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6502:12:20"},"nodeType":"YulFunctionCall","src":"6502:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6492:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6580:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6589:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6592:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6582:6:20"},"nodeType":"YulFunctionCall","src":"6582:12:20"},"nodeType":"YulExpressionStatement","src":"6582:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6552:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6560:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6549:2:20"},"nodeType":"YulFunctionCall","src":"6549:30:20"},"nodeType":"YulIf","src":"6546:2:20"},{"nodeType":"YulAssignment","src":"6610:82:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6675:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:20"},"nodeType":"YulFunctionCall","src":"6660:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6684:7:20"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6628:31:20"},"nodeType":"YulFunctionCall","src":"6628:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6610:6:20"},{"name":"value1","nodeType":"YulIdentifier","src":"6618:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6363:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6374:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6386:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6394:6:20","type":""}],"src":"6316:393:20"},{"body":{"nodeType":"YulBlock","src":"6781:196:20","statements":[{"body":{"nodeType":"YulBlock","src":"6827:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6836:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6839:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6829:6:20"},"nodeType":"YulFunctionCall","src":"6829:12:20"},"nodeType":"YulExpressionStatement","src":"6829:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6802:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6811:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6798:3:20"},"nodeType":"YulFunctionCall","src":"6798:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6823:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6794:3:20"},"nodeType":"YulFunctionCall","src":"6794:32:20"},"nodeType":"YulIf","src":"6791:2:20"},{"nodeType":"YulBlock","src":"6853:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6868:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6882:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6872:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6897:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6943:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6928:3:20"},"nodeType":"YulFunctionCall","src":"6928:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6952:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6907:20:20"},"nodeType":"YulFunctionCall","src":"6907:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6751:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6762:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6774:6:20","type":""}],"src":"6715:262:20"},{"body":{"nodeType":"YulBlock","src":"7060:207:20","statements":[{"body":{"nodeType":"YulBlock","src":"7106:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7115:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7118:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7108:6:20"},"nodeType":"YulFunctionCall","src":"7108:12:20"},"nodeType":"YulExpressionStatement","src":"7108:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7081:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7090:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7077:3:20"},"nodeType":"YulFunctionCall","src":"7077:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7102:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7073:3:20"},"nodeType":"YulFunctionCall","src":"7073:32:20"},"nodeType":"YulIf","src":"7070:2:20"},{"nodeType":"YulBlock","src":"7132:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7147:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7161:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7151:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7176:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7222:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7233:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7218:3:20"},"nodeType":"YulFunctionCall","src":"7218:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7242:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7186:31:20"},"nodeType":"YulFunctionCall","src":"7186:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7176:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7030:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7041:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7053:6:20","type":""}],"src":"6983:284:20"},{"body":{"nodeType":"YulBlock","src":"7381:442:20","statements":[{"body":{"nodeType":"YulBlock","src":"7427:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7436:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7439:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7429:6:20"},"nodeType":"YulFunctionCall","src":"7429:12:20"},"nodeType":"YulExpressionStatement","src":"7429:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7402:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7411:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7398:3:20"},"nodeType":"YulFunctionCall","src":"7398:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7423:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7394:3:20"},"nodeType":"YulFunctionCall","src":"7394:32:20"},"nodeType":"YulIf","src":"7391:2:20"},{"nodeType":"YulBlock","src":"7453:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7468:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7482:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7472:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7497:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7532:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7543:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7528:3:20"},"nodeType":"YulFunctionCall","src":"7528:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7552:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7507:20:20"},"nodeType":"YulFunctionCall","src":"7507:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7497:6:20"}]}]},{"nodeType":"YulBlock","src":"7580:236:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7595:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7626:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7637:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:20"},"nodeType":"YulFunctionCall","src":"7622:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7609:12:20"},"nodeType":"YulFunctionCall","src":"7609:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7599:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7688:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7697:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7700:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7690:6:20"},"nodeType":"YulFunctionCall","src":"7690:12:20"},"nodeType":"YulExpressionStatement","src":"7690:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7660:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7668:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7657:2:20"},"nodeType":"YulFunctionCall","src":"7657:30:20"},"nodeType":"YulIf","src":"7654:2:20"},{"nodeType":"YulAssignment","src":"7718:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7778:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7789:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7774:3:20"},"nodeType":"YulFunctionCall","src":"7774:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7798:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7728:45:20"},"nodeType":"YulFunctionCall","src":"7728:78:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7718:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7343:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7354:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7366:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7374:6:20","type":""}],"src":"7273:550:20"},{"body":{"nodeType":"YulBlock","src":"7894:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7911:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7934:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7916:17:20"},"nodeType":"YulFunctionCall","src":"7916:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7904:6:20"},"nodeType":"YulFunctionCall","src":"7904:37:20"},"nodeType":"YulExpressionStatement","src":"7904:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7882:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7889:3:20","type":""}],"src":"7829:118:20"},{"body":{"nodeType":"YulBlock","src":"8012:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8029:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8049:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8034:14:20"},"nodeType":"YulFunctionCall","src":"8034:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8022:6:20"},"nodeType":"YulFunctionCall","src":"8022:34:20"},"nodeType":"YulExpressionStatement","src":"8022:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8000:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8007:3:20","type":""}],"src":"7953:109:20"},{"body":{"nodeType":"YulBlock","src":"8133:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8150:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8173:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8155:17:20"},"nodeType":"YulFunctionCall","src":"8155:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8143:6:20"},"nodeType":"YulFunctionCall","src":"8143:37:20"},"nodeType":"YulExpressionStatement","src":"8143:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8121:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8128:3:20","type":""}],"src":"8068:118:20"},{"body":{"nodeType":"YulBlock","src":"8282:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8292:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8338:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8306:31:20"},"nodeType":"YulFunctionCall","src":"8306:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8296:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8353:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8418:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8423:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8360:57:20"},"nodeType":"YulFunctionCall","src":"8360:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8353:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8465:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8472:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8461:3:20"},"nodeType":"YulFunctionCall","src":"8461:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"8479:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8484:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8439:21:20"},"nodeType":"YulFunctionCall","src":"8439:52:20"},"nodeType":"YulExpressionStatement","src":"8439:52:20"},{"nodeType":"YulAssignment","src":"8500:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8511:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8538:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8516:21:20"},"nodeType":"YulFunctionCall","src":"8516:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:20"},"nodeType":"YulFunctionCall","src":"8507:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8500:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8263:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8270:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8278:3:20","type":""}],"src":"8192:360:20"},{"body":{"nodeType":"YulBlock","src":"8650:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8660:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8707:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8674:32:20"},"nodeType":"YulFunctionCall","src":"8674:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8664:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8722:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8788:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8793:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8729:58:20"},"nodeType":"YulFunctionCall","src":"8729:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8722:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8835:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8842:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8831:3:20"},"nodeType":"YulFunctionCall","src":"8831:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"8849:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8854:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8809:21:20"},"nodeType":"YulFunctionCall","src":"8809:52:20"},"nodeType":"YulExpressionStatement","src":"8809:52:20"},{"nodeType":"YulAssignment","src":"8870:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8881:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8908:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8886:21:20"},"nodeType":"YulFunctionCall","src":"8886:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8877:3:20"},"nodeType":"YulFunctionCall","src":"8877:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8870:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8631:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8638:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8646:3:20","type":""}],"src":"8558:364:20"},{"body":{"nodeType":"YulBlock","src":"9038:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9048:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9095:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9062:32:20"},"nodeType":"YulFunctionCall","src":"9062:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9052:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9110:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9194:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9199:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9117:76:20"},"nodeType":"YulFunctionCall","src":"9117:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9110:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9237:3:20"},"nodeType":"YulFunctionCall","src":"9237:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9255:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9260:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9215:21:20"},"nodeType":"YulFunctionCall","src":"9215:52:20"},"nodeType":"YulExpressionStatement","src":"9215:52:20"},{"nodeType":"YulAssignment","src":"9276:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9287:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9292:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9283:3:20"},"nodeType":"YulFunctionCall","src":"9283:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9276:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9019:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9026:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9034:3:20","type":""}],"src":"8928:377:20"},{"body":{"nodeType":"YulBlock","src":"9457:220:20","statements":[{"nodeType":"YulAssignment","src":"9467:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9533:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9538:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9474:58:20"},"nodeType":"YulFunctionCall","src":"9474:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9467:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9639:3:20"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"9550:88:20"},"nodeType":"YulFunctionCall","src":"9550:93:20"},"nodeType":"YulExpressionStatement","src":"9550:93:20"},{"nodeType":"YulAssignment","src":"9652:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9663:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9668:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9659:3:20"},"nodeType":"YulFunctionCall","src":"9659:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9652:3:20"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9445:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9453:3:20","type":""}],"src":"9311:366:20"},{"body":{"nodeType":"YulBlock","src":"9829:220:20","statements":[{"nodeType":"YulAssignment","src":"9839:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9905:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9910:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9846:58:20"},"nodeType":"YulFunctionCall","src":"9846:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9839:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10011:3:20"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"9922:88:20"},"nodeType":"YulFunctionCall","src":"9922:93:20"},"nodeType":"YulExpressionStatement","src":"9922:93:20"},{"nodeType":"YulAssignment","src":"10024:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10035:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10040:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10031:3:20"},"nodeType":"YulFunctionCall","src":"10031:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10024:3:20"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9817:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9825:3:20","type":""}],"src":"9683:366:20"},{"body":{"nodeType":"YulBlock","src":"10201:220:20","statements":[{"nodeType":"YulAssignment","src":"10211:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10277:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10282:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10218:58:20"},"nodeType":"YulFunctionCall","src":"10218:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10211:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10383:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"10294:88:20"},"nodeType":"YulFunctionCall","src":"10294:93:20"},"nodeType":"YulExpressionStatement","src":"10294:93:20"},{"nodeType":"YulAssignment","src":"10396:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10407:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10412:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10403:3:20"},"nodeType":"YulFunctionCall","src":"10403:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10396:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10189:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10197:3:20","type":""}],"src":"10055:366:20"},{"body":{"nodeType":"YulBlock","src":"10573:220:20","statements":[{"nodeType":"YulAssignment","src":"10583:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10649:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10654:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10590:58:20"},"nodeType":"YulFunctionCall","src":"10590:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10583:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10755:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"10666:88:20"},"nodeType":"YulFunctionCall","src":"10666:93:20"},"nodeType":"YulExpressionStatement","src":"10666:93:20"},{"nodeType":"YulAssignment","src":"10768:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10779:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10784:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10775:3:20"},"nodeType":"YulFunctionCall","src":"10775:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10768:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10561:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10569:3:20","type":""}],"src":"10427:366:20"},{"body":{"nodeType":"YulBlock","src":"10945:220:20","statements":[{"nodeType":"YulAssignment","src":"10955:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11021:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11026:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10962:58:20"},"nodeType":"YulFunctionCall","src":"10962:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10955:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11127:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"11038:88:20"},"nodeType":"YulFunctionCall","src":"11038:93:20"},"nodeType":"YulExpressionStatement","src":"11038:93:20"},{"nodeType":"YulAssignment","src":"11140:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11151:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11156:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11147:3:20"},"nodeType":"YulFunctionCall","src":"11147:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11140:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10933:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10941:3:20","type":""}],"src":"10799:366:20"},{"body":{"nodeType":"YulBlock","src":"11317:220:20","statements":[{"nodeType":"YulAssignment","src":"11327:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11393:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11398:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11334:58:20"},"nodeType":"YulFunctionCall","src":"11334:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11327:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11499:3:20"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"11410:88:20"},"nodeType":"YulFunctionCall","src":"11410:93:20"},"nodeType":"YulExpressionStatement","src":"11410:93:20"},{"nodeType":"YulAssignment","src":"11512:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11523:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11528:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11519:3:20"},"nodeType":"YulFunctionCall","src":"11519:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11512:3:20"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11305:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11313:3:20","type":""}],"src":"11171:366:20"},{"body":{"nodeType":"YulBlock","src":"11707:236:20","statements":[{"nodeType":"YulAssignment","src":"11717:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11801:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11806:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11724:76:20"},"nodeType":"YulFunctionCall","src":"11724:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11717:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11906:3:20"}],"functionName":{"name":"store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","nodeType":"YulIdentifier","src":"11817:88:20"},"nodeType":"YulFunctionCall","src":"11817:93:20"},"nodeType":"YulExpressionStatement","src":"11817:93:20"},{"nodeType":"YulAssignment","src":"11919:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11930:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11935:1:20","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11926:3:20"},"nodeType":"YulFunctionCall","src":"11926:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11919:3:20"}]}]},"name":"abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11695:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11703:3:20","type":""}],"src":"11543:400:20"},{"body":{"nodeType":"YulBlock","src":"12113:238:20","statements":[{"nodeType":"YulAssignment","src":"12123:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12207:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12212:2:20","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12130:76:20"},"nodeType":"YulFunctionCall","src":"12130:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12123:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12313:3:20"}],"functionName":{"name":"store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","nodeType":"YulIdentifier","src":"12224:88:20"},"nodeType":"YulFunctionCall","src":"12224:93:20"},"nodeType":"YulExpressionStatement","src":"12224:93:20"},{"nodeType":"YulAssignment","src":"12326:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12337:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12342:2:20","type":"","value":"14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12333:3:20"},"nodeType":"YulFunctionCall","src":"12333:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12326:3:20"}]}]},"name":"abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12101:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12109:3:20","type":""}],"src":"11949:402:20"},{"body":{"nodeType":"YulBlock","src":"12503:220:20","statements":[{"nodeType":"YulAssignment","src":"12513:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12579:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12584:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12520:58:20"},"nodeType":"YulFunctionCall","src":"12520:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12513:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12685:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"12596:88:20"},"nodeType":"YulFunctionCall","src":"12596:93:20"},"nodeType":"YulExpressionStatement","src":"12596:93:20"},{"nodeType":"YulAssignment","src":"12698:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12709:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12714:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12705:3:20"},"nodeType":"YulFunctionCall","src":"12705:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12698:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12491:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12499:3:20","type":""}],"src":"12357:366:20"},{"body":{"nodeType":"YulBlock","src":"12875:220:20","statements":[{"nodeType":"YulAssignment","src":"12885:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12951:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12956:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12892:58:20"},"nodeType":"YulFunctionCall","src":"12892:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12885:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13057:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"12968:88:20"},"nodeType":"YulFunctionCall","src":"12968:93:20"},"nodeType":"YulExpressionStatement","src":"12968:93:20"},{"nodeType":"YulAssignment","src":"13070:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13081:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13086:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13077:3:20"},"nodeType":"YulFunctionCall","src":"13077:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13070:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12863:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12871:3:20","type":""}],"src":"12729:366:20"},{"body":{"nodeType":"YulBlock","src":"13265:238:20","statements":[{"nodeType":"YulAssignment","src":"13275:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13359:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13364:2:20","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13282:76:20"},"nodeType":"YulFunctionCall","src":"13282:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13275:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13465:3:20"}],"functionName":{"name":"store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","nodeType":"YulIdentifier","src":"13376:88:20"},"nodeType":"YulFunctionCall","src":"13376:93:20"},"nodeType":"YulExpressionStatement","src":"13376:93:20"},{"nodeType":"YulAssignment","src":"13478:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13489:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:20","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13485:3:20"},"nodeType":"YulFunctionCall","src":"13485:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13478:3:20"}]}]},"name":"abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13253:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13261:3:20","type":""}],"src":"13101:402:20"},{"body":{"nodeType":"YulBlock","src":"13655:220:20","statements":[{"nodeType":"YulAssignment","src":"13665:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13731:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13736:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13672:58:20"},"nodeType":"YulFunctionCall","src":"13672:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13665:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13837:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"13748:88:20"},"nodeType":"YulFunctionCall","src":"13748:93:20"},"nodeType":"YulExpressionStatement","src":"13748:93:20"},{"nodeType":"YulAssignment","src":"13850:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13861:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13866:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13857:3:20"},"nodeType":"YulFunctionCall","src":"13857:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13850:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13643:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13651:3:20","type":""}],"src":"13509:366:20"},{"body":{"nodeType":"YulBlock","src":"14045:236:20","statements":[{"nodeType":"YulAssignment","src":"14055:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14139:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14144:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14062:76:20"},"nodeType":"YulFunctionCall","src":"14062:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14055:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14244:3:20"}],"functionName":{"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulIdentifier","src":"14155:88:20"},"nodeType":"YulFunctionCall","src":"14155:93:20"},"nodeType":"YulExpressionStatement","src":"14155:93:20"},{"nodeType":"YulAssignment","src":"14257:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14268:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14273:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14264:3:20"},"nodeType":"YulFunctionCall","src":"14264:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14257:3:20"}]}]},"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14033:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14041:3:20","type":""}],"src":"13881:400:20"},{"body":{"nodeType":"YulBlock","src":"14451:238:20","statements":[{"nodeType":"YulAssignment","src":"14461:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14545:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14550:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14468:76:20"},"nodeType":"YulFunctionCall","src":"14468:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14461:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14651:3:20"}],"functionName":{"name":"store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","nodeType":"YulIdentifier","src":"14562:88:20"},"nodeType":"YulFunctionCall","src":"14562:93:20"},"nodeType":"YulExpressionStatement","src":"14562:93:20"},{"nodeType":"YulAssignment","src":"14664:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14675:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14680:2:20","type":"","value":"37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14671:3:20"},"nodeType":"YulFunctionCall","src":"14671:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14664:3:20"}]}]},"name":"abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14439:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14447:3:20","type":""}],"src":"14287:402:20"},{"body":{"nodeType":"YulBlock","src":"14859:236:20","statements":[{"nodeType":"YulAssignment","src":"14869:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14953:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14958:1:20","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14876:76:20"},"nodeType":"YulFunctionCall","src":"14876:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14869:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15058:3:20"}],"functionName":{"name":"store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","nodeType":"YulIdentifier","src":"14969:88:20"},"nodeType":"YulFunctionCall","src":"14969:93:20"},"nodeType":"YulExpressionStatement","src":"14969:93:20"},{"nodeType":"YulAssignment","src":"15071:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15082:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15087:1:20","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15078:3:20"},"nodeType":"YulFunctionCall","src":"15078:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15071:3:20"}]}]},"name":"abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14847:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14855:3:20","type":""}],"src":"14695:400:20"},{"body":{"nodeType":"YulBlock","src":"15247:220:20","statements":[{"nodeType":"YulAssignment","src":"15257:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15323:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15328:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15264:58:20"},"nodeType":"YulFunctionCall","src":"15264:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15257:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15429:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"15340:88:20"},"nodeType":"YulFunctionCall","src":"15340:93:20"},"nodeType":"YulExpressionStatement","src":"15340:93:20"},{"nodeType":"YulAssignment","src":"15442:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15453:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15458:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15449:3:20"},"nodeType":"YulFunctionCall","src":"15449:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15442:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15235:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15243:3:20","type":""}],"src":"15101:366:20"},{"body":{"nodeType":"YulBlock","src":"15619:220:20","statements":[{"nodeType":"YulAssignment","src":"15629:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15695:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15700:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15636:58:20"},"nodeType":"YulFunctionCall","src":"15636:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15629:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15801:3:20"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"15712:88:20"},"nodeType":"YulFunctionCall","src":"15712:93:20"},"nodeType":"YulExpressionStatement","src":"15712:93:20"},{"nodeType":"YulAssignment","src":"15814:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15825:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15830:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15821:3:20"},"nodeType":"YulFunctionCall","src":"15821:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15814:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15607:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15615:3:20","type":""}],"src":"15473:366:20"},{"body":{"nodeType":"YulBlock","src":"16009:236:20","statements":[{"nodeType":"YulAssignment","src":"16019:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16103:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16108:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16026:76:20"},"nodeType":"YulFunctionCall","src":"16026:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16019:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16208:3:20"}],"functionName":{"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulIdentifier","src":"16119:88:20"},"nodeType":"YulFunctionCall","src":"16119:93:20"},"nodeType":"YulExpressionStatement","src":"16119:93:20"},{"nodeType":"YulAssignment","src":"16221:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16232:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16237:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16228:3:20"},"nodeType":"YulFunctionCall","src":"16228:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16221:3:20"}]}]},"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15997:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16005:3:20","type":""}],"src":"15845:400:20"},{"body":{"nodeType":"YulBlock","src":"16397:220:20","statements":[{"nodeType":"YulAssignment","src":"16407:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16478:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16414:58:20"},"nodeType":"YulFunctionCall","src":"16414:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16407:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16579:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"16490:88:20"},"nodeType":"YulFunctionCall","src":"16490:93:20"},"nodeType":"YulExpressionStatement","src":"16490:93:20"},{"nodeType":"YulAssignment","src":"16592:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16603:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16608:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16599:3:20"},"nodeType":"YulFunctionCall","src":"16599:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16592:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16385:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16393:3:20","type":""}],"src":"16251:366:20"},{"body":{"nodeType":"YulBlock","src":"16787:236:20","statements":[{"nodeType":"YulAssignment","src":"16797:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16881:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16886:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16804:76:20"},"nodeType":"YulFunctionCall","src":"16804:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16797:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16986:3:20"}],"functionName":{"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulIdentifier","src":"16897:88:20"},"nodeType":"YulFunctionCall","src":"16897:93:20"},"nodeType":"YulExpressionStatement","src":"16897:93:20"},{"nodeType":"YulAssignment","src":"16999:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17010:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17015:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17006:3:20"},"nodeType":"YulFunctionCall","src":"17006:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16999:3:20"}]}]},"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16775:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16783:3:20","type":""}],"src":"16623:400:20"},{"body":{"nodeType":"YulBlock","src":"17175:220:20","statements":[{"nodeType":"YulAssignment","src":"17185:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17251:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17256:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17192:58:20"},"nodeType":"YulFunctionCall","src":"17192:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17185:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17357:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"17268:88:20"},"nodeType":"YulFunctionCall","src":"17268:93:20"},"nodeType":"YulExpressionStatement","src":"17268:93:20"},{"nodeType":"YulAssignment","src":"17370:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17381:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17386:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17377:3:20"},"nodeType":"YulFunctionCall","src":"17377:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17370:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17163:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17171:3:20","type":""}],"src":"17029:366:20"},{"body":{"nodeType":"YulBlock","src":"17547:220:20","statements":[{"nodeType":"YulAssignment","src":"17557:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17628:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17564:58:20"},"nodeType":"YulFunctionCall","src":"17564:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17557:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17729:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"17640:88:20"},"nodeType":"YulFunctionCall","src":"17640:93:20"},"nodeType":"YulExpressionStatement","src":"17640:93:20"},{"nodeType":"YulAssignment","src":"17742:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17753:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17758:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17749:3:20"},"nodeType":"YulFunctionCall","src":"17749:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17742:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17535:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17543:3:20","type":""}],"src":"17401:366:20"},{"body":{"nodeType":"YulBlock","src":"17937:238:20","statements":[{"nodeType":"YulAssignment","src":"17947:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18031:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18036:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17954:76:20"},"nodeType":"YulFunctionCall","src":"17954:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17947:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18137:3:20"}],"functionName":{"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulIdentifier","src":"18048:88:20"},"nodeType":"YulFunctionCall","src":"18048:93:20"},"nodeType":"YulExpressionStatement","src":"18048:93:20"},{"nodeType":"YulAssignment","src":"18150:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18161:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18166:2:20","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18157:3:20"},"nodeType":"YulFunctionCall","src":"18157:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18150:3:20"}]}]},"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17925:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17933:3:20","type":""}],"src":"17773:402:20"},{"body":{"nodeType":"YulBlock","src":"18344:235:20","statements":[{"nodeType":"YulAssignment","src":"18354:90:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18437:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18442:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18361:75:20"},"nodeType":"YulFunctionCall","src":"18361:83:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18354:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18542:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"18453:88:20"},"nodeType":"YulFunctionCall","src":"18453:93:20"},"nodeType":"YulExpressionStatement","src":"18453:93:20"},{"nodeType":"YulAssignment","src":"18555:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18566:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18571:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18562:3:20"},"nodeType":"YulFunctionCall","src":"18562:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18555:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18332:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18340:3:20","type":""}],"src":"18181:398:20"},{"body":{"nodeType":"YulBlock","src":"18731:220:20","statements":[{"nodeType":"YulAssignment","src":"18741:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18807:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18812:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18748:58:20"},"nodeType":"YulFunctionCall","src":"18748:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18741:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18913:3:20"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"18824:88:20"},"nodeType":"YulFunctionCall","src":"18824:93:20"},"nodeType":"YulExpressionStatement","src":"18824:93:20"},{"nodeType":"YulAssignment","src":"18926:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18937:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18942:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18933:3:20"},"nodeType":"YulFunctionCall","src":"18933:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18926:3:20"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18719:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18727:3:20","type":""}],"src":"18585:366:20"},{"body":{"nodeType":"YulBlock","src":"19103:220:20","statements":[{"nodeType":"YulAssignment","src":"19113:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19179:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19184:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19120:58:20"},"nodeType":"YulFunctionCall","src":"19120:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19113:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19285:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"19196:88:20"},"nodeType":"YulFunctionCall","src":"19196:93:20"},"nodeType":"YulExpressionStatement","src":"19196:93:20"},{"nodeType":"YulAssignment","src":"19298:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19309:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19314:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19305:3:20"},"nodeType":"YulFunctionCall","src":"19305:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19298:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19091:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19099:3:20","type":""}],"src":"18957:366:20"},{"body":{"nodeType":"YulBlock","src":"19493:238:20","statements":[{"nodeType":"YulAssignment","src":"19503:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19587:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19592:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19510:76:20"},"nodeType":"YulFunctionCall","src":"19510:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19503:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19693:3:20"}],"functionName":{"name":"store_literal_in_memory_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2","nodeType":"YulIdentifier","src":"19604:88:20"},"nodeType":"YulFunctionCall","src":"19604:93:20"},"nodeType":"YulExpressionStatement","src":"19604:93:20"},{"nodeType":"YulAssignment","src":"19706:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19717:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19722:2:20","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19713:3:20"},"nodeType":"YulFunctionCall","src":"19713:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19706:3:20"}]}]},"name":"abi_encode_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19481:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19489:3:20","type":""}],"src":"19329:402:20"},{"body":{"nodeType":"YulBlock","src":"19800:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19817:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19839:5:20"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"19822:16:20"},"nodeType":"YulFunctionCall","src":"19822:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19810:6:20"},"nodeType":"YulFunctionCall","src":"19810:36:20"},"nodeType":"YulExpressionStatement","src":"19810:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19788:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19795:3:20","type":""}],"src":"19737:115:20"},{"body":{"nodeType":"YulBlock","src":"19923:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19940:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19963:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19945:17:20"},"nodeType":"YulFunctionCall","src":"19945:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19933:6:20"},"nodeType":"YulFunctionCall","src":"19933:37:20"},"nodeType":"YulExpressionStatement","src":"19933:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19911:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19918:3:20","type":""}],"src":"19858:118:20"},{"body":{"nodeType":"YulBlock","src":"20045:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20062:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20084:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"20067:16:20"},"nodeType":"YulFunctionCall","src":"20067:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20055:6:20"},"nodeType":"YulFunctionCall","src":"20055:36:20"},"nodeType":"YulExpressionStatement","src":"20055:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20033:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20040:3:20","type":""}],"src":"19982:115:20"},{"body":{"nodeType":"YulBlock","src":"20166:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20183:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20205:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20188:16:20"},"nodeType":"YulFunctionCall","src":"20188:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20176:6:20"},"nodeType":"YulFunctionCall","src":"20176:36:20"},"nodeType":"YulExpressionStatement","src":"20176:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20154:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20161:3:20","type":""}],"src":"20103:115:20"},{"body":{"nodeType":"YulBlock","src":"20360:139:20","statements":[{"nodeType":"YulAssignment","src":"20371:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20460:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20469:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20378:81:20"},"nodeType":"YulFunctionCall","src":"20378:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20371:3:20"}]},{"nodeType":"YulAssignment","src":"20483:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"20490:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20483:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20339:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20345:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20356:3:20","type":""}],"src":"20224:275:20"},{"body":{"nodeType":"YulBlock","src":"20689:251:20","statements":[{"nodeType":"YulAssignment","src":"20700:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20789:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20798:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20707:81:20"},"nodeType":"YulFunctionCall","src":"20707:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20700:3:20"}]},{"nodeType":"YulAssignment","src":"20812:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20901:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20910:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20819:81:20"},"nodeType":"YulFunctionCall","src":"20819:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20812:3:20"}]},{"nodeType":"YulAssignment","src":"20924:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"20931:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20924:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20660:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20666:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20674:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20685:3:20","type":""}],"src":"20505:435:20"},{"body":{"nodeType":"YulBlock","src":"21226:475:20","statements":[{"nodeType":"YulAssignment","src":"21237:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21326:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21335:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21244:81:20"},"nodeType":"YulFunctionCall","src":"21244:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21237:3:20"}]},{"nodeType":"YulAssignment","src":"21349:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21438:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21447:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21356:81:20"},"nodeType":"YulFunctionCall","src":"21356:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21349:3:20"}]},{"nodeType":"YulAssignment","src":"21461:102:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21550:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21559:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21468:81:20"},"nodeType":"YulFunctionCall","src":"21468:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21461:3:20"}]},{"nodeType":"YulAssignment","src":"21573:102:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21662:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21671:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21580:81:20"},"nodeType":"YulFunctionCall","src":"21580:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21573:3:20"}]},{"nodeType":"YulAssignment","src":"21685:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"21692:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21685:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21181:3:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21187:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21195:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21203:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21211:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21222:3:20","type":""}],"src":"20946:755:20"},{"body":{"nodeType":"YulBlock","src":"22083:699:20","statements":[{"nodeType":"YulAssignment","src":"22094:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22183:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22192:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22101:81:20"},"nodeType":"YulFunctionCall","src":"22101:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22094:3:20"}]},{"nodeType":"YulAssignment","src":"22206:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22295:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22304:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22213:81:20"},"nodeType":"YulFunctionCall","src":"22213:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22206:3:20"}]},{"nodeType":"YulAssignment","src":"22318:102:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22407:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22416:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22325:81:20"},"nodeType":"YulFunctionCall","src":"22325:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22318:3:20"}]},{"nodeType":"YulAssignment","src":"22430:102:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22519:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22528:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22437:81:20"},"nodeType":"YulFunctionCall","src":"22437:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22430:3:20"}]},{"nodeType":"YulAssignment","src":"22542:102:20","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22631:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22640:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22549:81:20"},"nodeType":"YulFunctionCall","src":"22549:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22542:3:20"}]},{"nodeType":"YulAssignment","src":"22654:102:20","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"22743:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"22752:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22661:81:20"},"nodeType":"YulFunctionCall","src":"22661:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22654:3:20"}]},{"nodeType":"YulAssignment","src":"22766:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"22773:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22766:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22022:3:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22028:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22036:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22044:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22052:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22060:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22068:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22079:3:20","type":""}],"src":"21707:1075:20"},{"body":{"nodeType":"YulBlock","src":"23631:1294:20","statements":[{"nodeType":"YulAssignment","src":"23642:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23793:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23649:142:20"},"nodeType":"YulFunctionCall","src":"23649:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23642:3:20"}]},{"nodeType":"YulAssignment","src":"23807:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23958:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23814:142:20"},"nodeType":"YulFunctionCall","src":"23814:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23807:3:20"}]},{"nodeType":"YulAssignment","src":"23972:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24123:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23979:142:20"},"nodeType":"YulFunctionCall","src":"23979:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23972:3:20"}]},{"nodeType":"YulAssignment","src":"24137:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24288:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24144:142:20"},"nodeType":"YulFunctionCall","src":"24144:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24137:3:20"}]},{"nodeType":"YulAssignment","src":"24302:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24453:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24309:142:20"},"nodeType":"YulFunctionCall","src":"24309:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24302:3:20"}]},{"nodeType":"YulAssignment","src":"24467:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24556:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"24565:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24474:81:20"},"nodeType":"YulFunctionCall","src":"24474:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24467:3:20"}]},{"nodeType":"YulAssignment","src":"24579:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24730:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24586:142:20"},"nodeType":"YulFunctionCall","src":"24586:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24579:3:20"}]},{"nodeType":"YulAssignment","src":"24744:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24895:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24751:142:20"},"nodeType":"YulFunctionCall","src":"24751:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24744:3:20"}]},{"nodeType":"YulAssignment","src":"24909:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"24916:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24909:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23610:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23616:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23627:3:20","type":""}],"src":"22788:2137:20"},{"body":{"nodeType":"YulBlock","src":"25168:304:20","statements":[{"nodeType":"YulAssignment","src":"25179:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25330:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25186:142:20"},"nodeType":"YulFunctionCall","src":"25186:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25179:3:20"}]},{"nodeType":"YulAssignment","src":"25344:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25433:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"25442:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25351:81:20"},"nodeType":"YulFunctionCall","src":"25351:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25344:3:20"}]},{"nodeType":"YulAssignment","src":"25456:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"25463:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25456:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25147:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25153:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25164:3:20","type":""}],"src":"24931:541:20"},{"body":{"nodeType":"YulBlock","src":"25666:191:20","statements":[{"nodeType":"YulAssignment","src":"25677:154:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25827:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25684:141:20"},"nodeType":"YulFunctionCall","src":"25684:147:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25677:3:20"}]},{"nodeType":"YulAssignment","src":"25841:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"25848:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25841:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25653:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25662:3:20","type":""}],"src":"25478:379:20"},{"body":{"nodeType":"YulBlock","src":"26201:469:20","statements":[{"nodeType":"YulAssignment","src":"26212:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26363:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26219:142:20"},"nodeType":"YulFunctionCall","src":"26219:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26212:3:20"}]},{"nodeType":"YulAssignment","src":"26377:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26466:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"26475:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26384:81:20"},"nodeType":"YulFunctionCall","src":"26384:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26377:3:20"}]},{"nodeType":"YulAssignment","src":"26489:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26640:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26496:142:20"},"nodeType":"YulFunctionCall","src":"26496:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26489:3:20"}]},{"nodeType":"YulAssignment","src":"26654:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"26661:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26654:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_t_string_memory_ptr_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26180:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26186:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26197:3:20","type":""}],"src":"25863:807:20"},{"body":{"nodeType":"YulBlock","src":"26774:124:20","statements":[{"nodeType":"YulAssignment","src":"26784:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26796:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26807:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26792:3:20"},"nodeType":"YulFunctionCall","src":"26792:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26784:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26864:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26877:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26888:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26873:3:20"},"nodeType":"YulFunctionCall","src":"26873:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26820:43:20"},"nodeType":"YulFunctionCall","src":"26820:71:20"},"nodeType":"YulExpressionStatement","src":"26820:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26746:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26758:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26769:4:20","type":""}],"src":"26676:222:20"},{"body":{"nodeType":"YulBlock","src":"27030:206:20","statements":[{"nodeType":"YulAssignment","src":"27040:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27052:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27063:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27048:3:20"},"nodeType":"YulFunctionCall","src":"27048:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27040:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27120:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27133:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27144:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27129:3:20"},"nodeType":"YulFunctionCall","src":"27129:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27076:43:20"},"nodeType":"YulFunctionCall","src":"27076:71:20"},"nodeType":"YulExpressionStatement","src":"27076:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27201:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27214:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27225:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27210:3:20"},"nodeType":"YulFunctionCall","src":"27210:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27157:43:20"},"nodeType":"YulFunctionCall","src":"27157:72:20"},"nodeType":"YulExpressionStatement","src":"27157:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26994:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27006:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27014:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27025:4:20","type":""}],"src":"26904:332:20"},{"body":{"nodeType":"YulBlock","src":"27442:440:20","statements":[{"nodeType":"YulAssignment","src":"27452:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27464:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27475:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27460:3:20"},"nodeType":"YulFunctionCall","src":"27460:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27452:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27533:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27546:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27557:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27542:3:20"},"nodeType":"YulFunctionCall","src":"27542:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27489:43:20"},"nodeType":"YulFunctionCall","src":"27489:71:20"},"nodeType":"YulExpressionStatement","src":"27489:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27614:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27627:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27638:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27623:3:20"},"nodeType":"YulFunctionCall","src":"27623:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27570:43:20"},"nodeType":"YulFunctionCall","src":"27570:72:20"},"nodeType":"YulExpressionStatement","src":"27570:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27696:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27709:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27720:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27705:3:20"},"nodeType":"YulFunctionCall","src":"27705:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27652:43:20"},"nodeType":"YulFunctionCall","src":"27652:72:20"},"nodeType":"YulExpressionStatement","src":"27652:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27745:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27756:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27741:3:20"},"nodeType":"YulFunctionCall","src":"27741:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27765:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27771:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27761:3:20"},"nodeType":"YulFunctionCall","src":"27761:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27734:6:20"},"nodeType":"YulFunctionCall","src":"27734:48:20"},"nodeType":"YulExpressionStatement","src":"27734:48:20"},{"nodeType":"YulAssignment","src":"27791:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27861:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"27870:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27799:61:20"},"nodeType":"YulFunctionCall","src":"27799:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27791:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27390:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27402:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27410:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27418:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27426:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27437:4:20","type":""}],"src":"27242:640:20"},{"body":{"nodeType":"YulBlock","src":"27980:118:20","statements":[{"nodeType":"YulAssignment","src":"27990:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28002:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28013:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27998:3:20"},"nodeType":"YulFunctionCall","src":"27998:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27990:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28064:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28077:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28088:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28073:3:20"},"nodeType":"YulFunctionCall","src":"28073:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"28026:37:20"},"nodeType":"YulFunctionCall","src":"28026:65:20"},"nodeType":"YulExpressionStatement","src":"28026:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27952:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27964:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27975:4:20","type":""}],"src":"27888:210:20"},{"body":{"nodeType":"YulBlock","src":"28242:269:20","statements":[{"nodeType":"YulAssignment","src":"28252:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28264:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28275:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28260:3:20"},"nodeType":"YulFunctionCall","src":"28260:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28252:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28326:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28339:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28350:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28335:3:20"},"nodeType":"YulFunctionCall","src":"28335:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"28288:37:20"},"nodeType":"YulFunctionCall","src":"28288:65:20"},"nodeType":"YulExpressionStatement","src":"28288:65:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28374:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28385:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28370:3:20"},"nodeType":"YulFunctionCall","src":"28370:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28394:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28400:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28390:3:20"},"nodeType":"YulFunctionCall","src":"28390:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28363:6:20"},"nodeType":"YulFunctionCall","src":"28363:48:20"},"nodeType":"YulExpressionStatement","src":"28363:48:20"},{"nodeType":"YulAssignment","src":"28420:84:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28490:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"28499:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28428:61:20"},"nodeType":"YulFunctionCall","src":"28428:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28420:4:20"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28206:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28218:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28226:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28237:4:20","type":""}],"src":"28104:407:20"},{"body":{"nodeType":"YulBlock","src":"28719:446:20","statements":[{"nodeType":"YulAssignment","src":"28729:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28741:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28752:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28737:3:20"},"nodeType":"YulFunctionCall","src":"28737:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28729:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28810:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28823:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28834:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28819:3:20"},"nodeType":"YulFunctionCall","src":"28819:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28766:43:20"},"nodeType":"YulFunctionCall","src":"28766:71:20"},"nodeType":"YulExpressionStatement","src":"28766:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28889:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28902:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28913:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28898:3:20"},"nodeType":"YulFunctionCall","src":"28898:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"28847:41:20"},"nodeType":"YulFunctionCall","src":"28847:70:20"},"nodeType":"YulExpressionStatement","src":"28847:70:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28969:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28982:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28993:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28978:3:20"},"nodeType":"YulFunctionCall","src":"28978:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"28927:41:20"},"nodeType":"YulFunctionCall","src":"28927:70:20"},"nodeType":"YulExpressionStatement","src":"28927:70:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29049:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29062:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29073:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29058:3:20"},"nodeType":"YulFunctionCall","src":"29058:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"29007:41:20"},"nodeType":"YulFunctionCall","src":"29007:70:20"},"nodeType":"YulExpressionStatement","src":"29007:70:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29129:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29142:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29153:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29138:3:20"},"nodeType":"YulFunctionCall","src":"29138:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"29087:41:20"},"nodeType":"YulFunctionCall","src":"29087:71:20"},"nodeType":"YulExpressionStatement","src":"29087:71:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28659:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28671:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28679:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28687:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28695:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28703:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28714:4:20","type":""}],"src":"28517:648:20"},{"body":{"nodeType":"YulBlock","src":"29289:195:20","statements":[{"nodeType":"YulAssignment","src":"29299:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29311:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29322:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29307:3:20"},"nodeType":"YulFunctionCall","src":"29307:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29299:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29346:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29357:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29342:3:20"},"nodeType":"YulFunctionCall","src":"29342:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29365:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29371:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29361:3:20"},"nodeType":"YulFunctionCall","src":"29361:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29335:6:20"},"nodeType":"YulFunctionCall","src":"29335:47:20"},"nodeType":"YulExpressionStatement","src":"29335:47:20"},{"nodeType":"YulAssignment","src":"29391:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29463:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"29472:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29399:63:20"},"nodeType":"YulFunctionCall","src":"29399:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29391:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29261:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29273:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29284:4:20","type":""}],"src":"29171:313:20"},{"body":{"nodeType":"YulBlock","src":"29661:248:20","statements":[{"nodeType":"YulAssignment","src":"29671:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29683:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29694:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29679:3:20"},"nodeType":"YulFunctionCall","src":"29679:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29671:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29718:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29729:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29714:3:20"},"nodeType":"YulFunctionCall","src":"29714:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29737:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29743:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29733:3:20"},"nodeType":"YulFunctionCall","src":"29733:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29707:6:20"},"nodeType":"YulFunctionCall","src":"29707:47:20"},"nodeType":"YulExpressionStatement","src":"29707:47:20"},{"nodeType":"YulAssignment","src":"29763:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29897:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29771:124:20"},"nodeType":"YulFunctionCall","src":"29771:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29763:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29641:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29656:4:20","type":""}],"src":"29490:419:20"},{"body":{"nodeType":"YulBlock","src":"30086:248:20","statements":[{"nodeType":"YulAssignment","src":"30096:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30108:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30119:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30104:3:20"},"nodeType":"YulFunctionCall","src":"30104:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30096:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30143:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30154:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30139:3:20"},"nodeType":"YulFunctionCall","src":"30139:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30162:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30168:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30158:3:20"},"nodeType":"YulFunctionCall","src":"30158:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30132:6:20"},"nodeType":"YulFunctionCall","src":"30132:47:20"},"nodeType":"YulExpressionStatement","src":"30132:47:20"},{"nodeType":"YulAssignment","src":"30188:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30322:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30196:124:20"},"nodeType":"YulFunctionCall","src":"30196:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30188:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30066:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30081:4:20","type":""}],"src":"29915:419:20"},{"body":{"nodeType":"YulBlock","src":"30511:248:20","statements":[{"nodeType":"YulAssignment","src":"30521:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30533:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30544:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30529:3:20"},"nodeType":"YulFunctionCall","src":"30529:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30521:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30568:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30579:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30564:3:20"},"nodeType":"YulFunctionCall","src":"30564:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30587:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30593:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30583:3:20"},"nodeType":"YulFunctionCall","src":"30583:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30557:6:20"},"nodeType":"YulFunctionCall","src":"30557:47:20"},"nodeType":"YulExpressionStatement","src":"30557:47:20"},{"nodeType":"YulAssignment","src":"30613:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30747:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30621:124:20"},"nodeType":"YulFunctionCall","src":"30621:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30613:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30491:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30506:4:20","type":""}],"src":"30340:419:20"},{"body":{"nodeType":"YulBlock","src":"30936:248:20","statements":[{"nodeType":"YulAssignment","src":"30946:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30958:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30969:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30954:3:20"},"nodeType":"YulFunctionCall","src":"30954:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30946:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30993:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31004:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30989:3:20"},"nodeType":"YulFunctionCall","src":"30989:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31012:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31018:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31008:3:20"},"nodeType":"YulFunctionCall","src":"31008:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30982:6:20"},"nodeType":"YulFunctionCall","src":"30982:47:20"},"nodeType":"YulExpressionStatement","src":"30982:47:20"},{"nodeType":"YulAssignment","src":"31038:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31172:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31046:124:20"},"nodeType":"YulFunctionCall","src":"31046:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31038:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30916:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30931:4:20","type":""}],"src":"30765:419:20"},{"body":{"nodeType":"YulBlock","src":"31361:248:20","statements":[{"nodeType":"YulAssignment","src":"31371:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31383:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31394:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31379:3:20"},"nodeType":"YulFunctionCall","src":"31379:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31371:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31418:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31429:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31414:3:20"},"nodeType":"YulFunctionCall","src":"31414:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31437:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31443:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31433:3:20"},"nodeType":"YulFunctionCall","src":"31433:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31407:6:20"},"nodeType":"YulFunctionCall","src":"31407:47:20"},"nodeType":"YulExpressionStatement","src":"31407:47:20"},{"nodeType":"YulAssignment","src":"31463:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31597:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31471:124:20"},"nodeType":"YulFunctionCall","src":"31471:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31463:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31341:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31356:4:20","type":""}],"src":"31190:419:20"},{"body":{"nodeType":"YulBlock","src":"31786:248:20","statements":[{"nodeType":"YulAssignment","src":"31796:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31808:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31819:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31804:3:20"},"nodeType":"YulFunctionCall","src":"31804:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31796:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31843:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31854:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31839:3:20"},"nodeType":"YulFunctionCall","src":"31839:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31862:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31868:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31858:3:20"},"nodeType":"YulFunctionCall","src":"31858:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31832:6:20"},"nodeType":"YulFunctionCall","src":"31832:47:20"},"nodeType":"YulExpressionStatement","src":"31832:47:20"},{"nodeType":"YulAssignment","src":"31888:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32022:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31896:124:20"},"nodeType":"YulFunctionCall","src":"31896:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31888:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31766:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31781:4:20","type":""}],"src":"31615:419:20"},{"body":{"nodeType":"YulBlock","src":"32211:248:20","statements":[{"nodeType":"YulAssignment","src":"32221:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32233:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32244:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32229:3:20"},"nodeType":"YulFunctionCall","src":"32229:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32221:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32268:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32279:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32264:3:20"},"nodeType":"YulFunctionCall","src":"32264:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32287:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32293:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32283:3:20"},"nodeType":"YulFunctionCall","src":"32283:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32257:6:20"},"nodeType":"YulFunctionCall","src":"32257:47:20"},"nodeType":"YulExpressionStatement","src":"32257:47:20"},{"nodeType":"YulAssignment","src":"32313:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32447:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32321:124:20"},"nodeType":"YulFunctionCall","src":"32321:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32313:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32191:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32206:4:20","type":""}],"src":"32040:419:20"},{"body":{"nodeType":"YulBlock","src":"32636:248:20","statements":[{"nodeType":"YulAssignment","src":"32646:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32658:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32669:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32654:3:20"},"nodeType":"YulFunctionCall","src":"32654:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32646:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32693:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32704:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32689:3:20"},"nodeType":"YulFunctionCall","src":"32689:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32712:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32718:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32708:3:20"},"nodeType":"YulFunctionCall","src":"32708:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32682:6:20"},"nodeType":"YulFunctionCall","src":"32682:47:20"},"nodeType":"YulExpressionStatement","src":"32682:47:20"},{"nodeType":"YulAssignment","src":"32738:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32872:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32746:124:20"},"nodeType":"YulFunctionCall","src":"32746:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32738:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32616:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32631:4:20","type":""}],"src":"32465:419:20"},{"body":{"nodeType":"YulBlock","src":"33061:248:20","statements":[{"nodeType":"YulAssignment","src":"33071:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33083:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33094:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33079:3:20"},"nodeType":"YulFunctionCall","src":"33079:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33071:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33118:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33129:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33114:3:20"},"nodeType":"YulFunctionCall","src":"33114:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33137:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33143:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33133:3:20"},"nodeType":"YulFunctionCall","src":"33133:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33107:6:20"},"nodeType":"YulFunctionCall","src":"33107:47:20"},"nodeType":"YulExpressionStatement","src":"33107:47:20"},{"nodeType":"YulAssignment","src":"33163:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33297:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33171:124:20"},"nodeType":"YulFunctionCall","src":"33171:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33163:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33041:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33056:4:20","type":""}],"src":"32890:419:20"},{"body":{"nodeType":"YulBlock","src":"33486:248:20","statements":[{"nodeType":"YulAssignment","src":"33496:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33508:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33519:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33504:3:20"},"nodeType":"YulFunctionCall","src":"33504:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33496:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33543:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33554:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33539:3:20"},"nodeType":"YulFunctionCall","src":"33539:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33562:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33568:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33558:3:20"},"nodeType":"YulFunctionCall","src":"33558:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33532:6:20"},"nodeType":"YulFunctionCall","src":"33532:47:20"},"nodeType":"YulExpressionStatement","src":"33532:47:20"},{"nodeType":"YulAssignment","src":"33588:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33722:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33596:124:20"},"nodeType":"YulFunctionCall","src":"33596:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33588:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33466:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33481:4:20","type":""}],"src":"33315:419:20"},{"body":{"nodeType":"YulBlock","src":"33911:248:20","statements":[{"nodeType":"YulAssignment","src":"33921:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33933:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33944:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33929:3:20"},"nodeType":"YulFunctionCall","src":"33929:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33921:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33968:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33979:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33964:3:20"},"nodeType":"YulFunctionCall","src":"33964:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33987:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33993:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33983:3:20"},"nodeType":"YulFunctionCall","src":"33983:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33957:6:20"},"nodeType":"YulFunctionCall","src":"33957:47:20"},"nodeType":"YulExpressionStatement","src":"33957:47:20"},{"nodeType":"YulAssignment","src":"34013:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34147:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34021:124:20"},"nodeType":"YulFunctionCall","src":"34021:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34013:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33891:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33906:4:20","type":""}],"src":"33740:419:20"},{"body":{"nodeType":"YulBlock","src":"34336:248:20","statements":[{"nodeType":"YulAssignment","src":"34346:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34358:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34369:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34354:3:20"},"nodeType":"YulFunctionCall","src":"34354:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34346:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34393:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34404:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34389:3:20"},"nodeType":"YulFunctionCall","src":"34389:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34412:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34418:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34408:3:20"},"nodeType":"YulFunctionCall","src":"34408:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34382:6:20"},"nodeType":"YulFunctionCall","src":"34382:47:20"},"nodeType":"YulExpressionStatement","src":"34382:47:20"},{"nodeType":"YulAssignment","src":"34438:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34572:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34446:124:20"},"nodeType":"YulFunctionCall","src":"34446:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34438:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34316:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34331:4:20","type":""}],"src":"34165:419:20"},{"body":{"nodeType":"YulBlock","src":"34761:248:20","statements":[{"nodeType":"YulAssignment","src":"34771:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34783:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34794:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34779:3:20"},"nodeType":"YulFunctionCall","src":"34779:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34771:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34818:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34829:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34814:3:20"},"nodeType":"YulFunctionCall","src":"34814:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34837:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34843:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34833:3:20"},"nodeType":"YulFunctionCall","src":"34833:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34807:6:20"},"nodeType":"YulFunctionCall","src":"34807:47:20"},"nodeType":"YulExpressionStatement","src":"34807:47:20"},{"nodeType":"YulAssignment","src":"34863:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34997:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34871:124:20"},"nodeType":"YulFunctionCall","src":"34871:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34863:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34741:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34756:4:20","type":""}],"src":"34590:419:20"},{"body":{"nodeType":"YulBlock","src":"35186:248:20","statements":[{"nodeType":"YulAssignment","src":"35196:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35208:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35219:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35204:3:20"},"nodeType":"YulFunctionCall","src":"35204:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35196:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35243:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35254:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35239:3:20"},"nodeType":"YulFunctionCall","src":"35239:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35262:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35268:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35258:3:20"},"nodeType":"YulFunctionCall","src":"35258:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35232:6:20"},"nodeType":"YulFunctionCall","src":"35232:47:20"},"nodeType":"YulExpressionStatement","src":"35232:47:20"},{"nodeType":"YulAssignment","src":"35288:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35422:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35296:124:20"},"nodeType":"YulFunctionCall","src":"35296:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35288:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35166:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35181:4:20","type":""}],"src":"35015:419:20"},{"body":{"nodeType":"YulBlock","src":"35611:248:20","statements":[{"nodeType":"YulAssignment","src":"35621:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35633:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35644:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35629:3:20"},"nodeType":"YulFunctionCall","src":"35629:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35621:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35668:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35679:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35664:3:20"},"nodeType":"YulFunctionCall","src":"35664:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35687:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35693:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35683:3:20"},"nodeType":"YulFunctionCall","src":"35683:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35657:6:20"},"nodeType":"YulFunctionCall","src":"35657:47:20"},"nodeType":"YulExpressionStatement","src":"35657:47:20"},{"nodeType":"YulAssignment","src":"35713:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35847:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35721:124:20"},"nodeType":"YulFunctionCall","src":"35721:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35713:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35591:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35606:4:20","type":""}],"src":"35440:419:20"},{"body":{"nodeType":"YulBlock","src":"36036:248:20","statements":[{"nodeType":"YulAssignment","src":"36046:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36058:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36069:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36054:3:20"},"nodeType":"YulFunctionCall","src":"36054:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36046:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36093:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36104:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36089:3:20"},"nodeType":"YulFunctionCall","src":"36089:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36112:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36118:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36108:3:20"},"nodeType":"YulFunctionCall","src":"36108:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36082:6:20"},"nodeType":"YulFunctionCall","src":"36082:47:20"},"nodeType":"YulExpressionStatement","src":"36082:47:20"},{"nodeType":"YulAssignment","src":"36138:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36272:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36146:124:20"},"nodeType":"YulFunctionCall","src":"36146:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36138:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36016:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36031:4:20","type":""}],"src":"35865:419:20"},{"body":{"nodeType":"YulBlock","src":"36388:124:20","statements":[{"nodeType":"YulAssignment","src":"36398:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36410:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36421:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36406:3:20"},"nodeType":"YulFunctionCall","src":"36406:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36398:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36478:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36491:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36502:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36487:3:20"},"nodeType":"YulFunctionCall","src":"36487:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36434:43:20"},"nodeType":"YulFunctionCall","src":"36434:71:20"},"nodeType":"YulExpressionStatement","src":"36434:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36360:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36372:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36383:4:20","type":""}],"src":"36290:222:20"},{"body":{"nodeType":"YulBlock","src":"36644:206:20","statements":[{"nodeType":"YulAssignment","src":"36654:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36666:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36677:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36662:3:20"},"nodeType":"YulFunctionCall","src":"36662:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36654:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36734:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36747:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36758:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36743:3:20"},"nodeType":"YulFunctionCall","src":"36743:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36690:43:20"},"nodeType":"YulFunctionCall","src":"36690:71:20"},"nodeType":"YulExpressionStatement","src":"36690:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36815:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36828:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36839:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36824:3:20"},"nodeType":"YulFunctionCall","src":"36824:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36771:43:20"},"nodeType":"YulFunctionCall","src":"36771:72:20"},"nodeType":"YulExpressionStatement","src":"36771:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36608:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36620:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36628:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36639:4:20","type":""}],"src":"36518:332:20"},{"body":{"nodeType":"YulBlock","src":"37010:288:20","statements":[{"nodeType":"YulAssignment","src":"37020:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37032:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37043:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37028:3:20"},"nodeType":"YulFunctionCall","src":"37028:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37020:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37100:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37113:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37124:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37109:3:20"},"nodeType":"YulFunctionCall","src":"37109:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37056:43:20"},"nodeType":"YulFunctionCall","src":"37056:71:20"},"nodeType":"YulExpressionStatement","src":"37056:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37181:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37194:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37205:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37190:3:20"},"nodeType":"YulFunctionCall","src":"37190:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37137:43:20"},"nodeType":"YulFunctionCall","src":"37137:72:20"},"nodeType":"YulExpressionStatement","src":"37137:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37263:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37276:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37287:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37272:3:20"},"nodeType":"YulFunctionCall","src":"37272:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37219:43:20"},"nodeType":"YulFunctionCall","src":"37219:72:20"},"nodeType":"YulExpressionStatement","src":"37219:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36966:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36978:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36986:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36994:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37005:4:20","type":""}],"src":"36856:442:20"},{"body":{"nodeType":"YulBlock","src":"37345:88:20","statements":[{"nodeType":"YulAssignment","src":"37355:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"37365:18:20"},"nodeType":"YulFunctionCall","src":"37365:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37355:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37414:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"37422:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"37394:19:20"},"nodeType":"YulFunctionCall","src":"37394:33:20"},"nodeType":"YulExpressionStatement","src":"37394:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"37329:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"37338:6:20","type":""}],"src":"37304:129:20"},{"body":{"nodeType":"YulBlock","src":"37479:35:20","statements":[{"nodeType":"YulAssignment","src":"37489:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37505:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37499:5:20"},"nodeType":"YulFunctionCall","src":"37499:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37489:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"37472:6:20","type":""}],"src":"37439:75:20"},{"body":{"nodeType":"YulBlock","src":"37602:229:20","statements":[{"body":{"nodeType":"YulBlock","src":"37707:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37709:16:20"},"nodeType":"YulFunctionCall","src":"37709:18:20"},"nodeType":"YulExpressionStatement","src":"37709:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37679:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37687:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37676:2:20"},"nodeType":"YulFunctionCall","src":"37676:30:20"},"nodeType":"YulIf","src":"37673:2:20"},{"nodeType":"YulAssignment","src":"37739:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37751:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37759:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37747:3:20"},"nodeType":"YulFunctionCall","src":"37747:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37739:4:20"}]},{"nodeType":"YulAssignment","src":"37801:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"37813:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"37819:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37809:3:20"},"nodeType":"YulFunctionCall","src":"37809:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37801:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37586:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37597:4:20","type":""}],"src":"37520:311:20"},{"body":{"nodeType":"YulBlock","src":"37903:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"38008:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"38010:16:20"},"nodeType":"YulFunctionCall","src":"38010:18:20"},"nodeType":"YulExpressionStatement","src":"38010:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37980:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37988:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37977:2:20"},"nodeType":"YulFunctionCall","src":"37977:30:20"},"nodeType":"YulIf","src":"37974:2:20"},{"nodeType":"YulAssignment","src":"38040:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38070:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38048:21:20"},"nodeType":"YulFunctionCall","src":"38048:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38040:4:20"}]},{"nodeType":"YulAssignment","src":"38114:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"38126:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"38132:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38122:3:20"},"nodeType":"YulFunctionCall","src":"38122:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"38114:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37887:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37898:4:20","type":""}],"src":"37837:307:20"},{"body":{"nodeType":"YulBlock","src":"38208:40:20","statements":[{"nodeType":"YulAssignment","src":"38219:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38235:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38229:5:20"},"nodeType":"YulFunctionCall","src":"38229:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38219:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38191:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38201:6:20","type":""}],"src":"38150:98:20"},{"body":{"nodeType":"YulBlock","src":"38313:40:20","statements":[{"nodeType":"YulAssignment","src":"38324:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38340:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38334:5:20"},"nodeType":"YulFunctionCall","src":"38334:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38324:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38296:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38306:6:20","type":""}],"src":"38254:99:20"},{"body":{"nodeType":"YulBlock","src":"38454:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38471:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"38476:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38464:6:20"},"nodeType":"YulFunctionCall","src":"38464:19:20"},"nodeType":"YulExpressionStatement","src":"38464:19:20"},{"nodeType":"YulAssignment","src":"38492:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38511:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38516:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38507:3:20"},"nodeType":"YulFunctionCall","src":"38507:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38492:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38426:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38431:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38442:11:20","type":""}],"src":"38359:168:20"},{"body":{"nodeType":"YulBlock","src":"38646:34:20","statements":[{"nodeType":"YulAssignment","src":"38656:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"38671:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38656:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38618:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38623:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38634:11:20","type":""}],"src":"38533:147:20"},{"body":{"nodeType":"YulBlock","src":"38782:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38799:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"38804:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38792:6:20"},"nodeType":"YulFunctionCall","src":"38792:19:20"},"nodeType":"YulExpressionStatement","src":"38792:19:20"},{"nodeType":"YulAssignment","src":"38820:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38839:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38844:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38835:3:20"},"nodeType":"YulFunctionCall","src":"38835:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38820:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38754:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38759:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38770:11:20","type":""}],"src":"38686:169:20"},{"body":{"nodeType":"YulBlock","src":"38975:34:20","statements":[{"nodeType":"YulAssignment","src":"38985:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"39000:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38985:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38947:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38952:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38963:11:20","type":""}],"src":"38861:148:20"},{"body":{"nodeType":"YulBlock","src":"39059:261:20","statements":[{"nodeType":"YulAssignment","src":"39069:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39092:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39074:17:20"},"nodeType":"YulFunctionCall","src":"39074:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39069:1:20"}]},{"nodeType":"YulAssignment","src":"39103:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39126:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39108:17:20"},"nodeType":"YulFunctionCall","src":"39108:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39103:1:20"}]},{"body":{"nodeType":"YulBlock","src":"39266:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"39268:16:20"},"nodeType":"YulFunctionCall","src":"39268:18:20"},"nodeType":"YulExpressionStatement","src":"39268:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39187:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39194:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"39262:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39190:3:20"},"nodeType":"YulFunctionCall","src":"39190:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39184:2:20"},"nodeType":"YulFunctionCall","src":"39184:81:20"},"nodeType":"YulIf","src":"39181:2:20"},{"nodeType":"YulAssignment","src":"39298:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39309:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"39312:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39305:3:20"},"nodeType":"YulFunctionCall","src":"39305:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"39298:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39046:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39049:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"39055:3:20","type":""}],"src":"39015:305:20"},{"body":{"nodeType":"YulBlock","src":"39368:195:20","statements":[{"nodeType":"YulAssignment","src":"39378:23:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39399:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"39383:15:20"},"nodeType":"YulFunctionCall","src":"39383:18:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39378:1:20"}]},{"nodeType":"YulAssignment","src":"39410:23:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39431:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"39415:15:20"},"nodeType":"YulFunctionCall","src":"39415:18:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39410:1:20"}]},{"body":{"nodeType":"YulBlock","src":"39509:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"39511:16:20"},"nodeType":"YulFunctionCall","src":"39511:18:20"},"nodeType":"YulExpressionStatement","src":"39511:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39492:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39499:4:20","type":"","value":"0xff"},{"name":"y","nodeType":"YulIdentifier","src":"39505:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39495:3:20"},"nodeType":"YulFunctionCall","src":"39495:12:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39489:2:20"},"nodeType":"YulFunctionCall","src":"39489:19:20"},"nodeType":"YulIf","src":"39486:2:20"},{"nodeType":"YulAssignment","src":"39541:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39552:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"39555:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39548:3:20"},"nodeType":"YulFunctionCall","src":"39548:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"39541:3:20"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39355:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39358:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"39364:3:20","type":""}],"src":"39326:237:20"},{"body":{"nodeType":"YulBlock","src":"39611:143:20","statements":[{"nodeType":"YulAssignment","src":"39621:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39644:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39626:17:20"},"nodeType":"YulFunctionCall","src":"39626:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39621:1:20"}]},{"nodeType":"YulAssignment","src":"39655:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39678:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39660:17:20"},"nodeType":"YulFunctionCall","src":"39660:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39655:1:20"}]},{"body":{"nodeType":"YulBlock","src":"39702:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"39704:16:20"},"nodeType":"YulFunctionCall","src":"39704:18:20"},"nodeType":"YulExpressionStatement","src":"39704:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39699:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39692:6:20"},"nodeType":"YulFunctionCall","src":"39692:9:20"},"nodeType":"YulIf","src":"39689:2:20"},{"nodeType":"YulAssignment","src":"39734:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39743:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"39746:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39739:3:20"},"nodeType":"YulFunctionCall","src":"39739:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"39734:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39600:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39603:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"39609:1:20","type":""}],"src":"39569:185:20"},{"body":{"nodeType":"YulBlock","src":"39808:300:20","statements":[{"nodeType":"YulAssignment","src":"39818:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39841:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39823:17:20"},"nodeType":"YulFunctionCall","src":"39823:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39818:1:20"}]},{"nodeType":"YulAssignment","src":"39852:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39875:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39857:17:20"},"nodeType":"YulFunctionCall","src":"39857:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39852:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40050:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40052:16:20"},"nodeType":"YulFunctionCall","src":"40052:18:20"},"nodeType":"YulExpressionStatement","src":"40052:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39962:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39955:6:20"},"nodeType":"YulFunctionCall","src":"39955:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39948:6:20"},"nodeType":"YulFunctionCall","src":"39948:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39970:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39977:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"40045:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39973:3:20"},"nodeType":"YulFunctionCall","src":"39973:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39967:2:20"},"nodeType":"YulFunctionCall","src":"39967:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39944:3:20"},"nodeType":"YulFunctionCall","src":"39944:105:20"},"nodeType":"YulIf","src":"39941:2:20"},{"nodeType":"YulAssignment","src":"40082:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40097:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40100:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40093:3:20"},"nodeType":"YulFunctionCall","src":"40093:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"40082:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39791:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"39794:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"39800:7:20","type":""}],"src":"39760:348:20"},{"body":{"nodeType":"YulBlock","src":"40160:234:20","statements":[{"nodeType":"YulAssignment","src":"40170:23:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40191:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"40175:15:20"},"nodeType":"YulFunctionCall","src":"40175:18:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40170:1:20"}]},{"nodeType":"YulAssignment","src":"40202:23:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40223:1:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"40207:15:20"},"nodeType":"YulFunctionCall","src":"40207:18:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40202:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40336:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40338:16:20"},"nodeType":"YulFunctionCall","src":"40338:18:20"},"nodeType":"YulExpressionStatement","src":"40338:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40310:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40303:6:20"},"nodeType":"YulFunctionCall","src":"40303:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40296:6:20"},"nodeType":"YulFunctionCall","src":"40296:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40318:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40325:4:20","type":"","value":"0xff"},{"name":"x","nodeType":"YulIdentifier","src":"40331:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40321:3:20"},"nodeType":"YulFunctionCall","src":"40321:12:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40315:2:20"},"nodeType":"YulFunctionCall","src":"40315:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40292:3:20"},"nodeType":"YulFunctionCall","src":"40292:43:20"},"nodeType":"YulIf","src":"40289:2:20"},{"nodeType":"YulAssignment","src":"40368:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40383:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40386:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40379:3:20"},"nodeType":"YulFunctionCall","src":"40379:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"40368:7:20"}]}]},"name":"checked_mul_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40143:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40146:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"40152:7:20","type":""}],"src":"40114:280:20"},{"body":{"nodeType":"YulBlock","src":"40445:146:20","statements":[{"nodeType":"YulAssignment","src":"40455:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40478:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40460:17:20"},"nodeType":"YulFunctionCall","src":"40460:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40455:1:20"}]},{"nodeType":"YulAssignment","src":"40489:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40512:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40494:17:20"},"nodeType":"YulFunctionCall","src":"40494:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40489:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40536:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40538:16:20"},"nodeType":"YulFunctionCall","src":"40538:18:20"},"nodeType":"YulExpressionStatement","src":"40538:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40530:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40533:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40527:2:20"},"nodeType":"YulFunctionCall","src":"40527:8:20"},"nodeType":"YulIf","src":"40524:2:20"},{"nodeType":"YulAssignment","src":"40568:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40580:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40583:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40576:3:20"},"nodeType":"YulFunctionCall","src":"40576:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"40568:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40431:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40434:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"40440:4:20","type":""}],"src":"40400:191:20"},{"body":{"nodeType":"YulBlock","src":"40642:51:20","statements":[{"nodeType":"YulAssignment","src":"40652:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40681:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"40663:17:20"},"nodeType":"YulFunctionCall","src":"40663:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40652:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40624:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40634:7:20","type":""}],"src":"40597:96:20"},{"body":{"nodeType":"YulBlock","src":"40741:48:20","statements":[{"nodeType":"YulAssignment","src":"40751:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40776:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40769:6:20"},"nodeType":"YulFunctionCall","src":"40769:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40762:6:20"},"nodeType":"YulFunctionCall","src":"40762:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40751:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40723:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40733:7:20","type":""}],"src":"40699:90:20"},{"body":{"nodeType":"YulBlock","src":"40840:32:20","statements":[{"nodeType":"YulAssignment","src":"40850:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"40861:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40850:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40822:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40832:7:20","type":""}],"src":"40795:77:20"},{"body":{"nodeType":"YulBlock","src":"40922:105:20","statements":[{"nodeType":"YulAssignment","src":"40932:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40947:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"40954:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40943:3:20"},"nodeType":"YulFunctionCall","src":"40943:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40932:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40904:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40914:7:20","type":""}],"src":"40878:149:20"},{"body":{"nodeType":"YulBlock","src":"41077:45:20","statements":[{"nodeType":"YulAssignment","src":"41087:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41102:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41109:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41098:3:20"},"nodeType":"YulFunctionCall","src":"41098:18:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41087:7:20"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41059:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41069:7:20","type":""}],"src":"41033:89:20"},{"body":{"nodeType":"YulBlock","src":"41173:81:20","statements":[{"nodeType":"YulAssignment","src":"41183:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41198:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41205:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41194:3:20"},"nodeType":"YulFunctionCall","src":"41194:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41183:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41155:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41165:7:20","type":""}],"src":"41128:126:20"},{"body":{"nodeType":"YulBlock","src":"41305:32:20","statements":[{"nodeType":"YulAssignment","src":"41315:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"41326:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41315:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41287:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41297:7:20","type":""}],"src":"41260:77:20"},{"body":{"nodeType":"YulBlock","src":"41387:49:20","statements":[{"nodeType":"YulAssignment","src":"41397:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41412:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41419:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41408:3:20"},"nodeType":"YulFunctionCall","src":"41408:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41397:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41369:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41379:7:20","type":""}],"src":"41343:93:20"},{"body":{"nodeType":"YulBlock","src":"41486:57:20","statements":[{"nodeType":"YulAssignment","src":"41496:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41511:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41518:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41507:3:20"},"nodeType":"YulFunctionCall","src":"41507:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41496:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41468:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41478:7:20","type":""}],"src":"41442:101:20"},{"body":{"nodeType":"YulBlock","src":"41592:43:20","statements":[{"nodeType":"YulAssignment","src":"41602:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41617:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"41624:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41613:3:20"},"nodeType":"YulFunctionCall","src":"41613:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41602:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41574:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41584:7:20","type":""}],"src":"41549:86:20"},{"body":{"nodeType":"YulBlock","src":"41692:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"41715:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"41720:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"41725:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"41702:12:20"},"nodeType":"YulFunctionCall","src":"41702:30:20"},"nodeType":"YulExpressionStatement","src":"41702:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"41773:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"41778:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41769:3:20"},"nodeType":"YulFunctionCall","src":"41769:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"41787:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41762:6:20"},"nodeType":"YulFunctionCall","src":"41762:27:20"},"nodeType":"YulExpressionStatement","src":"41762:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"41674:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"41679:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"41684:6:20","type":""}],"src":"41641:154:20"},{"body":{"nodeType":"YulBlock","src":"41850:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"41860:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"41869:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"41864:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"41929:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"41954:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"41959:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41950:3:20"},"nodeType":"YulFunctionCall","src":"41950:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41973:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"41978:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41969:3:20"},"nodeType":"YulFunctionCall","src":"41969:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41963:5:20"},"nodeType":"YulFunctionCall","src":"41963:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41943:6:20"},"nodeType":"YulFunctionCall","src":"41943:39:20"},"nodeType":"YulExpressionStatement","src":"41943:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"41890:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"41893:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41887:2:20"},"nodeType":"YulFunctionCall","src":"41887:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"41901:19:20","statements":[{"nodeType":"YulAssignment","src":"41903:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"41912:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"41915:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41908:3:20"},"nodeType":"YulFunctionCall","src":"41908:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"41903:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"41883:3:20","statements":[]},"src":"41879:113:20"},{"body":{"nodeType":"YulBlock","src":"42026:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"42076:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"42081:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42072:3:20"},"nodeType":"YulFunctionCall","src":"42072:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"42090:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42065:6:20"},"nodeType":"YulFunctionCall","src":"42065:27:20"},"nodeType":"YulExpressionStatement","src":"42065:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42007:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"42010:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42004:2:20"},"nodeType":"YulFunctionCall","src":"42004:13:20"},"nodeType":"YulIf","src":"42001:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"41832:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"41837:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"41842:6:20","type":""}],"src":"41801:307:20"},{"body":{"nodeType":"YulBlock","src":"42157:128:20","statements":[{"nodeType":"YulAssignment","src":"42167:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42194:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"42176:17:20"},"nodeType":"YulFunctionCall","src":"42176:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42167:5:20"}]},{"body":{"nodeType":"YulBlock","src":"42228:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"42230:16:20"},"nodeType":"YulFunctionCall","src":"42230:18:20"},"nodeType":"YulExpressionStatement","src":"42230:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42215:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"42222:4:20","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"42212:2:20"},"nodeType":"YulFunctionCall","src":"42212:15:20"},"nodeType":"YulIf","src":"42209:2:20"},{"nodeType":"YulAssignment","src":"42259:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42270:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"42277:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42266:3:20"},"nodeType":"YulFunctionCall","src":"42266:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"42259:3:20"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42143:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"42153:3:20","type":""}],"src":"42114:171:20"},{"body":{"nodeType":"YulBlock","src":"42342:269:20","statements":[{"nodeType":"YulAssignment","src":"42352:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42366:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"42372:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"42362:3:20"},"nodeType":"YulFunctionCall","src":"42362:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42352:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"42383:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42413:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"42419:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42409:3:20"},"nodeType":"YulFunctionCall","src":"42409:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"42387:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42460:51:20","statements":[{"nodeType":"YulAssignment","src":"42474:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42488:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42496:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42484:3:20"},"nodeType":"YulFunctionCall","src":"42484:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42474:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42440:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42433:6:20"},"nodeType":"YulFunctionCall","src":"42433:26:20"},"nodeType":"YulIf","src":"42430:2:20"},{"body":{"nodeType":"YulBlock","src":"42563:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"42577:16:20"},"nodeType":"YulFunctionCall","src":"42577:18:20"},"nodeType":"YulExpressionStatement","src":"42577:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42527:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42550:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42558:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42547:2:20"},"nodeType":"YulFunctionCall","src":"42547:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"42524:2:20"},"nodeType":"YulFunctionCall","src":"42524:38:20"},"nodeType":"YulIf","src":"42521:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42326:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42335:6:20","type":""}],"src":"42291:320:20"},{"body":{"nodeType":"YulBlock","src":"42660:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"42670:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42692:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"42722:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"42700:21:20"},"nodeType":"YulFunctionCall","src":"42700:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42688:3:20"},"nodeType":"YulFunctionCall","src":"42688:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"42674:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42839:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"42841:16:20"},"nodeType":"YulFunctionCall","src":"42841:18:20"},"nodeType":"YulExpressionStatement","src":"42841:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"42782:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"42794:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42779:2:20"},"nodeType":"YulFunctionCall","src":"42779:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"42818:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"42830:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42815:2:20"},"nodeType":"YulFunctionCall","src":"42815:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"42776:2:20"},"nodeType":"YulFunctionCall","src":"42776:62:20"},"nodeType":"YulIf","src":"42773:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42877:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"42881:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42870:6:20"},"nodeType":"YulFunctionCall","src":"42870:22:20"},"nodeType":"YulExpressionStatement","src":"42870:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42646:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"42654:4:20","type":""}],"src":"42617:281:20"},{"body":{"nodeType":"YulBlock","src":"42947:190:20","statements":[{"nodeType":"YulAssignment","src":"42957:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42984:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"42966:17:20"},"nodeType":"YulFunctionCall","src":"42966:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42957:5:20"}]},{"body":{"nodeType":"YulBlock","src":"43080:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43082:16:20"},"nodeType":"YulFunctionCall","src":"43082:18:20"},"nodeType":"YulExpressionStatement","src":"43082:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43005:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43012:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43002:2:20"},"nodeType":"YulFunctionCall","src":"43002:77:20"},"nodeType":"YulIf","src":"42999:2:20"},{"nodeType":"YulAssignment","src":"43111:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43122:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43129:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43118:3:20"},"nodeType":"YulFunctionCall","src":"43118:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"43111:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42933:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"42943:3:20","type":""}],"src":"42904:233:20"},{"body":{"nodeType":"YulBlock","src":"43184:126:20","statements":[{"nodeType":"YulAssignment","src":"43194:31:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43219:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"43203:15:20"},"nodeType":"YulFunctionCall","src":"43203:22:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43194:5:20"}]},{"body":{"nodeType":"YulBlock","src":"43253:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43255:16:20"},"nodeType":"YulFunctionCall","src":"43255:18:20"},"nodeType":"YulExpressionStatement","src":"43255:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43240:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43247:4:20","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43237:2:20"},"nodeType":"YulFunctionCall","src":"43237:15:20"},"nodeType":"YulIf","src":"43234:2:20"},{"nodeType":"YulAssignment","src":"43284:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43295:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"43302:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43291:3:20"},"nodeType":"YulFunctionCall","src":"43291:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"43284:3:20"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43170:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"43180:3:20","type":""}],"src":"43143:167:20"},{"body":{"nodeType":"YulBlock","src":"43344:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43361:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43364:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43354:6:20"},"nodeType":"YulFunctionCall","src":"43354:88:20"},"nodeType":"YulExpressionStatement","src":"43354:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43458:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43461:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43451:6:20"},"nodeType":"YulFunctionCall","src":"43451:15:20"},"nodeType":"YulExpressionStatement","src":"43451:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43482:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43485:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43475:6:20"},"nodeType":"YulFunctionCall","src":"43475:15:20"},"nodeType":"YulExpressionStatement","src":"43475:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"43316:180:20"},{"body":{"nodeType":"YulBlock","src":"43530:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43547:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43550:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43540:6:20"},"nodeType":"YulFunctionCall","src":"43540:88:20"},"nodeType":"YulExpressionStatement","src":"43540:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43644:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43647:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43637:6:20"},"nodeType":"YulFunctionCall","src":"43637:15:20"},"nodeType":"YulExpressionStatement","src":"43637:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43668:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43671:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43661:6:20"},"nodeType":"YulFunctionCall","src":"43661:15:20"},"nodeType":"YulExpressionStatement","src":"43661:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"43502:180:20"},{"body":{"nodeType":"YulBlock","src":"43716:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43733:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43736:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43726:6:20"},"nodeType":"YulFunctionCall","src":"43726:88:20"},"nodeType":"YulExpressionStatement","src":"43726:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43830:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43833:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43823:6:20"},"nodeType":"YulFunctionCall","src":"43823:15:20"},"nodeType":"YulExpressionStatement","src":"43823:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43854:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43857:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43847:6:20"},"nodeType":"YulFunctionCall","src":"43847:15:20"},"nodeType":"YulExpressionStatement","src":"43847:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"43688:180:20"},{"body":{"nodeType":"YulBlock","src":"43902:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43919:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43922:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43912:6:20"},"nodeType":"YulFunctionCall","src":"43912:88:20"},"nodeType":"YulExpressionStatement","src":"43912:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44016:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44019:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44009:6:20"},"nodeType":"YulFunctionCall","src":"44009:15:20"},"nodeType":"YulExpressionStatement","src":"44009:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44040:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44043:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44033:6:20"},"nodeType":"YulFunctionCall","src":"44033:15:20"},"nodeType":"YulExpressionStatement","src":"44033:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"43874:180:20"},{"body":{"nodeType":"YulBlock","src":"44108:54:20","statements":[{"nodeType":"YulAssignment","src":"44118:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44136:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"44143:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44132:3:20"},"nodeType":"YulFunctionCall","src":"44132:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44152:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"44148:3:20"},"nodeType":"YulFunctionCall","src":"44148:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44128:3:20"},"nodeType":"YulFunctionCall","src":"44128:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"44118:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44091:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"44101:6:20","type":""}],"src":"44060:102:20"},{"body":{"nodeType":"YulBlock","src":"44274:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44296:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44304:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44292:3:20"},"nodeType":"YulFunctionCall","src":"44292:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"44308:34:20","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44285:6:20"},"nodeType":"YulFunctionCall","src":"44285:58:20"},"nodeType":"YulExpressionStatement","src":"44285:58:20"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44266:6:20","type":""}],"src":"44168:182:20"},{"body":{"nodeType":"YulBlock","src":"44462:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44484:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44492:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44480:3:20"},"nodeType":"YulFunctionCall","src":"44480:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"44496:34:20","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44473:6:20"},"nodeType":"YulFunctionCall","src":"44473:58:20"},"nodeType":"YulExpressionStatement","src":"44473:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44552:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44560:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44548:3:20"},"nodeType":"YulFunctionCall","src":"44548:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"44565:13:20","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44541:6:20"},"nodeType":"YulFunctionCall","src":"44541:38:20"},"nodeType":"YulExpressionStatement","src":"44541:38:20"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44454:6:20","type":""}],"src":"44356:230:20"},{"body":{"nodeType":"YulBlock","src":"44698:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44720:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44728:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44716:3:20"},"nodeType":"YulFunctionCall","src":"44716:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"44732:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44709:6:20"},"nodeType":"YulFunctionCall","src":"44709:58:20"},"nodeType":"YulExpressionStatement","src":"44709:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44788:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44796:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44784:3:20"},"nodeType":"YulFunctionCall","src":"44784:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"44801:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44777:6:20"},"nodeType":"YulFunctionCall","src":"44777:45:20"},"nodeType":"YulExpressionStatement","src":"44777:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44690:6:20","type":""}],"src":"44592:237:20"},{"body":{"nodeType":"YulBlock","src":"44941:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44963:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44971:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44959:3:20"},"nodeType":"YulFunctionCall","src":"44959:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"44975:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44952:6:20"},"nodeType":"YulFunctionCall","src":"44952:58:20"},"nodeType":"YulExpressionStatement","src":"44952:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45031:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45039:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45027:3:20"},"nodeType":"YulFunctionCall","src":"45027:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"45044:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45020:6:20"},"nodeType":"YulFunctionCall","src":"45020:33:20"},"nodeType":"YulExpressionStatement","src":"45020:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44933:6:20","type":""}],"src":"44835:225:20"},{"body":{"nodeType":"YulBlock","src":"45172:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45194:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45202:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45190:3:20"},"nodeType":"YulFunctionCall","src":"45190:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45206:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45183:6:20"},"nodeType":"YulFunctionCall","src":"45183:58:20"},"nodeType":"YulExpressionStatement","src":"45183:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45262:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45270:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45258:3:20"},"nodeType":"YulFunctionCall","src":"45258:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"45275:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45251:6:20"},"nodeType":"YulFunctionCall","src":"45251:32:20"},"nodeType":"YulExpressionStatement","src":"45251:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45164:6:20","type":""}],"src":"45066:224:20"},{"body":{"nodeType":"YulBlock","src":"45402:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45424:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45432:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45420:3:20"},"nodeType":"YulFunctionCall","src":"45420:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45436:30:20","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45413:6:20"},"nodeType":"YulFunctionCall","src":"45413:54:20"},"nodeType":"YulExpressionStatement","src":"45413:54:20"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45394:6:20","type":""}],"src":"45296:178:20"},{"body":{"nodeType":"YulBlock","src":"45586:52:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45608:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45616:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45604:3:20"},"nodeType":"YulFunctionCall","src":"45604:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"45620:10:20","type":"","value":"</tspan>"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45597:6:20"},"nodeType":"YulFunctionCall","src":"45597:34:20"},"nodeType":"YulExpressionStatement","src":"45597:34:20"}]},"name":"store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45578:6:20","type":""}],"src":"45480:158:20"},{"body":{"nodeType":"YulBlock","src":"45750:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45772:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45780:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45768:3:20"},"nodeType":"YulFunctionCall","src":"45768:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"45784:66:20","type":"","value":"0x226e616d65223a224e4654222c20000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45761:6:20"},"nodeType":"YulFunctionCall","src":"45761:90:20"},"nodeType":"YulExpressionStatement","src":"45761:90:20"}]},"name":"store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45742:6:20","type":""}],"src":"45644:214:20"},{"body":{"nodeType":"YulBlock","src":"45970:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45992:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46000:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45988:3:20"},"nodeType":"YulFunctionCall","src":"45988:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46004:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45981:6:20"},"nodeType":"YulFunctionCall","src":"45981:58:20"},"nodeType":"YulExpressionStatement","src":"45981:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46060:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46068:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46056:3:20"},"nodeType":"YulFunctionCall","src":"46056:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"46073:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46049:6:20"},"nodeType":"YulFunctionCall","src":"46049:31:20"},"nodeType":"YulExpressionStatement","src":"46049:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45962:6:20","type":""}],"src":"45864:223:20"},{"body":{"nodeType":"YulBlock","src":"46199:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46221:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46229:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46217:3:20"},"nodeType":"YulFunctionCall","src":"46217:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46233:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46210:6:20"},"nodeType":"YulFunctionCall","src":"46210:51:20"},"nodeType":"YulExpressionStatement","src":"46210:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46191:6:20","type":""}],"src":"46093:175:20"},{"body":{"nodeType":"YulBlock","src":"46380:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46402:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46410:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46398:3:20"},"nodeType":"YulFunctionCall","src":"46398:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"46414:66:20","type":"","value":"0x2261747472696275746573223a22222c20000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46391:6:20"},"nodeType":"YulFunctionCall","src":"46391:90:20"},"nodeType":"YulExpressionStatement","src":"46391:90:20"}]},"name":"store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46372:6:20","type":""}],"src":"46274:214:20"},{"body":{"nodeType":"YulBlock","src":"46600:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46622:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46630:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46618:3:20"},"nodeType":"YulFunctionCall","src":"46618:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"46634:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46611:6:20"},"nodeType":"YulFunctionCall","src":"46611:58:20"},"nodeType":"YulExpressionStatement","src":"46611:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46690:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46698:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46686:3:20"},"nodeType":"YulFunctionCall","src":"46686:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"46703:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46679:6:20"},"nodeType":"YulFunctionCall","src":"46679:36:20"},"nodeType":"YulExpressionStatement","src":"46679:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46592:6:20","type":""}],"src":"46494:228:20"},{"body":{"nodeType":"YulBlock","src":"46834:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46856:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46864:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46852:3:20"},"nodeType":"YulFunctionCall","src":"46852:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"46868:66:20","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46845:6:20"},"nodeType":"YulFunctionCall","src":"46845:90:20"},"nodeType":"YulExpressionStatement","src":"46845:90:20"}]},"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46826:6:20","type":""}],"src":"46728:214:20"},{"body":{"nodeType":"YulBlock","src":"47054:209:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47076:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47084:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47072:3:20"},"nodeType":"YulFunctionCall","src":"47072:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"47088:66:20","type":"","value":"0x226465736372697074696f6e223a2242617463682d72657665616c6564204e46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47065:6:20"},"nodeType":"YulFunctionCall","src":"47065:90:20"},"nodeType":"YulExpressionStatement","src":"47065:90:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47176:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47184:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47172:3:20"},"nodeType":"YulFunctionCall","src":"47172:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"47189:66:20","type":"","value":"0x5421222c20000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47165:6:20"},"nodeType":"YulFunctionCall","src":"47165:91:20"},"nodeType":"YulExpressionStatement","src":"47165:91:20"}]},"name":"store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47046:6:20","type":""}],"src":"46948:315:20"},{"body":{"nodeType":"YulBlock","src":"47375:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47397:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47405:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47393:3:20"},"nodeType":"YulFunctionCall","src":"47393:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"47409:66:20","type":"","value":"0x22696d616765223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47386:6:20"},"nodeType":"YulFunctionCall","src":"47386:90:20"},"nodeType":"YulExpressionStatement","src":"47386:90:20"}]},"name":"store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47367:6:20","type":""}],"src":"47269:214:20"},{"body":{"nodeType":"YulBlock","src":"47595:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47617:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47613:3:20"},"nodeType":"YulFunctionCall","src":"47613:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"47629:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47606:6:20"},"nodeType":"YulFunctionCall","src":"47606:58:20"},"nodeType":"YulExpressionStatement","src":"47606:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47685:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47693:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47681:3:20"},"nodeType":"YulFunctionCall","src":"47681:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"47698:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47674:6:20"},"nodeType":"YulFunctionCall","src":"47674:57:20"},"nodeType":"YulExpressionStatement","src":"47674:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47587:6:20","type":""}],"src":"47489:249:20"},{"body":{"nodeType":"YulBlock","src":"47850:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47872:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47880:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47868:3:20"},"nodeType":"YulFunctionCall","src":"47868:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"47884:34:20","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47861:6:20"},"nodeType":"YulFunctionCall","src":"47861:58:20"},"nodeType":"YulExpressionStatement","src":"47861:58:20"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47842:6:20","type":""}],"src":"47744:182:20"},{"body":{"nodeType":"YulBlock","src":"48038:37:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48056:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48064:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48052:3:20"},"nodeType":"YulFunctionCall","src":"48052:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48068:3:20","type":"","value":"}"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48045:6:20"},"nodeType":"YulFunctionCall","src":"48045:27:20"},"nodeType":"YulExpressionStatement","src":"48045:27:20"}]},"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48030:6:20","type":""}],"src":"47932:143:20"},{"body":{"nodeType":"YulBlock","src":"48183:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48201:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48209:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48197:3:20"},"nodeType":"YulFunctionCall","src":"48197:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48213:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48190:6:20"},"nodeType":"YulFunctionCall","src":"48190:58:20"},"nodeType":"YulExpressionStatement","src":"48190:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48175:6:20","type":""}],"src":"48077:174:20"},{"body":{"nodeType":"YulBlock","src":"48359:41:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48377:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48385:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48373:3:20"},"nodeType":"YulFunctionCall","src":"48373:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48389:3:20","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48366:6:20"},"nodeType":"YulFunctionCall","src":"48366:27:20"},"nodeType":"YulExpressionStatement","src":"48366:27:20"}]},"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48351:6:20","type":""}],"src":"48253:147:20"},{"body":{"nodeType":"YulBlock","src":"48512:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48534:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48542:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48530:3:20"},"nodeType":"YulFunctionCall","src":"48530:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48546:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48523:6:20"},"nodeType":"YulFunctionCall","src":"48523:50:20"},"nodeType":"YulExpressionStatement","src":"48523:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48504:6:20","type":""}],"src":"48406:174:20"},{"body":{"nodeType":"YulBlock","src":"48692:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48714:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48722:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48710:3:20"},"nodeType":"YulFunctionCall","src":"48710:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48726:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48703:6:20"},"nodeType":"YulFunctionCall","src":"48703:58:20"},"nodeType":"YulExpressionStatement","src":"48703:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48782:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48790:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48778:3:20"},"nodeType":"YulFunctionCall","src":"48778:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"48795:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48771:6:20"},"nodeType":"YulFunctionCall","src":"48771:28:20"},"nodeType":"YulExpressionStatement","src":"48771:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48684:6:20","type":""}],"src":"48586:220:20"},{"body":{"nodeType":"YulBlock","src":"48918:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48940:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48948:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48936:3:20"},"nodeType":"YulFunctionCall","src":"48936:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"48952:31:20","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48929:6:20"},"nodeType":"YulFunctionCall","src":"48929:55:20"},"nodeType":"YulExpressionStatement","src":"48929:55:20"}]},"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48910:6:20","type":""}],"src":"48812:179:20"},{"body":{"nodeType":"YulBlock","src":"49103:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49095:6:20","type":""}],"src":"48997:114:20"},{"body":{"nodeType":"YulBlock","src":"49223:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49245:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49253:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49241:3:20"},"nodeType":"YulFunctionCall","src":"49241:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49257:34:20","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49234:6:20"},"nodeType":"YulFunctionCall","src":"49234:58:20"},"nodeType":"YulExpressionStatement","src":"49234:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49313:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49321:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49309:3:20"},"nodeType":"YulFunctionCall","src":"49309:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"49326:14:20","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49302:6:20"},"nodeType":"YulFunctionCall","src":"49302:39:20"},"nodeType":"YulExpressionStatement","src":"49302:39:20"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49215:6:20","type":""}],"src":"49117:231:20"},{"body":{"nodeType":"YulBlock","src":"49460:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49482:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49490:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49478:3:20"},"nodeType":"YulFunctionCall","src":"49478:14:20"},{"kind":"string","nodeType":"YulLiteral","src":"49494:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49471:6:20"},"nodeType":"YulFunctionCall","src":"49471:58:20"},"nodeType":"YulExpressionStatement","src":"49471:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49550:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49558:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49546:3:20"},"nodeType":"YulFunctionCall","src":"49546:15:20"},{"kind":"string","nodeType":"YulLiteral","src":"49563:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49539:6:20"},"nodeType":"YulFunctionCall","src":"49539:41:20"},"nodeType":"YulExpressionStatement","src":"49539:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49452:6:20","type":""}],"src":"49354:233:20"},{"body":{"nodeType":"YulBlock","src":"49699:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49721:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"49729:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49717:3:20"},"nodeType":"YulFunctionCall","src":"49717:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"49733:66:20","type":"","value":"0x3c747370616e20783d223136222064793d223536223e00000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49710:6:20"},"nodeType":"YulFunctionCall","src":"49710:90:20"},"nodeType":"YulExpressionStatement","src":"49710:90:20"}]},"name":"store_literal_in_memory_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49691:6:20","type":""}],"src":"49593:214:20"},{"body":{"nodeType":"YulBlock","src":"49856:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"49913:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49922:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49925:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49915:6:20"},"nodeType":"YulFunctionCall","src":"49915:12:20"},"nodeType":"YulExpressionStatement","src":"49915:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49879:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49904:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"49886:17:20"},"nodeType":"YulFunctionCall","src":"49886:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"49876:2:20"},"nodeType":"YulFunctionCall","src":"49876:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49869:6:20"},"nodeType":"YulFunctionCall","src":"49869:43:20"},"nodeType":"YulIf","src":"49866:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49849:5:20","type":""}],"src":"49813:122:20"},{"body":{"nodeType":"YulBlock","src":"49981:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"50035:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50044:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50047:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50037:6:20"},"nodeType":"YulFunctionCall","src":"50037:12:20"},"nodeType":"YulExpressionStatement","src":"50037:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50004:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50026:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"50011:14:20"},"nodeType":"YulFunctionCall","src":"50011:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50001:2:20"},"nodeType":"YulFunctionCall","src":"50001:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49994:6:20"},"nodeType":"YulFunctionCall","src":"49994:40:20"},"nodeType":"YulIf","src":"49991:2:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49974:5:20","type":""}],"src":"49941:116:20"},{"body":{"nodeType":"YulBlock","src":"50105:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"50161:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50170:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50173:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50163:6:20"},"nodeType":"YulFunctionCall","src":"50163:12:20"},"nodeType":"YulExpressionStatement","src":"50163:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50128:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50152:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"50135:16:20"},"nodeType":"YulFunctionCall","src":"50135:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50125:2:20"},"nodeType":"YulFunctionCall","src":"50125:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50118:6:20"},"nodeType":"YulFunctionCall","src":"50118:42:20"},"nodeType":"YulIf","src":"50115:2:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50098:5:20","type":""}],"src":"50063:120:20"},{"body":{"nodeType":"YulBlock","src":"50232:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"50289:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50298:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50301:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50291:6:20"},"nodeType":"YulFunctionCall","src":"50291:12:20"},"nodeType":"YulExpressionStatement","src":"50291:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50255:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50280:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"50262:17:20"},"nodeType":"YulFunctionCall","src":"50262:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50252:2:20"},"nodeType":"YulFunctionCall","src":"50252:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"50245:6:20"},"nodeType":"YulFunctionCall","src":"50245:43:20"},"nodeType":"YulIf","src":"50242:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50225:5:20","type":""}],"src":"50189:122:20"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23(pos)\n        end := add(pos, 8)\n    }\n\n    function abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 14)\n        store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45(pos)\n        end := add(pos, 14)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 37)\n        store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74(pos)\n        end := add(pos, 37)\n    }\n\n    function abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 29)\n        store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(pos)\n        end := add(pos, 29)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 22)\n        store_literal_in_memory_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2(pos)\n        end := add(pos, 22)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value5, value4, value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value5,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_t_string_memory_ptr_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint8(x, y) -> product {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_2ca418ab53615b748743f3549e8d7e318fcbee7eab62365150b7042b374aac23(memPtr) {\n\n        mstore(add(memPtr, 0), \"</tspan>\")\n\n    }\n\n    function store_literal_in_memory_43953f940d9b0a846cf4347dba9df2ac8771970f93d6fd58b1c7bdc77164bc45(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226e616d65223a224e4654222c20000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_66c328ffc943cff4ce46a35bbcc32f4f6c258be2b159de67b3970b11ae422c5a(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a22222c20000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_7e17eaf2e00efa492390c5d28d83abcb705332d48f2f4fd6eeb832742eb9ac74(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226465736372697074696f6e223a2242617463682d72657665616c6564204e46)\n\n        mstore(add(memPtr, 32), 0x5421222c20000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551(memPtr) {\n\n        mstore(add(memPtr, 0), 0x22696d616765223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(memPtr) {\n\n    mstore(add(memPtr, 0), \"}\")\n\n}\n\nfunction store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n    mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n}\n\nfunction store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(memPtr) {\n\n    mstore(add(memPtr, 0), \"{\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"data:application/json;base64,\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function store_literal_in_memory_f73b43a17eb5aa016a96d669c2fac98a1683a2a5211336d3e64f84bc3d3ff7c2(memPtr) {\n\n        mstore(add(memPtr, 0), 0x3c747370616e20783d223136222064793d223536223e00000000000000000000)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"49":[{"length":32,"start":2834},{"length":32,"start":2918}],"2430":[{"length":32,"start":4887},{"length":32,"start":5603}],"2432":[{"length":32,"start":4989},{"length":32,"start":5298}],"2457":[{"length":32,"start":4452}],"2459":[{"length":32,"start":4545}],"2461":[{"length":32,"start":4512}],"2463":[{"length":32,"start":4580}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B4FAB5A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xBBD78E93 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xF4DAABA1 EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0xF8190966 EQ PUSH2 0x84D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xBBD78E93 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xBDB4B848 EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0xCF3B94CD EQ PUSH2 0x766 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x96634A40 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x96634A40 EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xAAAE4E23 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6AA JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x7B4FAB5A EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E6 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x5C65D81F GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x5C65D81F EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x562 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x444 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x247CD8AD EQ PUSH2 0x38A JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6F13056 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x3DB8 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x3B8D JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3B8D JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x450D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x577 PUSH2 0xF4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58E PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x4462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x626 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH2 0x141A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E8 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x713 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x750 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x4590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77B PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A6 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x820 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x837 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x883 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x897 DUP3 PUSH2 0x17BF JUMP JUMPDEST DUP1 PUSH2 0x8FF JUMPI POP PUSH32 0xE7FB86C600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x922 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x970 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B0 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x4752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA86 PUSH2 0x1884 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAB5 JUMPI POP PUSH2 0xAB4 DUP2 PUSH2 0xAAF PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST JUMPDEST PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x46D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAFE DUP4 DUP4 PUSH2 0x188C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC2 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x447D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBCC DUP3 DUP3 PUSH2 0x1945 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBE1 PUSH2 0xBDB PUSH2 0x1884 JUMP JUMPDEST DUP3 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP1 PUSH2 0x4792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2B DUP4 DUP4 DUP4 PUSH2 0x1A28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 DUP4 PUSH2 0xE95 JUMP JUMPDEST DUP3 LT PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x45D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1442 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD07 PUSH2 0x10DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD16 PUSH2 0xB03 JUMP JUMPDEST DUP3 LT PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP1 PUSH2 0x4772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD91 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDAB PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE8B PUSH2 0x1556 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x46B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xF5F PUSH1 0x0 PUSH2 0x1D0D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF9C PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH2 0xF6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFC9 SWAP1 PUSH2 0x4420 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x100B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA5B23000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1058 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1084 SWAP1 PUSH2 0x4BAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0CF055400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112C PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E628EBC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1225 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x453D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x3D8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D83BDD6DB199FF596CEC09EA8E4F4E50DA2DCB4020BC2A1CF072C507056B1EA DUP2 PUSH1 0x40 MLOAD PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D8 PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 DUP3 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST GT ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH32 0x0 PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x356680B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x1415 JUMPI PUSH2 0x1402 CALLER DUP3 DUP5 PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x140D SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1425 PUSH2 0x1884 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1DEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1453 PUSH2 0x144D PUSH2 0x1884 JUMP JUMPDEST DUP4 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x4792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14E1 DUP3 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9430A17E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1523 DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1533 DUP4 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x2770 JUMP JUMPDEST SWAP1 POP PUSH2 0x154B DUP2 PUSH2 0x2803 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD PUSH2 0x1564 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x156E SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD GT DUP1 ISZERO PUSH2 0x1598 JUMPI POP PUSH1 0xC SLOAD DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x15A2 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD GT DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x15CD JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 DUP1 PUSH2 0x15D6 JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16A3 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP1 PUSH2 0x4612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x1D0D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1769 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1832 JUMPI POP PUSH2 0x1831 DUP3 PUSH2 0x2853 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1842 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x4732 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18FF DUP4 PUSH2 0xDB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x198F DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1982 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2935 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x199F DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19E1 JUMPI POP PUSH2 0x19E0 DUP2 DUP6 PUSH2 0x1607 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A1F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A07 DUP5 PUSH2 0x9A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A48 DUP3 PUSH2 0xDB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A95 SWAP1 PUSH2 0x4632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B05 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B19 DUP4 DUP4 DUP4 PUSH2 0x2A33 JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x0 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B74 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BCB SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C8A DUP4 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C97 PUSH2 0x1884 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB5 PUSH2 0xF6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D02 SWAP1 PUSH2 0x4712 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1DEB DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2B4C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E55 SWAP1 PUSH2 0x4692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F4F SWAP2 SWAP1 PUSH2 0x44F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1F67 DUP5 DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x1F73 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1FB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA9 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2172 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2071 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x20DC JUMPI POP PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x215F JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x213F SWAP3 SWAP2 SWAP1 PUSH2 0x47CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x216A SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x202A JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2182 PUSH2 0x3914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x62 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x537C PUSH1 0x62 SWAP2 CODECOPY DUP2 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x21D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP3 ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54BB PUSH1 0x8D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2236 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x2246 PUSH2 0x393B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2253 DUP7 PUSH1 0x20 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2315 JUMPI PUSH1 0x0 PUSH2 0x229B DUP4 PUSH1 0xB DUP5 PUSH2 0x2277 SWAP2 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x1 DUP7 PUSH2 0x2289 SWAP2 SWAP1 PUSH2 0x4953 JUMP JUMPDEST PUSH2 0x2293 SWAP2 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x3038 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22AE SWAP2 SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP4 PUSH1 0xFF AND PUSH1 0x6 DUP2 LT PUSH2 0x22F9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x230D SWAP1 PUSH2 0x4C59 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2258 JUMP JUMPDEST POP DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x2350 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x238F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x23CE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x240D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x244C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x248B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24A5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x24EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP POP POP PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x541E PUSH1 0x9D SWAP2 CODECOPY DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x2550 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x25C8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3C2F746578743E3C2F7376673E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2641 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x0 PUSH1 0x4 DUP2 LT PUSH2 0x2683 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x4 DUP2 LT PUSH2 0x26C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x2 PUSH1 0x4 DUP2 LT PUSH2 0x2701 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2740 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2758 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x27D6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27C2 SWAP2 SWAP1 PUSH2 0x42C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x31A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27EB SWAP3 SWAP2 SWAP1 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x282D DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x439A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x43FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x291E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x292E JUMPI POP PUSH2 0x292D DUP3 PUSH2 0x3330 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293F PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x2952 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2963 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA39D9410ABE7578BFBF71501989F175C50A6950B6595718DD8092474541C889B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2A25 SWAP3 SWAP2 SWAP1 PUSH2 0x47CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A3E DUP4 DUP4 DUP4 PUSH2 0x339A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A81 JUMPI PUSH2 0x2A7C DUP2 PUSH2 0x339F JUMP JUMPDEST PUSH2 0x2AC0 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2ABF JUMPI PUSH2 0x2ABE DUP4 DUP3 PUSH2 0x33E8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B03 JUMPI PUSH2 0x2AFE DUP2 PUSH2 0x3555 JUMP JUMPDEST PUSH2 0x2B42 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B41 JUMPI PUSH2 0x2B40 DUP3 DUP3 PUSH2 0x3698 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2B56 DUP4 DUP4 PUSH2 0x3717 JUMP JUMPDEST PUSH2 0x2B63 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x2BA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B99 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38F1 JUMP JUMPDEST ISZERO PUSH2 0x2D31 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2BF1 PUSH2 0x1884 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C13 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2C5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C5B SWAP2 SWAP1 PUSH2 0x3CF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2CE1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2CD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD0 SWAP1 PUSH2 0x45F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2D51 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2D5B SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DCC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E2A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2EB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2EF4 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2EFE SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FEA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2F66 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FA3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x2FE3 SWAP1 PUSH2 0x4B83 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F01 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x302E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3025 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP5 DUP5 PUSH2 0x304D SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x308C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3199 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3108 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0x3120 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3157 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x3191 SWAP1 PUSH2 0x4C10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30C7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x31C9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x332B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53DE PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x31F8 SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST PUSH2 0x3202 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x4 PUSH2 0x320E SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x324D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x327F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x32EB JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x3290 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x3307 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x331A JUMPI PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x33F5 DUP5 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x33FF SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x34E4 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x3569 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x35BF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3607 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x367C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A3 DUP4 PUSH2 0xE95 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377E SWAP1 PUSH2 0x46F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3790 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST ISZERO PUSH2 0x37D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C7 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37DC PUSH1 0x0 DUP4 DUP4 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x382C SWAP2 SWAP1 PUSH2 0x48FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x38ED PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3923 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x394A JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3975 PUSH2 0x3970 DUP5 PUSH2 0x4852 JUMP JUMPDEST PUSH2 0x482D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x39C4 JUMPI DUP2 PUSH2 0x39AA DUP9 DUP3 PUSH2 0x3AFE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3997 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E1 PUSH2 0x39DC DUP5 PUSH2 0x487E JUMP JUMPDEST PUSH2 0x482D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x39F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A04 DUP5 DUP3 DUP6 PUSH2 0x4B41 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A1B DUP2 PUSH2 0x531F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A42 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A5A DUP2 PUSH2 0x5336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A6F DUP2 PUSH2 0x534D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A84 DUP2 PUSH2 0x534D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3ACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AF5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B0D DUP2 PUSH2 0x5364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B22 DUP2 PUSH2 0x5364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B48 DUP5 DUP3 DUP6 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B72 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B83 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BB0 DUP7 DUP3 DUP8 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BC1 DUP7 DUP3 DUP8 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3BD2 DUP7 DUP3 DUP8 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C00 DUP8 DUP3 DUP9 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3C11 DUP8 DUP3 DUP9 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3C22 DUP8 DUP3 DUP9 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C4B DUP8 DUP3 DUP9 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C78 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C89 DUP6 DUP3 DUP7 ADD PUSH2 0x3A4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CB4 DUP6 DUP3 DUP7 ADD PUSH2 0x3A0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3CC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CEF DUP5 DUP3 DUP6 ADD PUSH2 0x3A60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D18 DUP5 DUP3 DUP6 ADD PUSH2 0x3A75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D5A DUP6 DUP3 DUP7 ADD PUSH2 0x3A8A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D86 DUP5 DUP3 DUP6 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DAF DUP5 DUP3 DUP6 ADD PUSH2 0x3B13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD9 DUP6 DUP3 DUP7 ADD PUSH2 0x3AFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E02 DUP6 DUP3 DUP7 ADD PUSH2 0x3A21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E15 DUP2 PUSH2 0x4A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E24 DUP2 PUSH2 0x4A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E33 DUP2 PUSH2 0x4AA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E44 DUP3 PUSH2 0x48AF JUMP JUMPDEST PUSH2 0x3E4E DUP2 DUP6 PUSH2 0x48C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST PUSH2 0x3E67 DUP2 PUSH2 0x4D3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7D DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH2 0x3E87 DUP2 DUP6 PUSH2 0x48E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST PUSH2 0x3EA0 DUP2 PUSH2 0x4D3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB6 DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH2 0x3EC0 DUP2 DUP6 PUSH2 0x48F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3ED0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4B50 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE9 PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF4 DUP3 PUSH2 0x4D50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F0C PUSH1 0x2B DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F17 DUP3 PUSH2 0x4D79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2F PUSH1 0x32 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3A DUP3 PUSH2 0x4DC8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F52 PUSH1 0x26 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5D DUP3 PUSH2 0x4E17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F75 PUSH1 0x25 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F80 DUP3 PUSH2 0x4E66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F98 PUSH1 0x1C DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA3 DUP3 PUSH2 0x4EB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH1 0x8 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FC6 DUP3 PUSH2 0x4EDE JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FDE PUSH1 0xE DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FE9 DUP3 PUSH2 0x4F07 JUMP JUMPDEST PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 PUSH1 0x24 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x400C DUP3 PUSH2 0x4F30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4024 PUSH1 0x19 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x402F DUP3 PUSH2 0x4F7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4047 PUSH1 0x11 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4052 DUP3 PUSH2 0x4FA8 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406A PUSH1 0x29 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4075 DUP3 PUSH2 0x4FD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408D PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4098 DUP3 PUSH2 0x5020 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B0 PUSH1 0x25 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x40BB DUP3 PUSH2 0x5049 JUMP JUMPDEST PUSH1 0x25 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 PUSH1 0x9 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x40DE DUP3 PUSH2 0x5098 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F6 PUSH1 0x3E DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4101 DUP3 PUSH2 0x50C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4119 PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4124 DUP3 PUSH2 0x5110 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413C PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4147 DUP3 PUSH2 0x5139 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415F PUSH1 0x20 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x416A DUP3 PUSH2 0x5162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4182 PUSH1 0x1 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x418D DUP3 PUSH2 0x518B JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A5 PUSH1 0x18 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B0 DUP3 PUSH2 0x51B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C8 PUSH1 0x21 DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x41D3 DUP3 PUSH2 0x51DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EB PUSH1 0x1D DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x41F6 DUP3 PUSH2 0x522C JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420E PUSH1 0x0 DUP4 PUSH2 0x48D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4219 DUP3 PUSH2 0x5255 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4231 PUSH1 0x2C DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x423C DUP3 PUSH2 0x5258 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4254 PUSH1 0x2E DUP4 PUSH2 0x48E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x425F DUP3 PUSH2 0x52A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4277 PUSH1 0x16 DUP4 PUSH2 0x48F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4282 DUP3 PUSH2 0x52F6 JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 DUP2 PUSH2 0x4AD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42A5 DUP2 PUSH2 0x4B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42B4 DUP2 PUSH2 0x4B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x42C3 DUP2 PUSH2 0x4B20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D5 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42EC DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x42F8 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4310 DUP3 DUP8 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x431C DUP3 DUP7 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4328 DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4334 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434E DUP3 DUP10 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x435A DUP3 DUP9 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4366 DUP3 DUP8 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4372 DUP3 DUP7 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x437E DUP3 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x438A DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A5 DUP3 PUSH2 0x4175 JUMP JUMPDEST SWAP2 POP PUSH2 0x43B0 DUP3 PUSH2 0x3FD1 JUMP JUMPDEST SWAP2 POP PUSH2 0x43BB DUP3 PUSH2 0x40A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x43C6 DUP3 PUSH2 0x403A JUMP JUMPDEST SWAP2 POP PUSH2 0x43D1 DUP3 PUSH2 0x40C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x43DD DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x43E8 DUP3 PUSH2 0x4080 JUMP JUMPDEST SWAP2 POP PUSH2 0x43F3 DUP3 PUSH2 0x412F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4409 DUP3 PUSH2 0x41DE JUMP JUMPDEST SWAP2 POP PUSH2 0x4415 DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442B DUP3 PUSH2 0x4201 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4440 DUP3 PUSH2 0x426A JUMP JUMPDEST SWAP2 POP PUSH2 0x444C DUP3 DUP5 PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH2 0x4457 DUP3 PUSH2 0x3FAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4477 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4492 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x449F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x44BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x44C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E0C JUMP JUMPDEST PUSH2 0x44D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x44E7 DUP2 DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4522 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E1B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4534 DUP2 DUP5 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4552 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3E2A JUMP JUMPDEST PUSH2 0x455F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x456C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x428D JUMP JUMPDEST PUSH2 0x4579 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x42AB JUMP JUMPDEST PUSH2 0x4586 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x42AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45AA DUP2 DUP5 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45CB DUP2 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45EB DUP2 PUSH2 0x3EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x460B DUP2 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x462B DUP2 PUSH2 0x3F45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x464B DUP2 PUSH2 0x3F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x3F8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x468B DUP2 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46AB DUP2 PUSH2 0x4017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46CB DUP2 PUSH2 0x405D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46EB DUP2 PUSH2 0x40E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x470B DUP2 PUSH2 0x410C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x472B DUP2 PUSH2 0x4152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x474B DUP2 PUSH2 0x4198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x476B DUP2 PUSH2 0x41BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x478B DUP2 PUSH2 0x4224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47AB DUP2 PUSH2 0x4247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x47E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x47EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x480B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x4818 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x4825 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x429C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4837 PUSH2 0x4848 JUMP JUMPDEST SWAP1 POP PUSH2 0x4843 DUP3 DUP3 PUSH2 0x4BDF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x486D JUMPI PUSH2 0x486C PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4899 JUMPI PUSH2 0x4898 PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST PUSH2 0x48A2 DUP3 PUSH2 0x4D3F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4908 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x4913 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4948 JUMPI PUSH2 0x4947 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495E DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x4969 DUP4 PUSH2 0x4B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x497F JUMPI PUSH2 0x497E PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4995 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x49A0 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49B0 JUMPI PUSH2 0x49AF PUSH2 0x4CB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C6 DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x49D1 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A0A JUMPI PUSH2 0x4A09 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A20 DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2B DUP4 PUSH2 0x4B34 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4A45 JUMPI PUSH2 0x4A44 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5B DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A66 DUP4 PUSH2 0x4B06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4A79 JUMPI PUSH2 0x4A78 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8F DUP3 PUSH2 0x4AE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B53 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4B7D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8E DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x4BA2 JUMPI PUSH2 0x4BA1 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4BC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4BD9 JUMPI PUSH2 0x4BD8 PUSH2 0x4CE1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BE8 DUP3 PUSH2 0x4D3F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4C07 JUMPI PUSH2 0x4C06 PUSH2 0x4D10 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1B DUP3 PUSH2 0x4B06 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4C4E JUMPI PUSH2 0x4C4D PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C64 DUP3 PUSH2 0x4B34 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x4C78 JUMPI PUSH2 0x4C77 PUSH2 0x4C83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C2F747370616E3E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226E616D65223A224E4654222C20000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A22222C20000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2242617463682D72657665616C6564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5421222C20000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x22696D616765223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3C747370616E20783D223136222064793D223536223E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5328 DUP2 PUSH2 0x4A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x5333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x533F DUP2 PUSH2 0x4A96 JUMP JUMPDEST DUP2 EQ PUSH2 0x534A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5356 DUP2 PUSH2 0x4AAC JUMP JUMPDEST DUP2 EQ PUSH2 0x5361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x536D DUP2 PUSH2 0x4B06 JUMP JUMPDEST DUP2 EQ PUSH2 0x5378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID EXTCODECOPY PUSH20 0x766720786D6C6E733D22687474703A2F2F777777 0x2E PUSH24 0x332E6F72672F323030302F73766722207072657365727665 COINBASE PUSH20 0x70656374526174696F3D22784D696E594D696E20 PUSH14 0x656574222076696577426F783D22 ADDRESS KECCAK256 ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS KECCAK256 CALLER CALLDATALOAD ADDRESS 0x22 RETURNDATACOPY COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE 0x48 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x2E PUSH3 0x617365 KECCAK256 PUSH28 0x2066696C6C3A2077686974653B20666F6E742D66616D696C793A2073 PUSH6 0x7269663B2066 PUSH16 0x6E742D73697A653A2033353070783B20 PUSH30 0x3C2F7374796C653E3C726563742077696474683D22313030252220686569 PUSH8 0x68743D2231303025 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420783D2239302220793D223239352220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH3 0x617365 0x22 RETURNDATACOPY EXTCODECOPY PUSH20 0x74796C653E2E62617365207B2066696C6C3A2077 PUSH9 0x6974653B20666F6E74 0x2D PUSH7 0x616D696C793A20 PUSH20 0x657269663B20666F6E742D73697A653A20353970 PUSH25 0x3B207D3C2F7374796C653E3C726563742077696474683D2231 ADDRESS ADDRESS 0x25 0x22 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH7 0x696C6C3D22626C PUSH2 0x636B 0x22 KECCAK256 0x2F RETURNDATACOPY EXTCODECOPY PUSH21 0x65787420636C6173733D2262617365223EA2646970 PUSH7 0x735822122007B9 0xAA PUSH19 0x6C47C574FCCA79070496365EAD9237214C8C79 SWAP7 GT SWAP8 SELFBALANCE 0x48 0xD7 SWAP6 0xE0 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"527:11165:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11436:254;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4364:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:111:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4251:107:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1291:253:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10983:97:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:230:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11271:159:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10770:207:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1929:204:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:5;;;;;;;;;;;;;:::i;:::-;;4033:103:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3215:220:19;;;;;;;;;;;;;:::i;:::-;;2632:102:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9398:585:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2719:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4169:153:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11102:163:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:105:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4758:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3457:459;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8754:638;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4856:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:103:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4466:286;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;11436:254;11545:4;11584:36;11608:11;11584:23;:36::i;:::-;:99;;;;11651:32;11636:47;;;:11;:47;;;;11584:99;11565:118;;11436:254;;;:::o;4364:96::-;4409:7;4435:11;:18;;;;4428:25;;4364:96;:::o;2470:98:6:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3467:407;;;:::o;1615:111:9:-;1676:7;1702:10;:17;;;;1695:24;;1615:111;:::o;6618:256:2:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:327:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;4251:107:19:-;4309:7;4335:16;;4328:23;;4251:107;:::o;1291:253:9:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:12;:19;1524:5;1511:19;;;;;;;;;;;;;;;:26;1531:5;1511:26;;;;;;;;;;;;1504:33;;1291:253;;;;:::o;5005:179:6:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;10983:97:19:-;11050:23;:21;:23::i;:::-;;10983:97;;:::o;1798:230:9:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:10;2015:5;2004:17;;;;;;;;;;;;;;;;;;;;;;;;1997:24;;1798:230;;;:::o;11271:159:19:-;1094:13:5;:11;:13::i;:::-;11408:15:19::1;11389:16;:34;;;;11271:159:::0;:::o;2190:218:6:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;10770:207:19:-;10871:17;10890:12;10934:18;;;;;;;;;;;10933:19;:37;;;;;10956:14;:12;:14::i;:::-;10933:37;10918:52;;10770:207;;;;;:::o;1929:204:6:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:5:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4033:103:19:-;4089:7;4115:14;;4108:21;;4033:103;:::o;1201:85:5:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3215:220:19:-;1094:13:5;:11;:13::i;:::-;3282:9:19::1;3305:7;:5;:7::i;:::-;3297:21;;3326;3297:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3281:71;;;3367:4;3362:67;;3394:24;;;;;;;;;;;;;;3362:67;1117:1:5;3215:220:19:o:0;2632:102:6:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;9398:585:19:-;9480:17;9512:18;;;;;;;;;;;9508:74;;;9553:18;;;;;;;;;;;;;;9508:74;9596:14;:12;:14::i;:::-;9591:75;;9633:22;;;;;;;;;;;;;;9591:75;9687:18;:37;;;9738:12;9764:19;1253:1;9836:22;1300:1;9687:208;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9675:220;;9926:4;9905:18;;:25;;;;;;;;;;;;;;;;;;9945:31;9966:9;9945:31;;;;;;:::i;:::-;;;;;;;;9398:585;:::o;2719:490::-;2786:19;2808:13;:11;:13::i;:::-;2786:35;;2846:1;2835:7;:12;2831:65;;;2870:15;;;;;;;;;;;;;;2831:65;2933:10;2923:7;2909:11;:21;;;;:::i;:::-;:34;2905:90;;;2966:18;;;;;;;;;;;;;;2905:90;3032:7;3020:9;:19;;;;:::i;:::-;3008:9;:31;3004:88;;;3062:19;;;;;;;;;;;;;;3004:88;3106:9;3118:1;3106:13;;3101:102;3126:7;3121:1;:12;3101:102;;3154:38;3164:10;3190:1;3176:11;:15;;;;:::i;:::-;3154:9;:38::i;:::-;3135:3;;;;;:::i;:::-;;;;3101:102;;;;2719:490;;:::o;4169:153:6:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;11102:163:19:-;1094:13:5;:11;:13::i;:::-;11242:16:19::1;11222:17;:36;;;;11102:163:::0;:::o;5250:315:6:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;3922:105:19:-;3979:7;4005:15;;3998:22;;3922:105;:::o;4758:92::-;4808:7;4834:9;4827:16;;4758:92;:::o;3457:459::-;3554:13;3588:16;3596:7;3588;:16::i;:::-;3583:73;;3627:18;;;;;;;;;;;;;;3583:73;3666:18;3686:20;3710:28;3730:7;3710:19;:28::i;:::-;3665:73;;;;3748:17;3768:41;3781:10;3793:15;3768:12;:41::i;:::-;3748:61;;3819:24;3846:19;3861:3;3846:14;:19::i;:::-;3819:46;;3882:27;3898:10;3882:15;:27::i;:::-;3875:34;;;;;;3457:459;;;:::o;8754:638::-;8808:4;8824:23;8866:15;;8850:13;:11;:13::i;:::-;:31;;;;:::i;:::-;8824:57;;8914:1;8895:15;:20;8891:63;;;8938:5;8931:12;;;;;8891:63;8963:22;9027:1;9007:17;;:21;:61;;;;;9051:17;;9032:15;:36;;9007:61;9003:116;;;9104:4;9084:24;;9003:116;9128:21;9203:1;9184:16;;:20;:87;;;;;9255:16;;9238:14;;9220:15;:32;;;;:::i;:::-;:51;9184:87;9167:163;;;9315:4;9296:23;;9167:163;9347:17;:37;;;;9368:16;9347:37;9339:46;;;;;8754:638;;:::o;4856:96::-;4909:7;4935:10;4928:17;;4856:96;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:5:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;4142:103:19:-;4195:7;4221:17;;4214:24;;4142:103;:::o;4466:286::-;4563:7;4584;4605;4637:21;4661:11;4673:5;4661:18;;;;;;;;;;;;;;;;;;;;;;;;;;4637:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:5;:16;;;4715:5;:14;;;4731:5;:13;;;4689:56;;;;;;;4466:286;;;;;:::o;990:222:9:-;1092:4;1130:35;1115:50;;;:11;:50;;;;:90;;;;1169:36;1193:11;1169:23;:36::i;:::-;1115:90;1108:97;;990:222;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;10581:167:19:-;10696:45;10726:11;10738:1;10726:14;;;;;;;;;;;;;;;;;;;;;;10696:29;:45::i;:::-;10581:167;;:::o;7317:261:6:-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:5:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7908:108:6:-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;4974:540:19:-;5067:18;5087:20;5128:9;5123:385;5147:11;:18;;;;5143:1;:22;5123:385;;;5218:11;5230:1;5218:14;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;5207:7;:36;;:89;;;;;5273:11;5285:1;5273:14;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;5263:7;:33;5207:89;5186:312;;;5392:11;5404:1;5392:14;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;5416:7;5381:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5371:54;;;;;;5342:101;;5329:114;;5479:4;5461:22;;5186:312;5167:3;;;;;:::i;:::-;;;;5123:385;;;;4974:540;;;:::o;6318:1654::-;6431:13;6460:22;;:::i;:::-;6492:111;;;;;;;;;;;;;;;;;:5;6498:1;6492:8;;;;;;;;;;;;;;;;;;:111;;;;6617:16;6613:1236;;;6649:154;;;;;;;;;;;;;;;;;:5;6655:1;6649:8;;;;;;;;;;;;;;;;;;:154;;;;6817:24;;:::i;:::-;6855:30;6888:36;6908:11;6921:2;6888:19;:36::i;:::-;6855:69;;6943:7;6938:383;6960:1;6956;:5;;;6938:383;;;6986:27;7016:50;7027:16;7049:2;7045:1;:6;;;;:::i;:::-;7016:50;;7063:2;7058:1;7054;:5;;;;:::i;:::-;7053:12;;;;:::i;:::-;7016:50;;:10;:50::i;:::-;6986:80;;7217:13;7125:163;;;;;;;;:::i;:::-;;;;;;;;;;;;;7084:7;7092:1;7084:10;;;;;;;;;;;;;;;;;;;;:222;;;;6938:383;6963:3;;;;;:::i;:::-;;;;6938:383;;;;7407:7;7415:1;7407:10;;;;;;;;;;;;;;;;;;;7439:7;7447:1;7439:10;;;;;;;;;;;;;;;;;;;7471:7;7479:1;7471:10;;;;;;;;;;;;;;;;;;;7503:7;7511:1;7503:10;;;;;;;;;;;;;;;;;;;7535:7;7543:1;7535:10;;;;;;;;;;;;;;;;;;;7567:7;7575:1;7567:10;;;;;;;;;;;;;;;;;;;7369:226;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7334:5;7340:1;7334:8;;;;;;;;;;;;;;;;;;:275;;;;6613:1236;;;;;7640:170;;;;;;;;;;;;;;;;;:5;7646:1;7640:8;;;;;;;;;;;;;;;;;;:170;;;;7824:14;;;;;;;;;;;;;;;;;:5;7830:1;7824:8;;;;;;;;;;;;;;;;;;:14;;;;6613:1236;7858:26;;;;;;;;;;;;;;;;;:5;7864:1;7858:8;;;;;;;;;;;;;;;;;;:26;;;;7925:5;7931:1;7925:8;;;;;;;;;;;;;;;;;;;7935:5;7941:1;7935:8;;;;;;;;;;;;;;;;;;;7945:5;7951:1;7945:8;;;;;;;;;;;;;;;;;;;7955:5;7961:1;7955:8;;;;;;;;;;;;;;;;;;;7908:56;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7894:71;;;6318:1654;;;;:::o;7978:340::-;8068:13;8097:21;:52;;;;;;;;;;;;;;;;;;;8159:30;8192:51;8236:3;8219:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;8192:13;:51::i;:::-;8159:84;;8284:7;8293:16;8267:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8253:58;;;;7978:340;;;:::o;5520:792::-;5616:13;5779:494;6145:8;5853:372;;;;;;;;:::i;:::-;;;;;;;;;;;;;5779:13;:494::i;:::-;5688:603;;;;;;;;:::i;:::-;;;;;;;;;;;;;5645:660;;5520:792;;;:::o;1570:300:6:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;9989:574:19:-;10067:19;10089:13;:11;:13::i;:::-;10067:35;;10112:18;10151:1;10133:15;;:19;;;;:::i;:::-;10112:40;;10162:16;10195:1;10181:11;:15;;;;:::i;:::-;10162:34;;10206:11;10236:137;;;;;;;;10275:10;10236:137;;;;10313:8;10236:137;;;;10348:10;10236:137;;;10206:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10411:11;10393:15;:29;;;;10449:15;10432:14;:32;;;;10495:5;10474:18;;:26;;;;;;;;;;;;;;;;;;10515:41;10535:10;10547:8;10515:41;;;;;;;:::i;:::-;;;;;;;;9989:574;;;;:::o;2624:572:9:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;2839:1;2823:18;;:4;:18;;;2819:183;;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;2918:10;;:4;:10;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;2914:88;2819:183;3029:1;3015:16;;:2;:16;;;3011:179;;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;3113:10;;:2;:10;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3109:81;3011:179;2624:572;;;:::o;14223:121:6:-;;;;:::o;8237:309::-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1652:441:15:-;1727:13;1752:19;1797:1;1788:6;1784:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1774:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1864:9;1889:1;1880:6;1876:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1951:3;1943:5;:11;1930:25;;;;;;;;;;;;;;;;;;1918:6;1925:1;1918:9;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;1979:1;1969:11;;;;;1899:3;;;;:::i;:::-;;;1859:132;;;;2017:1;2008:5;:10;2000:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:6;2065:21;;;1652:441;;;;:::o;8324:409:19:-;8454:13;8479:21;8509:3;8479:34;;8523:19;8566:10;8555:8;:21;;;;:::i;:::-;8545:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8523:54;;8592:9;8604:10;8592:22;;8587:109;8620:8;8616:1;:12;8587:109;;;8674:8;8683:1;8674:11;;;;;;;;;;;;;;;;;;;;;;;;8649:6;8660:10;8656:1;:14;;;;:::i;:::-;8649:22;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;8630:3;;;;;:::i;:::-;;;;8587:109;;;;8719:6;8705:21;;;;8324:409;;;;;:::o;505:3026:13:-;563:13;810:1;795:4;:11;:16;791:31;;;813:9;;;;;;;;;;;;;;;;791:31;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1357;1343:4;:11;:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:1;:27;;;;:::i;:::-;1326:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;3087:1;3076:9;3072:17;3059:30;;1857:1257;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;;1428:2073;;3518:6;3511:13;;;;505:3026;;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13729:122:6:-;;;;:::o;3902:161:9:-;4005:10;:17;;;;3978:15;:24;3994:7;3978:24;;;;;;;;;;;:44;;;;4032:10;4048:7;4032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:161;:::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;4942:51;;5003:18;5024:17;:26;5042:7;5024:26;;;;;;;;;;;;5003:47;;5168:14;5154:10;:28;5150:323;;5198:19;5220:12;:18;5233:4;5220:18;;;;;;;;;;;;;;;:34;5239:14;5220:34;;;;;;;;;;;;5198:56;;5302:11;5269:12;:18;5282:4;5269:18;;;;;;;;;;;;;;;:30;5288:10;5269:30;;;;;;;;;;;:44;;;;5418:10;5385:17;:30;5403:11;5385:30;;;;;;;;;;;:43;;;;5150:323;;5566:17;:26;5584:7;5566:26;;;;;;;;;;;5559:33;;;5609:12;:18;5622:4;5609:18;;;;;;;;;;;;;;;:34;5628:14;5609:34;;;;;;;;;;;5602:41;;;4680:970;;;;:::o;5938:1061::-;6187:22;6232:1;6212:10;:17;;;;:21;;;;:::i;:::-;6187:46;;6243:18;6264:15;:24;6280:7;6264:24;;;;;;;;;;;;6243:45;;6610:19;6632:10;6643:14;6632:26;;;;;;;;;;;;;;;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;;;;;;;;;;;;;;;;:36;;;;6804:10;6773:15;:28;6789:11;6773:28;;;;;;;;;;;:41;;;;6942:15;:24;6958:7;6942:24;;;;;;;;;;;6935:31;;;6976:10;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1061;;;;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;3574:37;;3648:7;3621:12;:16;3634:2;3621:16;;;;;;;;;;;;;;;:24;3638:6;3621:24;;;;;;;;;;;:34;;;;3694:6;3665:17;:26;3683:7;3665:26;;;;;;;;;;;:35;;;;3490:217;;;:::o;8868:427:6:-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;1175:320:12:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24:655:20:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;414:1;411;404:12;350:2;450:1;435:238;460:6;457:1;454:13;435:238;;;528:3;557:37;590:3;578:10;557:37;:::i;:::-;552:3;545:50;624:4;619:3;615:14;608:21;;658:4;653:3;649:14;642:21;;495:178;482:1;479;475:9;470:14;;435:238;;;439:14;126:553;;;;;;;:::o;685:343::-;762:5;787:65;803:48;844:6;803:48;:::i;:::-;787:65;:::i;:::-;778:74;;875:6;868:5;861:21;913:4;906:5;902:16;951:3;942:6;937:3;933:16;930:25;927:2;;;968:1;965;958:12;927:2;981:41;1015:6;1010:3;1005;981:41;:::i;:::-;768:260;;;;;;:::o;1034:139::-;1080:5;1118:6;1105:20;1096:29;;1134:33;1161:5;1134:33;:::i;:::-;1086:87;;;;:::o;1196:303::-;1267:5;1316:3;1309:4;1301:6;1297:17;1293:27;1283:2;;1334:1;1331;1324:12;1283:2;1374:6;1361:20;1399:94;1489:3;1481:6;1474:4;1466:6;1462:17;1399:94;:::i;:::-;1390:103;;1273:226;;;;;:::o;1505:133::-;1548:5;1586:6;1573:20;1564:29;;1602:30;1626:5;1602:30;:::i;:::-;1554:84;;;;:::o;1644:137::-;1689:5;1727:6;1714:20;1705:29;;1743:32;1769:5;1743:32;:::i;:::-;1695:86;;;;:::o;1787:141::-;1843:5;1874:6;1868:13;1859:22;;1890:32;1916:5;1890:32;:::i;:::-;1849:79;;;;:::o;1947:351::-;2004:8;2014:6;2064:3;2057:4;2049:6;2045:17;2041:27;2031:2;;2082:1;2079;2072:12;2031:2;2118:6;2105:20;2095:30;;2148:18;2140:6;2137:30;2134:2;;;2180:1;2177;2170:12;2134:2;2217:4;2209:6;2205:17;2193:29;;2271:3;2263:4;2255:6;2251:17;2241:8;2237:32;2234:41;2231:2;;;2288:1;2285;2278:12;2231:2;2021:277;;;;;:::o;2317:271::-;2372:5;2421:3;2414:4;2406:6;2402:17;2398:27;2388:2;;2439:1;2436;2429:12;2388:2;2479:6;2466:20;2504:78;2578:3;2570:6;2563:4;2555:6;2551:17;2504:78;:::i;:::-;2495:87;;2378:210;;;;;:::o;2594:139::-;2640:5;2678:6;2665:20;2656:29;;2694:33;2721:5;2694:33;:::i;:::-;2646:87;;;;:::o;2739:143::-;2796:5;2827:6;2821:13;2812:22;;2843:33;2870:5;2843:33;:::i;:::-;2802:80;;;;:::o;2888:262::-;2947:6;2996:2;2984:9;2975:7;2971:23;2967:32;2964:2;;;3012:1;3009;3002:12;2964:2;3055:1;3080:53;3125:7;3116:6;3105:9;3101:22;3080:53;:::i;:::-;3070:63;;3026:117;2954:196;;;;:::o;3156:407::-;3224:6;3232;3281:2;3269:9;3260:7;3256:23;3252:32;3249:2;;;3297:1;3294;3287:12;3249:2;3340:1;3365:53;3410:7;3401:6;3390:9;3386:22;3365:53;:::i;:::-;3355:63;;3311:117;3467:2;3493:53;3538:7;3529:6;3518:9;3514:22;3493:53;:::i;:::-;3483:63;;3438:118;3239:324;;;;;:::o;3569:552::-;3646:6;3654;3662;3711:2;3699:9;3690:7;3686:23;3682:32;3679:2;;;3727:1;3724;3717:12;3679:2;3770:1;3795:53;3840:7;3831:6;3820:9;3816:22;3795:53;:::i;:::-;3785:63;;3741:117;3897:2;3923:53;3968:7;3959:6;3948:9;3944:22;3923:53;:::i;:::-;3913:63;;3868:118;4025:2;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3996:118;3669:452;;;;;:::o;4127:809::-;4222:6;4230;4238;4246;4295:3;4283:9;4274:7;4270:23;4266:33;4263:2;;;4312:1;4309;4302:12;4263:2;4355:1;4380:53;4425:7;4416:6;4405:9;4401:22;4380:53;:::i;:::-;4370:63;;4326:117;4482:2;4508:53;4553:7;4544:6;4533:9;4529:22;4508:53;:::i;:::-;4498:63;;4453:118;4610:2;4636:53;4681:7;4672:6;4661:9;4657:22;4636:53;:::i;:::-;4626:63;;4581:118;4766:2;4755:9;4751:18;4738:32;4797:18;4789:6;4786:30;4783:2;;;4829:1;4826;4819:12;4783:2;4857:62;4911:7;4902:6;4891:9;4887:22;4857:62;:::i;:::-;4847:72;;4709:220;4253:683;;;;;;;:::o;4942:401::-;5007:6;5015;5064:2;5052:9;5043:7;5039:23;5035:32;5032:2;;;5080:1;5077;5070:12;5032:2;5123:1;5148:53;5193:7;5184:6;5173:9;5169:22;5148:53;:::i;:::-;5138:63;;5094:117;5250:2;5276:50;5318:7;5309:6;5298:9;5294:22;5276:50;:::i;:::-;5266:60;;5221:115;5022:321;;;;;:::o;5349:407::-;5417:6;5425;5474:2;5462:9;5453:7;5449:23;5445:32;5442:2;;;5490:1;5487;5480:12;5442:2;5533:1;5558:53;5603:7;5594:6;5583:9;5579:22;5558:53;:::i;:::-;5548:63;;5504:117;5660:2;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;:::i;:::-;5676:63;;5631:118;5432:324;;;;;:::o;5762:260::-;5820:6;5869:2;5857:9;5848:7;5844:23;5840:32;5837:2;;;5885:1;5882;5875:12;5837:2;5928:1;5953:52;5997:7;5988:6;5977:9;5973:22;5953:52;:::i;:::-;5943:62;;5899:116;5827:195;;;;:::o;6028:282::-;6097:6;6146:2;6134:9;6125:7;6121:23;6117:32;6114:2;;;6162:1;6159;6152:12;6114:2;6205:1;6230:63;6285:7;6276:6;6265:9;6261:22;6230:63;:::i;:::-;6220:73;;6176:127;6104:206;;;;:::o;6316:393::-;6386:6;6394;6443:2;6431:9;6422:7;6418:23;6414:32;6411:2;;;6459:1;6456;6449:12;6411:2;6530:1;6519:9;6515:17;6502:31;6560:18;6552:6;6549:30;6546:2;;;6592:1;6589;6582:12;6546:2;6628:64;6684:7;6675:6;6664:9;6660:22;6628:64;:::i;:::-;6610:82;;;;6473:229;6401:308;;;;;:::o;6715:262::-;6774:6;6823:2;6811:9;6802:7;6798:23;6794:32;6791:2;;;6839:1;6836;6829:12;6791:2;6882:1;6907:53;6952:7;6943:6;6932:9;6928:22;6907:53;:::i;:::-;6897:63;;6853:117;6781:196;;;;:::o;6983:284::-;7053:6;7102:2;7090:9;7081:7;7077:23;7073:32;7070:2;;;7118:1;7115;7108:12;7070:2;7161:1;7186:64;7242:7;7233:6;7222:9;7218:22;7186:64;:::i;:::-;7176:74;;7132:128;7060:207;;;;:::o;7273:550::-;7366:6;7374;7423:2;7411:9;7402:7;7398:23;7394:32;7391:2;;;7439:1;7436;7429:12;7391:2;7482:1;7507:53;7552:7;7543:6;7532:9;7528:22;7507:53;:::i;:::-;7497:63;;7453:117;7637:2;7626:9;7622:18;7609:32;7668:18;7660:6;7657:30;7654:2;;;7700:1;7697;7690:12;7654:2;7728:78;7798:7;7789:6;7778:9;7774:22;7728:78;:::i;:::-;7718:88;;7580:236;7381:442;;;;;:::o;7829:118::-;7916:24;7934:5;7916:24;:::i;:::-;7911:3;7904:37;7894:53;;:::o;7953:109::-;8034:21;8049:5;8034:21;:::i;:::-;8029:3;8022:34;8012:50;;:::o;8068:118::-;8155:24;8173:5;8155:24;:::i;:::-;8150:3;8143:37;8133:53;;:::o;8192:360::-;8278:3;8306:38;8338:5;8306:38;:::i;:::-;8360:70;8423:6;8418:3;8360:70;:::i;:::-;8353:77;;8439:52;8484:6;8479:3;8472:4;8465:5;8461:16;8439:52;:::i;:::-;8516:29;8538:6;8516:29;:::i;:::-;8511:3;8507:39;8500:46;;8282:270;;;;;:::o;8558:364::-;8646:3;8674:39;8707:5;8674:39;:::i;:::-;8729:71;8793:6;8788:3;8729:71;:::i;:::-;8722:78;;8809:52;8854:6;8849:3;8842:4;8835:5;8831:16;8809:52;:::i;:::-;8886:29;8908:6;8886:29;:::i;:::-;8881:3;8877:39;8870:46;;8650:272;;;;;:::o;8928:377::-;9034:3;9062:39;9095:5;9062:39;:::i;:::-;9117:89;9199:6;9194:3;9117:89;:::i;:::-;9110:96;;9215:52;9260:6;9255:3;9248:4;9241:5;9237:16;9215:52;:::i;:::-;9292:6;9287:3;9283:16;9276:23;;9038:267;;;;;:::o;9311:366::-;9453:3;9474:67;9538:2;9533:3;9474:67;:::i;:::-;9467:74;;9550:93;9639:3;9550:93;:::i;:::-;9668:2;9663:3;9659:12;9652:19;;9457:220;;;:::o;9683:366::-;9825:3;9846:67;9910:2;9905:3;9846:67;:::i;:::-;9839:74;;9922:93;10011:3;9922:93;:::i;:::-;10040:2;10035:3;10031:12;10024:19;;9829:220;;;:::o;10055:366::-;10197:3;10218:67;10282:2;10277:3;10218:67;:::i;:::-;10211:74;;10294:93;10383:3;10294:93;:::i;:::-;10412:2;10407:3;10403:12;10396:19;;10201:220;;;:::o;10427:366::-;10569:3;10590:67;10654:2;10649:3;10590:67;:::i;:::-;10583:74;;10666:93;10755:3;10666:93;:::i;:::-;10784:2;10779:3;10775:12;10768:19;;10573:220;;;:::o;10799:366::-;10941:3;10962:67;11026:2;11021:3;10962:67;:::i;:::-;10955:74;;11038:93;11127:3;11038:93;:::i;:::-;11156:2;11151:3;11147:12;11140:19;;10945:220;;;:::o;11171:366::-;11313:3;11334:67;11398:2;11393:3;11334:67;:::i;:::-;11327:74;;11410:93;11499:3;11410:93;:::i;:::-;11528:2;11523:3;11519:12;11512:19;;11317:220;;;:::o;11543:400::-;11703:3;11724:84;11806:1;11801:3;11724:84;:::i;:::-;11717:91;;11817:93;11906:3;11817:93;:::i;:::-;11935:1;11930:3;11926:11;11919:18;;11707:236;;;:::o;11949:402::-;12109:3;12130:85;12212:2;12207:3;12130:85;:::i;:::-;12123:92;;12224:93;12313:3;12224:93;:::i;:::-;12342:2;12337:3;12333:12;12326:19;;12113:238;;;:::o;12357:366::-;12499:3;12520:67;12584:2;12579:3;12520:67;:::i;:::-;12513:74;;12596:93;12685:3;12596:93;:::i;:::-;12714:2;12709:3;12705:12;12698:19;;12503:220;;;:::o;12729:366::-;12871:3;12892:67;12956:2;12951:3;12892:67;:::i;:::-;12885:74;;12968:93;13057:3;12968:93;:::i;:::-;13086:2;13081:3;13077:12;13070:19;;12875:220;;;:::o;13101:402::-;13261:3;13282:85;13364:2;13359:3;13282:85;:::i;:::-;13275:92;;13376:93;13465:3;13376:93;:::i;:::-;13494:2;13489:3;13485:12;13478:19;;13265:238;;;:::o;13509:366::-;13651:3;13672:67;13736:2;13731:3;13672:67;:::i;:::-;13665:74;;13748:93;13837:3;13748:93;:::i;:::-;13866:2;13861:3;13857:12;13850:19;;13655:220;;;:::o;13881:400::-;14041:3;14062:84;14144:1;14139:3;14062:84;:::i;:::-;14055:91;;14155:93;14244:3;14155:93;:::i;:::-;14273:1;14268:3;14264:11;14257:18;;14045:236;;;:::o;14287:402::-;14447:3;14468:85;14550:2;14545:3;14468:85;:::i;:::-;14461:92;;14562:93;14651:3;14562:93;:::i;:::-;14680:2;14675:3;14671:12;14664:19;;14451:238;;;:::o;14695:400::-;14855:3;14876:84;14958:1;14953:3;14876:84;:::i;:::-;14869:91;;14969:93;15058:3;14969:93;:::i;:::-;15087:1;15082:3;15078:11;15071:18;;14859:236;;;:::o;15101:366::-;15243:3;15264:67;15328:2;15323:3;15264:67;:::i;:::-;15257:74;;15340:93;15429:3;15340:93;:::i;:::-;15458:2;15453:3;15449:12;15442:19;;15247:220;;;:::o;15473:366::-;15615:3;15636:67;15700:2;15695:3;15636:67;:::i;:::-;15629:74;;15712:93;15801:3;15712:93;:::i;:::-;15830:2;15825:3;15821:12;15814:19;;15619:220;;;:::o;15845:400::-;16005:3;16026:84;16108:1;16103:3;16026:84;:::i;:::-;16019:91;;16119:93;16208:3;16119:93;:::i;:::-;16237:1;16232:3;16228:11;16221:18;;16009:236;;;:::o;16251:366::-;16393:3;16414:67;16478:2;16473:3;16414:67;:::i;:::-;16407:74;;16490:93;16579:3;16490:93;:::i;:::-;16608:2;16603:3;16599:12;16592:19;;16397:220;;;:::o;16623:400::-;16783:3;16804:84;16886:1;16881:3;16804:84;:::i;:::-;16797:91;;16897:93;16986:3;16897:93;:::i;:::-;17015:1;17010:3;17006:11;16999:18;;16787:236;;;:::o;17029:366::-;17171:3;17192:67;17256:2;17251:3;17192:67;:::i;:::-;17185:74;;17268:93;17357:3;17268:93;:::i;:::-;17386:2;17381:3;17377:12;17370:19;;17175:220;;;:::o;17401:366::-;17543:3;17564:67;17628:2;17623:3;17564:67;:::i;:::-;17557:74;;17640:93;17729:3;17640:93;:::i;:::-;17758:2;17753:3;17749:12;17742:19;;17547:220;;;:::o;17773:402::-;17933:3;17954:85;18036:2;18031:3;17954:85;:::i;:::-;17947:92;;18048:93;18137:3;18048:93;:::i;:::-;18166:2;18161:3;18157:12;18150:19;;17937:238;;;:::o;18181:398::-;18340:3;18361:83;18442:1;18437:3;18361:83;:::i;:::-;18354:90;;18453:93;18542:3;18453:93;:::i;:::-;18571:1;18566:3;18562:11;18555:18;;18344:235;;;:::o;18585:366::-;18727:3;18748:67;18812:2;18807:3;18748:67;:::i;:::-;18741:74;;18824:93;18913:3;18824:93;:::i;:::-;18942:2;18937:3;18933:12;18926:19;;18731:220;;;:::o;18957:366::-;19099:3;19120:67;19184:2;19179:3;19120:67;:::i;:::-;19113:74;;19196:93;19285:3;19196:93;:::i;:::-;19314:2;19309:3;19305:12;19298:19;;19103:220;;;:::o;19329:402::-;19489:3;19510:85;19592:2;19587:3;19510:85;:::i;:::-;19503:92;;19604:93;19693:3;19604:93;:::i;:::-;19722:2;19717:3;19713:12;19706:19;;19493:238;;;:::o;19737:115::-;19822:23;19839:5;19822:23;:::i;:::-;19817:3;19810:36;19800:52;;:::o;19858:118::-;19945:24;19963:5;19945:24;:::i;:::-;19940:3;19933:37;19923:53;;:::o;19982:115::-;20067:23;20084:5;20067:23;:::i;:::-;20062:3;20055:36;20045:52;;:::o;20103:115::-;20188:23;20205:5;20188:23;:::i;:::-;20183:3;20176:36;20166:52;;:::o;20224:275::-;20356:3;20378:95;20469:3;20460:6;20378:95;:::i;:::-;20371:102;;20490:3;20483:10;;20360:139;;;;:::o;20505:435::-;20685:3;20707:95;20798:3;20789:6;20707:95;:::i;:::-;20700:102;;20819:95;20910:3;20901:6;20819:95;:::i;:::-;20812:102;;20931:3;20924:10;;20689:251;;;;;:::o;20946:755::-;21222:3;21244:95;21335:3;21326:6;21244:95;:::i;:::-;21237:102;;21356:95;21447:3;21438:6;21356:95;:::i;:::-;21349:102;;21468:95;21559:3;21550:6;21468:95;:::i;:::-;21461:102;;21580:95;21671:3;21662:6;21580:95;:::i;:::-;21573:102;;21692:3;21685:10;;21226:475;;;;;;;:::o;21707:1075::-;22079:3;22101:95;22192:3;22183:6;22101:95;:::i;:::-;22094:102;;22213:95;22304:3;22295:6;22213:95;:::i;:::-;22206:102;;22325:95;22416:3;22407:6;22325:95;:::i;:::-;22318:102;;22437:95;22528:3;22519:6;22437:95;:::i;:::-;22430:102;;22549:95;22640:3;22631:6;22549:95;:::i;:::-;22542:102;;22661:95;22752:3;22743:6;22661:95;:::i;:::-;22654:102;;22773:3;22766:10;;22083:699;;;;;;;;;:::o;22788:2137::-;23627:3;23649:148;23793:3;23649:148;:::i;:::-;23642:155;;23814:148;23958:3;23814:148;:::i;:::-;23807:155;;23979:148;24123:3;23979:148;:::i;:::-;23972:155;;24144:148;24288:3;24144:148;:::i;:::-;24137:155;;24309:148;24453:3;24309:148;:::i;:::-;24302:155;;24474:95;24565:3;24556:6;24474:95;:::i;:::-;24467:102;;24586:148;24730:3;24586:148;:::i;:::-;24579:155;;24751:148;24895:3;24751:148;:::i;:::-;24744:155;;24916:3;24909:10;;23631:1294;;;;:::o;24931:541::-;25164:3;25186:148;25330:3;25186:148;:::i;:::-;25179:155;;25351:95;25442:3;25433:6;25351:95;:::i;:::-;25344:102;;25463:3;25456:10;;25168:304;;;;:::o;25478:379::-;25662:3;25684:147;25827:3;25684:147;:::i;:::-;25677:154;;25848:3;25841:10;;25666:191;;;:::o;25863:807::-;26197:3;26219:148;26363:3;26219:148;:::i;:::-;26212:155;;26384:95;26475:3;26466:6;26384:95;:::i;:::-;26377:102;;26496:148;26640:3;26496:148;:::i;:::-;26489:155;;26661:3;26654:10;;26201:469;;;;:::o;26676:222::-;26769:4;26807:2;26796:9;26792:18;26784:26;;26820:71;26888:1;26877:9;26873:17;26864:6;26820:71;:::i;:::-;26774:124;;;;:::o;26904:332::-;27025:4;27063:2;27052:9;27048:18;27040:26;;27076:71;27144:1;27133:9;27129:17;27120:6;27076:71;:::i;:::-;27157:72;27225:2;27214:9;27210:18;27201:6;27157:72;:::i;:::-;27030:206;;;;;:::o;27242:640::-;27437:4;27475:3;27464:9;27460:19;27452:27;;27489:71;27557:1;27546:9;27542:17;27533:6;27489:71;:::i;:::-;27570:72;27638:2;27627:9;27623:18;27614:6;27570:72;:::i;:::-;27652;27720:2;27709:9;27705:18;27696:6;27652:72;:::i;:::-;27771:9;27765:4;27761:20;27756:2;27745:9;27741:18;27734:48;27799:76;27870:4;27861:6;27799:76;:::i;:::-;27791:84;;27442:440;;;;;;;:::o;27888:210::-;27975:4;28013:2;28002:9;27998:18;27990:26;;28026:65;28088:1;28077:9;28073:17;28064:6;28026:65;:::i;:::-;27980:118;;;;:::o;28104:407::-;28237:4;28275:2;28264:9;28260:18;28252:26;;28288:65;28350:1;28339:9;28335:17;28326:6;28288:65;:::i;:::-;28400:9;28394:4;28390:20;28385:2;28374:9;28370:18;28363:48;28428:76;28499:4;28490:6;28428:76;:::i;:::-;28420:84;;28242:269;;;;;:::o;28517:648::-;28714:4;28752:3;28741:9;28737:19;28729:27;;28766:71;28834:1;28823:9;28819:17;28810:6;28766:71;:::i;:::-;28847:70;28913:2;28902:9;28898:18;28889:6;28847:70;:::i;:::-;28927;28993:2;28982:9;28978:18;28969:6;28927:70;:::i;:::-;29007;29073:2;29062:9;29058:18;29049:6;29007:70;:::i;:::-;29087:71;29153:3;29142:9;29138:19;29129:6;29087:71;:::i;:::-;28719:446;;;;;;;;:::o;29171:313::-;29284:4;29322:2;29311:9;29307:18;29299:26;;29371:9;29365:4;29361:20;29357:1;29346:9;29342:17;29335:47;29399:78;29472:4;29463:6;29399:78;:::i;:::-;29391:86;;29289:195;;;;:::o;29490:419::-;29656:4;29694:2;29683:9;29679:18;29671:26;;29743:9;29737:4;29733:20;29729:1;29718:9;29714:17;29707:47;29771:131;29897:4;29771:131;:::i;:::-;29763:139;;29661:248;;;:::o;29915:419::-;30081:4;30119:2;30108:9;30104:18;30096:26;;30168:9;30162:4;30158:20;30154:1;30143:9;30139:17;30132:47;30196:131;30322:4;30196:131;:::i;:::-;30188:139;;30086:248;;;:::o;30340:419::-;30506:4;30544:2;30533:9;30529:18;30521:26;;30593:9;30587:4;30583:20;30579:1;30568:9;30564:17;30557:47;30621:131;30747:4;30621:131;:::i;:::-;30613:139;;30511:248;;;:::o;30765:419::-;30931:4;30969:2;30958:9;30954:18;30946:26;;31018:9;31012:4;31008:20;31004:1;30993:9;30989:17;30982:47;31046:131;31172:4;31046:131;:::i;:::-;31038:139;;30936:248;;;:::o;31190:419::-;31356:4;31394:2;31383:9;31379:18;31371:26;;31443:9;31437:4;31433:20;31429:1;31418:9;31414:17;31407:47;31471:131;31597:4;31471:131;:::i;:::-;31463:139;;31361:248;;;:::o;31615:419::-;31781:4;31819:2;31808:9;31804:18;31796:26;;31868:9;31862:4;31858:20;31854:1;31843:9;31839:17;31832:47;31896:131;32022:4;31896:131;:::i;:::-;31888:139;;31786:248;;;:::o;32040:419::-;32206:4;32244:2;32233:9;32229:18;32221:26;;32293:9;32287:4;32283:20;32279:1;32268:9;32264:17;32257:47;32321:131;32447:4;32321:131;:::i;:::-;32313:139;;32211:248;;;:::o;32465:419::-;32631:4;32669:2;32658:9;32654:18;32646:26;;32718:9;32712:4;32708:20;32704:1;32693:9;32689:17;32682:47;32746:131;32872:4;32746:131;:::i;:::-;32738:139;;32636:248;;;:::o;32890:419::-;33056:4;33094:2;33083:9;33079:18;33071:26;;33143:9;33137:4;33133:20;33129:1;33118:9;33114:17;33107:47;33171:131;33297:4;33171:131;:::i;:::-;33163:139;;33061:248;;;:::o;33315:419::-;33481:4;33519:2;33508:9;33504:18;33496:26;;33568:9;33562:4;33558:20;33554:1;33543:9;33539:17;33532:47;33596:131;33722:4;33596:131;:::i;:::-;33588:139;;33486:248;;;:::o;33740:419::-;33906:4;33944:2;33933:9;33929:18;33921:26;;33993:9;33987:4;33983:20;33979:1;33968:9;33964:17;33957:47;34021:131;34147:4;34021:131;:::i;:::-;34013:139;;33911:248;;;:::o;34165:419::-;34331:4;34369:2;34358:9;34354:18;34346:26;;34418:9;34412:4;34408:20;34404:1;34393:9;34389:17;34382:47;34446:131;34572:4;34446:131;:::i;:::-;34438:139;;34336:248;;;:::o;34590:419::-;34756:4;34794:2;34783:9;34779:18;34771:26;;34843:9;34837:4;34833:20;34829:1;34818:9;34814:17;34807:47;34871:131;34997:4;34871:131;:::i;:::-;34863:139;;34761:248;;;:::o;35015:419::-;35181:4;35219:2;35208:9;35204:18;35196:26;;35268:9;35262:4;35258:20;35254:1;35243:9;35239:17;35232:47;35296:131;35422:4;35296:131;:::i;:::-;35288:139;;35186:248;;;:::o;35440:419::-;35606:4;35644:2;35633:9;35629:18;35621:26;;35693:9;35687:4;35683:20;35679:1;35668:9;35664:17;35657:47;35721:131;35847:4;35721:131;:::i;:::-;35713:139;;35611:248;;;:::o;35865:419::-;36031:4;36069:2;36058:9;36054:18;36046:26;;36118:9;36112:4;36108:20;36104:1;36093:9;36089:17;36082:47;36146:131;36272:4;36146:131;:::i;:::-;36138:139;;36036:248;;;:::o;36290:222::-;36383:4;36421:2;36410:9;36406:18;36398:26;;36434:71;36502:1;36491:9;36487:17;36478:6;36434:71;:::i;:::-;36388:124;;;;:::o;36518:332::-;36639:4;36677:2;36666:9;36662:18;36654:26;;36690:71;36758:1;36747:9;36743:17;36734:6;36690:71;:::i;:::-;36771:72;36839:2;36828:9;36824:18;36815:6;36771:72;:::i;:::-;36644:206;;;;;:::o;36856:442::-;37005:4;37043:2;37032:9;37028:18;37020:26;;37056:71;37124:1;37113:9;37109:17;37100:6;37056:71;:::i;:::-;37137:72;37205:2;37194:9;37190:18;37181:6;37137:72;:::i;:::-;37219;37287:2;37276:9;37272:18;37263:6;37219:72;:::i;:::-;37010:288;;;;;;:::o;37304:129::-;37338:6;37365:20;;:::i;:::-;37355:30;;37394:33;37422:4;37414:6;37394:33;:::i;:::-;37345:88;;;:::o;37439:75::-;37472:6;37505:2;37499:9;37489:19;;37479:35;:::o;37520:311::-;37597:4;37687:18;37679:6;37676:30;37673:2;;;37709:18;;:::i;:::-;37673:2;37759:4;37751:6;37747:17;37739:25;;37819:4;37813;37809:15;37801:23;;37602:229;;;:::o;37837:307::-;37898:4;37988:18;37980:6;37977:30;37974:2;;;38010:18;;:::i;:::-;37974:2;38048:29;38070:6;38048:29;:::i;:::-;38040:37;;38132:4;38126;38122:15;38114:23;;37903:241;;;:::o;38150:98::-;38201:6;38235:5;38229:12;38219:22;;38208:40;;;:::o;38254:99::-;38306:6;38340:5;38334:12;38324:22;;38313:40;;;:::o;38359:168::-;38442:11;38476:6;38471:3;38464:19;38516:4;38511:3;38507:14;38492:29;;38454:73;;;;:::o;38533:147::-;38634:11;38671:3;38656:18;;38646:34;;;;:::o;38686:169::-;38770:11;38804:6;38799:3;38792:19;38844:4;38839:3;38835:14;38820:29;;38782:73;;;;:::o;38861:148::-;38963:11;39000:3;38985:18;;38975:34;;;;:::o;39015:305::-;39055:3;39074:20;39092:1;39074:20;:::i;:::-;39069:25;;39108:20;39126:1;39108:20;:::i;:::-;39103:25;;39262:1;39194:66;39190:74;39187:1;39184:81;39181:2;;;39268:18;;:::i;:::-;39181:2;39312:1;39309;39305:9;39298:16;;39059:261;;;;:::o;39326:237::-;39364:3;39383:18;39399:1;39383:18;:::i;:::-;39378:23;;39415:18;39431:1;39415:18;:::i;:::-;39410:23;;39505:1;39499:4;39495:12;39492:1;39489:19;39486:2;;;39511:18;;:::i;:::-;39486:2;39555:1;39552;39548:9;39541:16;;39368:195;;;;:::o;39569:185::-;39609:1;39626:20;39644:1;39626:20;:::i;:::-;39621:25;;39660:20;39678:1;39660:20;:::i;:::-;39655:25;;39699:1;39689:2;;39704:18;;:::i;:::-;39689:2;39746:1;39743;39739:9;39734:14;;39611:143;;;;:::o;39760:348::-;39800:7;39823:20;39841:1;39823:20;:::i;:::-;39818:25;;39857:20;39875:1;39857:20;:::i;:::-;39852:25;;40045:1;39977:66;39973:74;39970:1;39967:81;39962:1;39955:9;39948:17;39944:105;39941:2;;;40052:18;;:::i;:::-;39941:2;40100:1;40097;40093:9;40082:20;;39808:300;;;;:::o;40114:280::-;40152:7;40175:18;40191:1;40175:18;:::i;:::-;40170:23;;40207:18;40223:1;40207:18;:::i;:::-;40202:23;;40331:1;40325:4;40321:12;40318:1;40315:19;40310:1;40303:9;40296:17;40292:43;40289:2;;;40338:18;;:::i;:::-;40289:2;40386:1;40383;40379:9;40368:20;;40160:234;;;;:::o;40400:191::-;40440:4;40460:20;40478:1;40460:20;:::i;:::-;40455:25;;40494:20;40512:1;40494:20;:::i;:::-;40489:25;;40533:1;40530;40527:8;40524:2;;;40538:18;;:::i;:::-;40524:2;40583:1;40580;40576:9;40568:17;;40445:146;;;;:::o;40597:96::-;40634:7;40663:24;40681:5;40663:24;:::i;:::-;40652:35;;40642:51;;;:::o;40699:90::-;40733:7;40776:5;40769:13;40762:21;40751:32;;40741:48;;;:::o;40795:77::-;40832:7;40861:5;40850:16;;40840:32;;;:::o;40878:149::-;40914:7;40954:66;40947:5;40943:78;40932:89;;40922:105;;;:::o;41033:89::-;41069:7;41109:6;41102:5;41098:18;41087:29;;41077:45;;;:::o;41128:126::-;41165:7;41205:42;41198:5;41194:54;41183:65;;41173:81;;;:::o;41260:77::-;41297:7;41326:5;41315:16;;41305:32;;;:::o;41343:93::-;41379:7;41419:10;41412:5;41408:22;41397:33;;41387:49;;;:::o;41442:101::-;41478:7;41518:18;41511:5;41507:30;41496:41;;41486:57;;;:::o;41549:86::-;41584:7;41624:4;41617:5;41613:16;41602:27;;41592:43;;;:::o;41641:154::-;41725:6;41720:3;41715;41702:30;41787:1;41778:6;41773:3;41769:16;41762:27;41692:103;;;:::o;41801:307::-;41869:1;41879:113;41893:6;41890:1;41887:13;41879:113;;;41978:1;41973:3;41969:11;41963:18;41959:1;41954:3;41950:11;41943:39;41915:2;41912:1;41908:10;41903:15;;41879:113;;;42010:6;42007:1;42004:13;42001:2;;;42090:1;42081:6;42076:3;42072:16;42065:27;42001:2;41850:258;;;;:::o;42114:171::-;42153:3;42176:24;42194:5;42176:24;:::i;:::-;42167:33;;42222:4;42215:5;42212:15;42209:2;;;42230:18;;:::i;:::-;42209:2;42277:1;42270:5;42266:13;42259:20;;42157:128;;;:::o;42291:320::-;42335:6;42372:1;42366:4;42362:12;42352:22;;42419:1;42413:4;42409:12;42440:18;42430:2;;42496:4;42488:6;42484:17;42474:27;;42430:2;42558;42550:6;42547:14;42527:18;42524:38;42521:2;;;42577:18;;:::i;:::-;42521:2;42342:269;;;;:::o;42617:281::-;42700:27;42722:4;42700:27;:::i;:::-;42692:6;42688:40;42830:6;42818:10;42815:22;42794:18;42782:10;42779:34;42776:62;42773:2;;;42841:18;;:::i;:::-;42773:2;42881:10;42877:2;42870:22;42660:238;;;:::o;42904:233::-;42943:3;42966:24;42984:5;42966:24;:::i;:::-;42957:33;;43012:66;43005:5;43002:77;42999:2;;;43082:18;;:::i;:::-;42999:2;43129:1;43122:5;43118:13;43111:20;;42947:190;;;:::o;43143:167::-;43180:3;43203:22;43219:5;43203:22;:::i;:::-;43194:31;;43247:4;43240:5;43237:15;43234:2;;;43255:18;;:::i;:::-;43234:2;43302:1;43295:5;43291:13;43284:20;;43184:126;;;:::o;43316:180::-;43364:77;43361:1;43354:88;43461:4;43458:1;43451:15;43485:4;43482:1;43475:15;43502:180;43550:77;43547:1;43540:88;43647:4;43644:1;43637:15;43671:4;43668:1;43661:15;43688:180;43736:77;43733:1;43726:88;43833:4;43830:1;43823:15;43857:4;43854:1;43847:15;43874:180;43922:77;43919:1;43912:88;44019:4;44016:1;44009:15;44043:4;44040:1;44033:15;44060:102;44101:6;44152:2;44148:7;44143:2;44136:5;44132:14;44128:28;44118:38;;44108:54;;;:::o;44168:182::-;44308:34;44304:1;44296:6;44292:14;44285:58;44274:76;:::o;44356:230::-;44496:34;44492:1;44484:6;44480:14;44473:58;44565:13;44560:2;44552:6;44548:15;44541:38;44462:124;:::o;44592:237::-;44732:34;44728:1;44720:6;44716:14;44709:58;44801:20;44796:2;44788:6;44784:15;44777:45;44698:131;:::o;44835:225::-;44975:34;44971:1;44963:6;44959:14;44952:58;45044:8;45039:2;45031:6;45027:15;45020:33;44941:119;:::o;45066:224::-;45206:34;45202:1;45194:6;45190:14;45183:58;45275:7;45270:2;45262:6;45258:15;45251:32;45172:118;:::o;45296:178::-;45436:30;45432:1;45424:6;45420:14;45413:54;45402:72;:::o;45480:158::-;45620:10;45616:1;45608:6;45604:14;45597:34;45586:52;:::o;45644:214::-;45784:66;45780:1;45772:6;45768:14;45761:90;45750:108;:::o;45864:223::-;46004:34;46000:1;45992:6;45988:14;45981:58;46073:6;46068:2;46060:6;46056:15;46049:31;45970:117;:::o;46093:175::-;46233:27;46229:1;46221:6;46217:14;46210:51;46199:69;:::o;46274:214::-;46414:66;46410:1;46402:6;46398:14;46391:90;46380:108;:::o;46494:228::-;46634:34;46630:1;46622:6;46618:14;46611:58;46703:11;46698:2;46690:6;46686:15;46679:36;46600:122;:::o;46728:214::-;46868:66;46864:1;46856:6;46852:14;46845:90;46834:108;:::o;46948:315::-;47088:66;47084:1;47076:6;47072:14;47065:90;47189:66;47184:2;47176:6;47172:15;47165:91;47054:209;:::o;47269:214::-;47409:66;47405:1;47397:6;47393:14;47386:90;47375:108;:::o;47489:249::-;47629:34;47625:1;47617:6;47613:14;47606:58;47698:32;47693:2;47685:6;47681:15;47674:57;47595:143;:::o;47744:182::-;47884:34;47880:1;47872:6;47868:14;47861:58;47850:76;:::o;47932:143::-;48068:3;48064:1;48056:6;48052:14;48045:27;48038:37;:::o;48077:174::-;48213:34;48209:1;48201:6;48197:14;48190:58;48183:68;:::o;48253:147::-;48389:3;48385:1;48377:6;48373:14;48366:27;48359:41;:::o;48406:174::-;48546:26;48542:1;48534:6;48530:14;48523:50;48512:68;:::o;48586:220::-;48726:34;48722:1;48714:6;48710:14;48703:58;48795:3;48790:2;48782:6;48778:15;48771:28;48692:114;:::o;48812:179::-;48952:31;48948:1;48940:6;48936:14;48929:55;48918:73;:::o;48997:114::-;49103:8;:::o;49117:231::-;49257:34;49253:1;49245:6;49241:14;49234:58;49326:14;49321:2;49313:6;49309:15;49302:39;49223:125;:::o;49354:233::-;49494:34;49490:1;49482:6;49478:14;49471:58;49563:16;49558:2;49550:6;49546:15;49539:41;49460:127;:::o;49593:214::-;49733:66;49729:1;49721:6;49717:14;49710:90;49699:108;:::o;49813:122::-;49886:24;49904:5;49886:24;:::i;:::-;49879:5;49876:35;49866:2;;49925:1;49922;49915:12;49866:2;49856:79;:::o;49941:116::-;50011:21;50026:5;50011:21;:::i;:::-;50004:5;50001:32;49991:2;;50047:1;50044;50037:12;49991:2;49981:76;:::o;50063:120::-;50135:23;50152:5;50135:23;:::i;:::-;50128:5;50125:34;50115:2;;50173:1;50170;50163:12;50115:2;50105:78;:::o;50189:122::-;50262:24;50280:5;50262:24;:::i;:::-;50255:5;50252:35;50242:2;;50301:1;50298;50291:12;50242:2;50232:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4377000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1690","batchCount()":"1214","batchDetails(uint256)":"infinite","batchSize()":"1247","checkUpkeep(bytes)":"infinite","getApproved(uint256)":"2702","isApprovedForAll(address,address)":"infinite","lastRevealed()":"1183","maxSupply()":"infinite","mint(uint256)":"infinite","mintCost()":"infinite","name()":"infinite","owner()":"1290","ownerOf(uint256)":"1726","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"24531","revealInterval()":"1271","revealPendingMetadata()":"infinite","revealedCount()":"1182","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","setRevealBatchSize(uint256)":"21495","setRevealInterval(uint256)":"21429","shouldReveal()":"infinite","supportsInterface(bytes4)":"998","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"1213","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"24835","withdrawProceeds()":"infinite"},"internal":{"_formatTokenURI(string memory)":"infinite","_fulfillRandomnessForMetadata(uint256)":"infinite","_generateSVG(uint256,bool)":"infinite","_getTokenRandomness(uint256)":"infinite","_substring(string memory,uint256,uint256)":"infinite","_svgToImageURI(string memory)":"infinite","fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchCount()":"06f13056","batchDetails(uint256)":"f8190966","batchSize()":"f4daaba1","checkUpkeep(bytes)":"6e04ff0d","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","lastRevealed()":"7b4fab5a","maxSupply()":"d5abeb01","mint(uint256)":"a0712d68","mintCost()":"bdb4b848","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","revealInterval()":"247cd8ad","revealPendingMetadata()":"96634a40","revealedCount()":"bbd78e93","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setRevealBatchSize(uint256)":"aaae4e23","setRevealInterval(uint256)":"5c65d81f","shouldReveal()":"cf3b94cd","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_vrfSubscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_vrfGasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"_vrfCallbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLINK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RevealCriteriaNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RevealInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawProceedsFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"BatchRevealFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"BatchRevealRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"batchDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRevealed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealPendingMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealBatchSize\",\"type\":\"uint256\"}],\"name\":\"setRevealBatchSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revealInterval\",\"type\":\"uint256\"}],\"name\":\"setRevealInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReveal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCollection.sol\":\"NFTCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/INFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface INFTCollection {\\n    function mint(uint256 _amount) external payable;\\n\\n    function withdrawProceeds() external;\\n\\n    function revealedCount() external view returns(uint256);\\n\\n    function lastRevealed() external view returns(uint256);\\n\\n    function batchSize() external view returns(uint256);\\n\\n    function revealInterval() external view returns(uint256);\\n\\n    function mintCost() external view returns (uint256);\\n\\n    function maxSupply() external view returns (uint256);\\n\\n    function shouldReveal() external view returns (bool);\\n\\n    function revealPendingMetadata() external returns (uint256 requestId);\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize) external;\\n\\n    function setRevealInterval(uint256 _revealInterval) external;\\n}\\n\",\"keccak256\":\"0x7d1a0ec803647708dfc18e7e377c954e6fbd106c7da7d0da0904d0fb475bb157\",\"license\":\"MIT\"},\"contracts/NFTCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\\\";\\nimport \\\"./INFTCollection.sol\\\";\\n\\ncontract NFTCollection is\\n    INFTCollection,\\n    Ownable,\\n    ERC721Enumerable,\\n    VRFConsumerBaseV2,\\n    KeeperCompatibleInterface\\n{\\n    // STRUCTS\\n\\n    struct Metadata {\\n        uint256 startIndex;\\n        uint256 endIndex;\\n        uint256 entropy;\\n    }\\n\\n    // IMMUTABLE STORAGE\\n\\n    uint256 private immutable MAX_SUPPLY;\\n    uint256 private immutable MINT_COST;\\n\\n    // MUTABLE STORAGE\\n\\n    uint256 private s_revealedCount;\\n    uint256 private s_revealBatchSize;\\n    uint256 private s_revealInterval;\\n    uint256 private s_lastRevealed = block.timestamp;\\n    bool private s_revealInProgress;\\n    Metadata[] private s_metadatas;\\n\\n    // VRF CONSTANTS & IMMUTABLE\\n\\n    uint16 private constant VRF_REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant VRF_NUM_WORDS = 1;\\n\\n    VRFCoordinatorV2Interface private immutable VRF_COORDINATOR_V2;\\n    uint64 private immutable VRF_SUBSCRIPTION_ID;\\n    bytes32 private immutable VRF_GAS_LANE;\\n    uint32 private immutable VRF_CALLBACK_GAS_LIMIT;\\n\\n    // EVENTS\\n\\n    event BatchRevealRequested(uint256 requestId);\\n    event BatchRevealFinished(uint256 startIndex, uint256 endIndex);\\n\\n    // ERRORS\\n\\n    error InvalidAmount();\\n    error MaxSupplyReached();\\n    error InsufficientFunds();\\n    error RevealCriteriaNotMet();\\n    error RevealInProgress();\\n    error InsufficientLINK();\\n    error WithdrawProceedsFailed();\\n    error NonExistentToken();\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _maxSupply,\\n        uint256 _mintCost,\\n        uint256 _revealBatchSize,\\n        uint256 _revealInterval,\\n        address _vrfCoordinatorV2,\\n        uint64 _vrfSubscriptionId,\\n        bytes32 _vrfGasLane,\\n        uint32 _vrfCallbackGasLimit\\n    ) ERC721(_name, _symbol) VRFConsumerBaseV2(_vrfCoordinatorV2) {\\n        MAX_SUPPLY = _maxSupply;\\n        MINT_COST = _mintCost;\\n        VRF_COORDINATOR_V2 = VRFCoordinatorV2Interface(_vrfCoordinatorV2);\\n        VRF_SUBSCRIPTION_ID = _vrfSubscriptionId;\\n        VRF_GAS_LANE = _vrfGasLane;\\n        VRF_CALLBACK_GAS_LIMIT = _vrfCallbackGasLimit;\\n        s_revealBatchSize = _revealBatchSize;\\n        s_revealInterval = _revealInterval;\\n    }\\n\\n    // ACTIONS\\n\\n    function mint(uint256 _amount) external payable override {\\n        uint256 totalSupply = totalSupply();\\n        if (_amount == 0) {\\n            revert InvalidAmount();\\n        }\\n        if (totalSupply + _amount > MAX_SUPPLY) {\\n            revert MaxSupplyReached();\\n        }\\n        if (msg.value < MINT_COST * _amount) {\\n            revert InsufficientFunds();\\n        }\\n        for (uint256 i = 1; i <= _amount; i++) {\\n            _safeMint(msg.sender, totalSupply + i);\\n        }\\n    }\\n\\n    function withdrawProceeds() external override onlyOwner {\\n        (bool sent, ) = payable(owner()).call{value: address(this).balance}(\\\"\\\");\\n        if (!sent) {\\n            revert WithdrawProceedsFailed();\\n        }\\n    }\\n\\n    // GETTERS\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override\\n        returns (string memory)\\n    {\\n        if (!_exists(tokenId)) {\\n            revert NonExistentToken();\\n        }\\n        (uint256 randomness, bool metadataCleared) = _getTokenRandomness(tokenId);\\n        string memory svg = _generateSVG(randomness, metadataCleared);\\n        string memory svgEncoded = _svgToImageURI(svg);\\n        return _formatTokenURI(svgEncoded);\\n    }\\n\\n    function revealedCount() external view override returns (uint256) {\\n        return s_revealedCount;\\n    }\\n\\n    function lastRevealed() external view override returns (uint256) {\\n        return s_lastRevealed;\\n    }\\n\\n    function batchSize() external view override returns (uint256) {\\n        return s_revealBatchSize;\\n    }\\n\\n    function revealInterval() external view override returns (uint256) {\\n        return s_revealInterval;\\n    }\\n\\n    function batchCount() external view returns (uint256) {\\n        return s_metadatas.length;\\n    }\\n\\n    function batchDetails(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        Metadata memory batch = s_metadatas[index];\\n        return (batch.startIndex, batch.endIndex, batch.entropy);\\n    }\\n\\n    function mintCost() public view override returns (uint256) {\\n        return MINT_COST;\\n    }\\n\\n    function maxSupply() external view override returns (uint256) {\\n        return MAX_SUPPLY;\\n    }\\n\\n    // HELPERS\\n\\n    function _getTokenRandomness(uint256 tokenId)\\n        internal\\n        view\\n        returns (uint256 randomness, bool metadataCleared)\\n    {\\n        for (uint256 i = 0; i < s_metadatas.length; i++) {\\n            if (\\n                tokenId >= s_metadatas[i].startIndex &&\\n                tokenId < s_metadatas[i].endIndex\\n            ) {\\n                randomness = uint256(\\n                    keccak256(abi.encode(s_metadatas[i].entropy, tokenId))\\n                );\\n                metadataCleared = true;\\n            }\\n        }\\n    }\\n\\n    function _formatTokenURI(string memory imageURI)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"data:application/json;base64,\\\",\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{',\\n                                    '\\\"name\\\":\\\"NFT\\\", ',\\n                                    '\\\"description\\\":\\\"Batch-revealed NFT!\\\", ',\\n                                    '\\\"attributes\\\":\\\"\\\", ',\\n                                    '\\\"image\\\":\\\"', imageURI, '\\\"',\\n                                '}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function _generateSVG(uint256 _randomness, bool _metadataCleared)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        string[4] memory parts;\\n        parts[0] = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 350 350\\\">';\\n        if (_metadataCleared) {\\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 59px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"black\\\" /><text class=\\\"base\\\">';\\n            string[6] memory svgRows;\\n            string memory randomnessString = Strings.toHexString(_randomness, 32);\\n            for (uint8 i = 0; i < 6; i++) {\\n                string memory partialString = _substring(randomnessString, i * 11, (i + 1) * 11);\\n                svgRows[i] = string(\\n                    abi.encodePacked(\\n                        '<tspan x=\\\"16\\\" dy=\\\"56\\\">',\\n                        partialString,\\n                        \\\"</tspan>\\\"\\n                    )\\n                );\\n            }\\n            parts[2] = string(\\n                abi.encodePacked(\\n                    svgRows[0],\\n                    svgRows[1],\\n                    svgRows[2],\\n                    svgRows[3],\\n                    svgRows[4],\\n                    svgRows[5]\\n                )\\n            );\\n        } else {\\n            parts[1] = '<style>.base { fill: white; font-family: serif; font-size: 350px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"black\\\" /><text x=\\\"90\\\" y=\\\"295\\\" class=\\\"base\\\">';\\n            parts[2] = \\\"?\\\";\\n        }\\n        parts[3] = \\\"</text></svg>\\\";\\n        return string(abi.encodePacked(parts[0], parts[1], parts[2], parts[3]));\\n    }\\n\\n    function _svgToImageURI(string memory svg)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        string memory baseURL = \\\"data:image/svg+xml;base64,\\\";\\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\\n    }\\n\\n    function _substring(\\n        string memory str,\\n        uint256 startIndex,\\n        uint256 endIndex\\n    ) internal pure returns (string memory) {\\n        bytes memory strBytes = bytes(str);\\n        bytes memory result = new bytes(endIndex - startIndex);\\n        for (uint256 i = startIndex; i < endIndex; i++) {\\n            result[i - startIndex] = strBytes[i];\\n        }\\n        return string(result);\\n    }\\n\\n    // REVEAL\\n\\n    function shouldReveal() public view override returns (bool) {\\n        uint256 unrevealedCount = totalSupply() - s_revealedCount;\\n        if (unrevealedCount == 0) {\\n            return false;\\n        }\\n        bool batchSizeCriteria = false;\\n        if (s_revealBatchSize > 0 && unrevealedCount >= s_revealBatchSize) {\\n            batchSizeCriteria = true;\\n        }\\n        bool intervalCriteria = false;\\n        if (\\n            s_revealInterval > 0 &&\\n            block.timestamp - s_lastRevealed > s_revealInterval\\n        ) {\\n            intervalCriteria = true;\\n        }\\n        return (batchSizeCriteria || intervalCriteria);\\n    }\\n\\n    function revealPendingMetadata()\\n        public\\n        override\\n        returns (uint256 requestId){\\n        if (s_revealInProgress) {\\n            revert RevealInProgress();\\n        }\\n        if (!shouldReveal()) {\\n            revert RevealCriteriaNotMet();\\n        }\\n        requestId = VRF_COORDINATOR_V2.requestRandomWords(\\n            VRF_GAS_LANE,\\n            VRF_SUBSCRIPTION_ID,\\n            VRF_REQUEST_CONFIRMATIONS,\\n            VRF_CALLBACK_GAS_LIMIT,\\n            VRF_NUM_WORDS\\n        );\\n        s_revealInProgress = true;\\n        emit BatchRevealRequested(requestId);\\n    }\\n\\n    function _fulfillRandomnessForMetadata(uint256 randomness) internal {\\n        uint256 totalSupply = totalSupply();\\n        uint256 startIndex = s_revealedCount + 1;\\n        uint256 endIndex = totalSupply + 1;\\n        s_metadatas.push(\\n            Metadata({\\n                startIndex: startIndex,\\n                endIndex: endIndex,\\n                entropy: randomness\\n            })\\n        );\\n        s_revealedCount = totalSupply;\\n        s_lastRevealed = block.timestamp;\\n        s_revealInProgress = false;\\n        emit BatchRevealFinished(startIndex, endIndex);\\n    }\\n\\n    // VRF\\n\\n    function fulfillRandomWords(uint256, uint256[] memory randomWords)\\n        internal\\n        override\\n    {\\n        _fulfillRandomnessForMetadata(randomWords[0]);\\n    }\\n\\n    // KEEPERS\\n\\n    function checkUpkeep(bytes calldata)\\n        external\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory)\\n    {\\n        upkeepNeeded = !s_revealInProgress && shouldReveal();\\n    }\\n\\n    function performUpkeep(bytes calldata) external override {\\n        revealPendingMetadata();\\n    }\\n\\n    // SETTERS\\n\\n    function setRevealBatchSize(uint256 _revealBatchSize)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        s_revealBatchSize = _revealBatchSize;\\n    }\\n\\n    function setRevealInterval(uint256 _revealInterval)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        s_revealInterval = _revealInterval;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override\\n        returns (bool)\\n    {\\n        return\\n            super.supportsInterface(interfaceId) ||\\n            interfaceId == type(INFTCollection).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xc36918ba6cbc42588777033977b1a0e462a1b3477c476d0626f16690f617ed0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":212,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":343,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":345,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":349,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":353,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_balances","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":357,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_tokenApprovals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":363,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_operatorApprovals","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1333,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_ownedTokens","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1337,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_ownedTokensIndex","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1340,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_allTokens","offset":0,"slot":"9","type":"t_array(t_uint256)dyn_storage"},{"astId":1344,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"_allTokensIndex","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2434,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealedCount","offset":0,"slot":"11","type":"t_uint256"},{"astId":2436,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealBatchSize","offset":0,"slot":"12","type":"t_uint256"},{"astId":2438,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealInterval","offset":0,"slot":"13","type":"t_uint256"},{"astId":2442,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_lastRevealed","offset":0,"slot":"14","type":"t_uint256"},{"astId":2444,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_revealInProgress","offset":0,"slot":"15","type":"t_bool"},{"astId":2448,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"s_metadatas","offset":0,"slot":"16","type":"t_array(t_struct(Metadata)2428_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Metadata)2428_storage)dyn_storage":{"base":"t_struct(Metadata)2428_storage","encoding":"dynamic_array","label":"struct NFTCollection.Metadata[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Metadata)2428_storage":{"encoding":"inplace","label":"struct NFTCollection.Metadata","members":[{"astId":2423,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"startIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":2425,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"endIndex","offset":0,"slot":"1","type":"t_uint256"},{"astId":2427,"contract":"contracts/NFTCollection.sol:NFTCollection","label":"entropy","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}