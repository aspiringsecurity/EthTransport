name: Cron Pins

on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:

jobs:
  update:
    name: Update pin statuses and size
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ['staging', 'production']
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout latest cron release tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match='cron-*')
          git checkout $LATEST_TAG
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: bahmutov/npm-install@v1
      - name: Run job
        env:
          DEBUG: '*'
          ENV: ${{ matrix.env }}
          STAGING_DATABASE_CONNECTION: ${{ secrets.STAGING_DATABASE_CONNECTION }}
          PROD_DATABASE_CONNECTION: ${{ secrets.PROD_DATABASE_CONNECTION }}
          CLUSTER1_API_URL: ${{ secrets.CLUSTER1_API_URL }}
          CLUSTER1_BASIC_AUTH_TOKEN: ${{ secrets.CLUSTER1_BASIC_AUTH_TOKEN }}
          CLUSTER2_API_URL: ${{ secrets.CLUSTER2_API_URL }}
          CLUSTER2_BASIC_AUTH_TOKEN: ${{ secrets.CLUSTER2_BASIC_AUTH_TOKEN }}
          CLUSTER3_API_URL: ${{ secrets.CLUSTER3_API_URL }}
          CLUSTER3_BASIC_AUTH_TOKEN: ${{ secrets.CLUSTER3_BASIC_AUTH_TOKEN }}
        run: yarn --cwd packages/cron start:pins
      - name: Heartbeat
        if: ${{ success() }}
        run: ./packages/tools/cli.js heartbeat --token ${{ secrets.OPSGENIE_KEY }} --name cron-nft-pins
